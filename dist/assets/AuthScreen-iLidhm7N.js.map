{"version":3,"file":"AuthScreen-iLidhm7N.js","sources":["../../src/pages/screens/Auth/AuthScreen.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\nimport { Eye, EyeOff, Mail, Lock, User, Check } from 'lucide-react'\nimport { useAuth } from '../../../contexts/AuthContext.jsx'\nimport { SEO } from '../../../components/SEO'\n\nexport default function AuthScreen() {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { login, register } = useAuth()\n  const [isLogin, setIsLogin] = useState(true)\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  })\n\n  const from = location.state?.from?.pathname || '/'\n\n  const passwordRequirements = [\n    { test: pwd => pwd.length >= 8, text: 'At least 8 characters' },\n    { test: pwd => /[A-Z]/.test(pwd), text: 'One uppercase letter' },\n    { test: pwd => /[a-z]/.test(pwd), text: 'One lowercase letter' },\n    { test: pwd => /\\d/.test(pwd), text: 'One number' },\n  ]\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }))\n  }\n\n  const isPasswordValid = passwordRequirements.every(req =>\n    req.test(formData.password)\n  )\n  const doPasswordsMatch =\n    formData.password && formData.password === formData.confirmPassword\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const result = await login({\n        email: formData.email,\n        password: formData.password,\n      })\n\n      if (result.success) {\n        navigate(from, { replace: true })\n      } else {\n        // Handle error - in a real app, you might want to show an error message\n        console.error(result.error || 'Login failed')\n      }\n    } catch {\n      // Handle error\n      console.error('Login failed. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleRegister = async e => {\n    e.preventDefault()\n\n    if (!isPasswordValid) {\n      // Handle error\n      console.error('Please meet all password requirements')\n      return\n    }\n\n    if (!doPasswordsMatch) {\n      // Handle error\n      console.error('Passwords do not match')\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const userData = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password,\n      }\n\n      const result = await register(userData)\n\n      if (result.success) {\n        navigate(from, { replace: true })\n      } else {\n        // Handle error\n        console.error(result.error || 'Registration failed. Please try again.')\n      }\n    } catch {\n      // Handle error\n      console.error('Registration failed. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleSubmit = isLogin ? handleLogin : handleRegister\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-stone-50 p-4 overflow-hidden\">\n      <SEO\n        title={isLogin ? 'Sign In - IVOLEX' : 'Create Account - IVOLEX'}\n        description={\n          isLogin\n            ? 'Sign in to your IVOLEX account to access your orders, wishlist, and account settings.'\n            : 'Join IVOLEX today and enjoy personalized shopping, exclusive offers, and faster checkout.'\n        }\n        keywords={\n          isLogin\n            ? 'login, sign in, account, ivolex'\n            : 'register, sign up, create account, join ivolex'\n        }\n      />\n\n      <div className=\"w-full max-w-md\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">\n            {isLogin ? 'Welcome Back' : 'Create Your Account'}\n          </h1>\n          <p className=\"text-stone-600\">\n            {isLogin\n              ? 'Sign in to your account to continue shopping'\n              : 'Join IVOLEX and start your shopping journey'}\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-segment-xl p-8\">\n          <div className=\"flex mb-6\">\n            <button\n              onClick={() => setIsLogin(true)}\n              className={`flex-1 py-3 px-4 text-center font-medium rounded-l-xl transition-colors ${\n                isLogin\n                  ? 'bg-brand-600 text-white'\n                  : 'bg-stone-100 text-stone-600 hover:bg-stone-200'\n              }`}\n            >\n              Sign In\n            </button>\n            <button\n              onClick={() => setIsLogin(false)}\n              className={`flex-1 py-3 px-4 text-center font-medium rounded-r-xl transition-colors ${\n                !isLogin\n                  ? 'bg-brand-600 text-white'\n                  : 'bg-stone-100 text-stone-600 hover:bg-stone-200'\n              }`}\n            >\n              Sign Up\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-5\">\n            {!isLogin && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label\n                    htmlFor=\"firstName\"\n                    className=\"block text-sm font-medium mb-2\"\n                  >\n                    First Name\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      value={formData.firstName}\n                      onChange={handleInputChange}\n                      className=\"w-full border rounded-xl px-4 py-3 pl-12 focus:outline-none focus:ring-2 focus:ring-brand-500\"\n                      placeholder=\"John\"\n                      required\n                    />\n                    <User\n                      size={20}\n                      className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-stone-400\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label\n                    htmlFor=\"lastName\"\n                    className=\"block text-sm font-medium mb-2\"\n                  >\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    className=\"w-full border rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-brand-500\"\n                    placeholder=\"Doe\"\n                    required\n                  />\n                </div>\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                Email Address\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"w-full border rounded-xl px-4 py-3 pl-12 focus:outline-none focus:ring-2 focus:ring-brand-500\"\n                  placeholder=\"your@email.com\"\n                  required\n                />\n                <Mail\n                  size={20}\n                  className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-stone-400\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium mb-2\"\n              >\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"w-full border rounded-xl px-4 py-3 pl-12 pr-12 focus:outline-none focus:ring-2 focus:ring-brand-500\"\n                  placeholder=\"Create a strong password\"\n                  required\n                />\n                <Lock\n                  size={20}\n                  className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-stone-400\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-stone-400 hover:text-stone-600\"\n                >\n                  {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                </button>\n              </div>\n\n              {!isLogin && formData.password && (\n                <div className=\"mt-2 space-y-1\">\n                  {passwordRequirements.map((req, index) => (\n                    <div\n                      key={index}\n                      className=\"flex items-center gap-2 text-xs\"\n                    >\n                      <div\n                        className={`w-3 h-3 rounded-full flex items-center justify-center ${\n                          req.test(formData.password)\n                            ? 'bg-green-100'\n                            : 'bg-stone-100'\n                        }`}\n                      >\n                        {req.test(formData.password) && (\n                          <Check size={8} className=\"text-green-600\" />\n                        )}\n                      </div>\n                      <span\n                        className={\n                          req.test(formData.password)\n                            ? 'text-green-600'\n                            : 'text-stone-500'\n                        }\n                      >\n                        {req.text}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {!isLogin && (\n              <div>\n                <label\n                  htmlFor=\"confirmPassword\"\n                  className=\"block text-sm font-medium mb-2\"\n                >\n                  Confirm Password\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    className={`w-full border rounded-xl px-4 py-3 pl-12 pr-12 focus:outline-none focus:ring-2 ${\n                      formData.confirmPassword && !doPasswordsMatch\n                        ? 'border-red-300 focus:ring-red-500'\n                        : 'focus:ring-brand-500'\n                    }`}\n                    placeholder=\"Confirm your password\"\n                    required\n                  />\n                  <Lock\n                    size={20}\n                    className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-stone-400\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-stone-400 hover:text-stone-600\"\n                  >\n                    {showConfirmPassword ? (\n                      <EyeOff size={20} />\n                    ) : (\n                      <Eye size={20} />\n                    )}\n                  </button>\n                </div>\n                {formData.confirmPassword && !doPasswordsMatch && (\n                  <p className=\"text-xs text-red-600 mt-1\">\n                    Passwords do not match\n                  </p>\n                )}\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={\n                isLoading ||\n                (!isLogin && (!isPasswordValid || !doPasswordsMatch))\n              }\n              className=\"w-full btn btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <span className=\"flex items-center justify-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  {isLogin ? 'Signing in...' : 'Creating account...'}\n                </span>\n              ) : isLogin ? (\n                'Sign In'\n              ) : (\n                'Create Account'\n              )}\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-stone-600\">\n              {isLogin\n                ? \"Don't have an account? \"\n                : 'Already have an account? '}\n              <button\n                onClick={() => setIsLogin(!isLogin)}\n                className=\"text-brand-600 hover:text-brand-700 font-medium\"\n              >\n                {isLogin ? 'Sign up' : 'Sign in'}\n              </button>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"text-center mt-6\">\n          <Link\n            to=\"/shop\"\n            className=\"text-sm text-stone-500 hover:text-stone-700\"\n          >\n            ← Continue shopping as guest\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["AuthScreen","navigate","useNavigate","location","useLocation","login","register","useAuth","isLogin","setIsLogin","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","isLoading","setIsLoading","formData","setFormData","firstName","lastName","email","password","confirmPassword","from","state","pathname","passwordRequirements","test","pwd","length","text","handleInputChange","e","name","value","target","prev","isPasswordValid","every","req","doPasswordsMatch","handleSubmit","async","preventDefault","success","replace","userData","jsxs","className","children","jsx","SEO","title","description","keywords","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","required","User","size","Mail","Lock","EyeOff","Eye","map","index","Check","disabled","Link","to"],"mappings":"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"}