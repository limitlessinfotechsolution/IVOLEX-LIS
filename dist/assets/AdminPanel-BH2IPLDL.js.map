{"version":3,"file":"AdminPanel-BH2IPLDL.js","sources":["../../src/components/common/AdminRoute.jsx","../../src/components/ui/NotificationBell.jsx","../../src/components/analytics/AnalyticsExport.jsx","../../src/pages/screens/Admin/AdminDashboard.jsx","../../src/components/admin/BulkOperationsManager.jsx","../../src/pages/screens/Admin/ProductCatalog.jsx","../../src/pages/screens/Admin/ThemeEditor.jsx","../../src/pages/screens/Admin/CustomizationRequests.jsx","../../src/pages/screens/Admin/UserManagement.jsx","../../src/pages/screens/Admin/IndiaAnalytics.jsx","../../src/pages/screens/Admin/RecommendationManagement.jsx","../../src/pages/screens/Admin/RoleManagement.jsx","../../src/contexts/AdminSecurityContext.jsx","../../src/components/admin/ActivityTracker.jsx","../../src/components/intelligence/AnomalyDetection.jsx","../../src/components/intelligence/CustomDashboardBuilder.jsx","../../src/components/admin/ThemeManager.jsx","../../src/components/admin/LanguageManager.jsx","../../src/pages/screens/Admin/AdminPanel.jsx","../../src/pages/screens/Admin/InventoryManagement.jsx","../../src/pages/screens/Admin/ShippingManagement.jsx","../../src/pages/screens/Admin/AuditLogs.jsx","../../src/pages/screens/Admin/AdminActivityPage.jsx","../../src/pages/screens/Admin/IntelligenceDashboard.jsx","../../src/pages/screens/Admin/Security/SessionManager.jsx","../../src/pages/screens/Admin/AdvancedSettings.jsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext.jsx'\nimport { useAdminAuth } from '../../contexts/AdminAuthContext.jsx'\n\nconst AdminRoute = ({ children }) => {\n  const navigate = useNavigate()\n  const { isAuthenticated, isLoading: authLoading } = useAuth()\n  const { isAdminAuthenticated, isAdminLoading } = useAdminAuth()\n\n  useEffect(() => {\n    // Redirect if not authenticated or not admin\n    if (!authLoading && !isAdminLoading) {\n      if (!isAuthenticated) {\n        // Not authenticated at all, redirect to login\n        navigate('/login', {\n          state: {\n            from: location.pathname,\n            message: 'Please log in to access the admin panel',\n          },\n        })\n      } else if (!isAdminAuthenticated) {\n        // Authenticated but not admin, redirect to home\n        navigate('/', {\n          state: {\n            message: 'Access denied. Admin privileges required.',\n          },\n        })\n      }\n    }\n  }, [\n    isAuthenticated,\n    isAdminAuthenticated,\n    authLoading,\n    isAdminLoading,\n    navigate,\n  ])\n\n  // Show loading state while checking auth\n  if (authLoading || isAdminLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-brand-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-stone-600\">Verifying admin access...</p>\n        </div>\n      </div>\n    )\n  }\n\n  // Render children only if admin authenticated\n  if (isAuthenticated && isAdminAuthenticated) {\n    return children\n  }\n\n  // Return null while redirecting\n  return null\n}\n\nexport default AdminRoute\n","import { useState, useRef, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useNotifications } from '../../contexts/NotificationContext'\nimport { useI18n } from '../../contexts/I18nContext'\n\nconst NotificationBell = () => {\n  const {\n    notifications,\n    getUnreadCount,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n  } = useNotifications()\n  const { t, language, isRTL } = useI18n()\n  const [isOpen, setIsOpen] = useState(false)\n  const [filter, setFilter] = useState('all')\n  const bellRef = useRef(null)\n\n  const unreadCount = getUnreadCount()\n  const maxDisplayNotifications = 5\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (bellRef.current && !bellRef.current.contains(event.target)) {\n        setIsOpen(false)\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [isOpen])\n\n  const formatTimeAgo = timestamp => {\n    const now = new Date()\n    const notificationTime = new Date(timestamp)\n    const diffInMinutes = Math.floor((now - notificationTime) / (1000 * 60))\n\n    if (diffInMinutes < 1) {\n      return language === 'ar' ? 'الآن' : 'now'\n    } else if (diffInMinutes < 60) {\n      return language === 'ar'\n        ? `منذ ${diffInMinutes} دقيقة`\n        : `${diffInMinutes}m ago`\n    } else if (diffInMinutes < 1440) {\n      const hours = Math.floor(diffInMinutes / 60)\n      return language === 'ar' ? `منذ ${hours} ساعة` : `${hours}h ago`\n    } else {\n      const days = Math.floor(diffInMinutes / 1440)\n      return language === 'ar' ? `منذ ${days} يوم` : `${days}d ago`\n    }\n  }\n\n  const filteredNotifications = notifications.filter(notification => {\n    if (filter === 'unread') return !notification.read\n    if (filter === 'orders')\n      return (\n        notification.type.includes('order') ||\n        notification.type.includes('payment') ||\n        notification.type.includes('shipping')\n      )\n    if (filter === 'customization')\n      return notification.type.includes('customization')\n    return true\n  })\n\n  const displayedNotifications = filteredNotifications.slice(\n    0,\n    maxDisplayNotifications\n  )\n\n  return (\n    <div className=\"relative\" ref={bellRef}>\n      {/* Bell Icon */}\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative p-2 text-foreground/70 hover:text-foreground transition-colors rounded-full hover:bg-surface/50\"\n      >\n        <motion.div\n          animate={unreadCount > 0 ? { rotate: [0, -10, 10, -10, 0] } : {}}\n          transition={{\n            duration: 0.5,\n            repeat: unreadCount > 0 ? 2 : 0,\n            repeatDelay: 3,\n          }}\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M15 17h5l-5 5v-5zM4 19v-7a6 6 0 0112 0v7\"\n            />\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 21c0 .6.4 1 1 1h4c.6 0 1-.4 1-1\"\n            />\n          </svg>\n        </motion.div>\n\n        {/* Unread Badge */}\n        {unreadCount > 0 && (\n          <motion.span\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-bold\"\n          >\n            {unreadCount > 9 ? '9+' : unreadCount}\n          </motion.span>\n        )}\n      </motion.button>\n\n      {/* Dropdown */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95, y: 10 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.95, y: 10 }}\n            className={`absolute ${isRTL ? 'left-0' : 'right-0'} mt-2 w-96 bg-surface border border-border rounded-xl shadow-lg z-50 max-h-[500px] overflow-hidden`}\n          >\n            {/* Header */}\n            <div className=\"p-4 border-b border-border\">\n              <div\n                className={`flex items-center justify-between mb-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <h3 className=\"font-semibold text-foreground\">\n                  {t('notifications.title', 'Notifications')}\n                </h3>\n                {unreadCount > 0 && (\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={markAllAsRead}\n                    className=\"text-sm text-primary hover:text-primary/80 font-medium\"\n                  >\n                    {t('notifications.markAllRead', 'Mark all read')}\n                  </motion.button>\n                )}\n              </div>\n\n              {/* Filter Tabs */}\n              <div\n                className={`flex gap-1 bg-background/50 p-1 rounded-lg ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                {[\n                  { key: 'all', label: t('notifications.all', 'All') },\n                  { key: 'unread', label: t('notifications.unread', 'Unread') },\n                  { key: 'orders', label: t('notifications.orders', 'Orders') },\n                  {\n                    key: 'customization',\n                    label: t('notifications.customization', 'Custom'),\n                  },\n                ].map(tab => (\n                  <button\n                    key={tab.key}\n                    onClick={() => setFilter(tab.key)}\n                    className={`flex-1 px-3 py-1.5 text-xs font-medium rounded-md transition-colors ${\n                      filter === tab.key\n                        ? 'bg-primary text-primary-foreground'\n                        : 'text-foreground/60 hover:text-foreground hover:bg-surface/50'\n                    }`}\n                  >\n                    {tab.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Notifications List */}\n            <div className=\"overflow-y-auto max-h-80\">\n              {displayedNotifications.length === 0 ? (\n                <div className=\"p-8 text-center\">\n                  <div className=\"text-4xl mb-2\">🔔</div>\n                  <p className=\"text-foreground/60\">\n                    {filter === 'unread'\n                      ? t('notifications.noUnread', 'No unread notifications')\n                      : t(\n                          'notifications.noNotifications',\n                          'No notifications yet'\n                        )}\n                  </p>\n                </div>\n              ) : (\n                <div className=\"divide-y divide-border\">\n                  {displayedNotifications.map(notification => (\n                    <motion.div\n                      key={notification.id}\n                      initial={{ opacity: 0, x: isRTL ? 20 : -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      className={`p-4 hover:bg-background/50 transition-colors cursor-pointer ${\n                        !notification.read ? 'bg-primary/5' : ''\n                      }`}\n                      onClick={() =>\n                        !notification.read && markAsRead(notification.id)\n                      }\n                    >\n                      <div\n                        className={`flex gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <span className=\"text-xl\">{notification.icon}</span>\n                          {!notification.read && (\n                            <div className=\"w-2 h-2 bg-primary rounded-full mt-1 mx-auto\"></div>\n                          )}\n                        </div>\n\n                        <div\n                          className={`flex-1 min-w-0 ${isRTL ? 'text-right' : 'text-left'}`}\n                        >\n                          <div\n                            className={`flex items-start justify-between gap-2 ${isRTL ? 'flex-row-reverse' : ''}`}\n                          >\n                            <h4\n                              className={`font-medium text-foreground truncate ${!notification.read ? 'font-semibold' : ''}`}\n                            >\n                              {notification.title}\n                            </h4>\n                            <div\n                              className={`flex items-center gap-2 flex-shrink-0 ${isRTL ? 'flex-row-reverse' : ''}`}\n                            >\n                              <span className=\"text-xs text-foreground/50\">\n                                {formatTimeAgo(notification.createdAt)}\n                              </span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={e => {\n                                  e.stopPropagation()\n                                  deleteNotification(notification.id)\n                                }}\n                                className=\"text-foreground/40 hover:text-red-500 transition-colors\"\n                              >\n                                <svg\n                                  className=\"w-4 h-4\"\n                                  fill=\"none\"\n                                  stroke=\"currentColor\"\n                                  viewBox=\"0 0 24 24\"\n                                >\n                                  <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                  />\n                                </svg>\n                              </motion.button>\n                            </div>\n                          </div>\n                          <p className=\"text-sm text-foreground/70 mt-1 line-clamp-2\">\n                            {notification.message}\n                          </p>\n                          {notification.priority === 'urgent' && (\n                            <span className=\"inline-block mt-2 px-2 py-1 bg-red-100 text-red-700 text-xs rounded-full font-medium\">\n                              {t('notifications.urgent', 'Urgent')}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Footer */}\n            {filteredNotifications.length > maxDisplayNotifications && (\n              <div className=\"p-3 border-t border-border text-center\">\n                <button className=\"text-sm text-primary hover:text-primary/80 font-medium\">\n                  {t('notifications.viewAll', 'View all notifications')}\n                </button>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default NotificationBell\n","import { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Download,\n  FileText,\n  BarChart3,\n  CheckCircle,\n  X,\n  RefreshCw,\n} from 'lucide-react'\nimport { useI18n } from '../../contexts/I18nContext.jsx'\nimport { useAudit, AUDIT_ACTIONS } from '../../contexts/AuditContext.jsx'\n\nconst AnalyticsExport = ({\n  data,\n  timeRange = '7d',\n  selectedSegment = 'all',\n  onExport,\n}) => {\n  const [isExporting, setIsExporting] = useState(false)\n  const [showOptions, setShowOptions] = useState(false)\n  const [exportFormat, setExportFormat] = useState('pdf')\n  const [includeCharts, setIncludeCharts] = useState(true)\n  const [includeSummary, setIncludeSummary] = useState(true)\n  const [includeDetails, setIncludeDetails] = useState(true)\n\n  const { t, isRTL } = useI18n()\n  const { logAction } = useAudit()\n\n  const exportOptions = [\n    {\n      format: 'pdf',\n      label: t('analytics.exportPDF', 'PDF Report'),\n      icon: FileText,\n      description: t(\n        'analytics.pdfDescription',\n        'Professional formatted report'\n      ),\n    },\n    {\n      format: 'excel',\n      label: t('analytics.exportExcel', 'Excel Spreadsheet'),\n      icon: BarChart3,\n      description: t(\n        'analytics.excelDescription',\n        'Data with charts and tables'\n      ),\n    },\n    {\n      format: 'csv',\n      label: t('analytics.exportCSV', 'CSV Data'),\n      icon: Download,\n      description: t('analytics.csvDescription', 'Raw data for analysis'),\n    },\n  ]\n\n  const handleExport = async () => {\n    setIsExporting(true)\n    try {\n      const exportConfig = {\n        format: exportFormat,\n        timeRange,\n        segment: selectedSegment,\n        options: {\n          includeCharts,\n          includeSummary,\n          includeDetails,\n        },\n        data: {\n          overview: data.overview,\n          segments: data.segmentData,\n          orders: data.recentOrders,\n          customRequests: data.customRequests,\n          generatedAt: new Date().toISOString(),\n        },\n      }\n\n      let result\n      if (exportFormat === 'pdf') {\n        result = await generatePDFReport(exportConfig)\n      } else if (exportFormat === 'excel') {\n        result = await generateExcelReport(exportConfig)\n      } else if (exportFormat === 'csv') {\n        result = await generateCSVReport(exportConfig)\n      }\n\n      if (result.success) {\n        // Log the export action\n        await logAction(AUDIT_ACTIONS.EXPORT, 'analytics-report', {\n          format: exportFormat,\n          timeRange,\n          segment: selectedSegment,\n          fileSize: result.fileSize,\n          filename: result.filename,\n        })\n\n        // Trigger download\n        downloadFile(result.blob, result.filename)\n\n        if (onExport) {\n          onExport(result)\n        }\n\n        setShowOptions(false)\n      }\n    } catch (error) {\n      console.error('Export failed:', error)\n    } finally {\n      setIsExporting(false)\n    }\n  }\n\n  const generatePDFReport = async config => {\n    // Simulate PDF generation\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    const pdfContent = generatePDFContent(config)\n    const blob = new Blob([pdfContent], { type: 'application/pdf' })\n\n    return {\n      success: true,\n      blob,\n      filename: `analytics-report-${config.timeRange}-${Date.now()}.pdf`,\n      fileSize: blob.size,\n    }\n  }\n\n  const generateExcelReport = async config => {\n    // Simulate Excel generation\n    await new Promise(resolve => setTimeout(resolve, 1500))\n\n    const excelData = generateExcelData(config)\n    const csv = convertToCSV(excelData) // In real implementation, use a library like xlsx\n    const blob = new Blob([csv], { type: 'application/vnd.ms-excel' })\n\n    return {\n      success: true,\n      blob,\n      filename: `analytics-data-${config.timeRange}-${Date.now()}.xlsx`,\n      fileSize: blob.size,\n    }\n  }\n\n  const generateCSVReport = async config => {\n    // Generate CSV data\n    const csvData = generateCSVData(config)\n    const csv = convertToCSV(csvData)\n    const blob = new Blob([csv], { type: 'text/csv' })\n\n    return {\n      success: true,\n      blob,\n      filename: `analytics-data-${config.timeRange}-${Date.now()}.csv`,\n      fileSize: blob.size,\n    }\n  }\n\n  const generatePDFContent = config => {\n    // This would use a PDF library like jsPDF or Puppeteer\n    return `Analytics Report - ${config.timeRange.toUpperCase()}\nGenerated: ${new Date().toLocaleString()}\n\nRevenue: ${config.data.overview.totalRevenue} SAR\nOrders: ${config.data.overview.totalOrders}\nCustomers: ${config.data.overview.totalCustomers}`\n  }\n\n  const generateExcelData = config => {\n    return [\n      ['Metric', 'Value', 'Change'],\n      [\n        'Total Revenue',\n        config.data.overview.totalRevenue,\n        `${config.data.overview.changes.revenue}%`,\n      ],\n      [\n        'Total Orders',\n        config.data.overview.totalOrders,\n        `${config.data.overview.changes.orders}%`,\n      ],\n      [\n        'Total Customers',\n        config.data.overview.totalCustomers,\n        `${config.data.overview.changes.customers}%`,\n      ],\n      [\n        'Conversion Rate',\n        `${config.data.overview.conversionRate}%`,\n        `${config.data.overview.changes.conversion}%`,\n      ],\n    ]\n  }\n\n  const generateCSVData = config => {\n    return [\n      {\n        Metric: 'Total Revenue',\n        Value: config.data.overview.totalRevenue,\n        Change: `${config.data.overview.changes.revenue}%`,\n        Period: config.timeRange,\n        Segment: config.segment,\n      },\n      {\n        Metric: 'Total Orders',\n        Value: config.data.overview.totalOrders,\n        Change: `${config.data.overview.changes.orders}%`,\n        Period: config.timeRange,\n        Segment: config.segment,\n      },\n      {\n        Metric: 'Total Customers',\n        Value: config.data.overview.totalCustomers,\n        Change: `${config.data.overview.changes.customers}%`,\n        Period: config.timeRange,\n        Segment: config.segment,\n      },\n    ]\n  }\n\n  const convertToCSV = data => {\n    if (data.length === 0) return ''\n    const headers = Object.keys(data[0]).join(',')\n    const rows = data.map(row =>\n      Object.values(row)\n        .map(value =>\n          typeof value === 'string' && value.includes(',')\n            ? `\"${value.replace(/\"/g, '\"\"')}\"`\n            : value\n        )\n        .join(',')\n    )\n    return [headers, ...rows].join('\\n')\n  }\n\n  const downloadFile = (blob, filename) => {\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = filename\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    window.URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div className=\"relative\">\n      {/* Export Button */}\n      <motion.button\n        onClick={() => setShowOptions(!showOptions)}\n        disabled={isExporting}\n        className=\"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-xl hover:bg-primary/90 transition-colors disabled:opacity-50\"\n        whileHover={{ scale: isExporting ? 1 : 1.02 }}\n        whileTap={{ scale: isExporting ? 1 : 0.98 }}\n      >\n        {isExporting ? (\n          <RefreshCw size={16} className=\"animate-spin\" />\n        ) : (\n          <Download size={16} />\n        )}\n        {t('analytics.export', 'Export')}\n      </motion.button>\n\n      {/* Export Options Modal */}\n      <AnimatePresence>\n        {showOptions && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n            onClick={() => setShowOptions(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.95, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.95, opacity: 0 }}\n              className=\"bg-surface border border-border rounded-xl p-6 max-w-md w-full shadow-xl\"\n              onClick={e => e.stopPropagation()}\n            >\n              <div\n                className={`flex items-center justify-between mb-6 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <h3 className=\"text-lg font-semibold text-foreground flex items-center gap-2\">\n                  <Download className=\"h-5 w-5\" />\n                  {t('analytics.exportOptions', 'Export Options')}\n                </h3>\n                <button\n                  onClick={() => setShowOptions(false)}\n                  className=\"p-2 text-foreground/40 hover:text-foreground transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              {/* Export Format Selection */}\n              <div className=\"space-y-4 mb-6\">\n                <h4 className=\"font-medium text-foreground\">\n                  {t('analytics.selectFormat', 'Select Format')}\n                </h4>\n                <div className=\"space-y-2\">\n                  {exportOptions.map(option => {\n                    const Icon = option.icon\n                    return (\n                      <label\n                        key={option.format}\n                        className={`flex items-center gap-3 p-3 border rounded-lg cursor-pointer transition-all ${\n                          exportFormat === option.format\n                            ? 'border-primary bg-primary/10'\n                            : 'border-border hover:border-primary/50'\n                        }`}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"exportFormat\"\n                          value={option.format}\n                          checked={exportFormat === option.format}\n                          onChange={e => setExportFormat(e.target.value)}\n                          className=\"sr-only\"\n                        />\n                        <Icon\n                          className={`h-5 w-5 ${\n                            exportFormat === option.format\n                              ? 'text-primary'\n                              : 'text-foreground/60'\n                          }`}\n                        />\n                        <div className=\"flex-1\">\n                          <div\n                            className={`font-medium ${\n                              exportFormat === option.format\n                                ? 'text-primary'\n                                : 'text-foreground'\n                            }`}\n                          >\n                            {option.label}\n                          </div>\n                          <div className=\"text-sm text-foreground/60\">\n                            {option.description}\n                          </div>\n                        </div>\n                        {exportFormat === option.format && (\n                          <CheckCircle className=\"h-5 w-5 text-primary\" />\n                        )}\n                      </label>\n                    )\n                  })}\n                </div>\n              </div>\n\n              {/* Export Options */}\n              <div className=\"space-y-4 mb-6\">\n                <h4 className=\"font-medium text-foreground\">\n                  {t('analytics.includeInReport', 'Include in Report')}\n                </h4>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center gap-3 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={includeSummary}\n                      onChange={e => setIncludeSummary(e.target.checked)}\n                      className=\"w-4 h-4 text-primary bg-white border-gray-300 rounded focus:ring-primary\"\n                    />\n                    <span className=\"text-foreground\">\n                      {t('analytics.executiveSummary', 'Executive Summary')}\n                    </span>\n                  </label>\n                  <label className=\"flex items-center gap-3 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={includeCharts}\n                      onChange={e => setIncludeCharts(e.target.checked)}\n                      className=\"w-4 h-4 text-primary bg-white border-gray-300 rounded focus:ring-primary\"\n                    />\n                    <span className=\"text-foreground\">\n                      {t('analytics.chartsGraphs', 'Charts & Graphs')}\n                    </span>\n                  </label>\n                  <label className=\"flex items-center gap-3 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={includeDetails}\n                      onChange={e => setIncludeDetails(e.target.checked)}\n                      className=\"w-4 h-4 text-primary bg-white border-gray-300 rounded focus:ring-primary\"\n                    />\n                    <span className=\"text-foreground\">\n                      {t('analytics.detailedData', 'Detailed Data')}\n                    </span>\n                  </label>\n                </div>\n              </div>\n\n              {/* Current Settings Info */}\n              <div className=\"bg-background rounded-lg p-3 mb-6\">\n                <div className=\"text-sm space-y-1\">\n                  <div\n                    className={`flex justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n                  >\n                    <span className=\"text-foreground/60\">\n                      {t('analytics.timeRange', 'Time Range')}:\n                    </span>\n                    <span className=\"font-medium text-foreground\">\n                      {timeRange.toUpperCase()}\n                    </span>\n                  </div>\n                  <div\n                    className={`flex justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n                  >\n                    <span className=\"text-foreground/60\">\n                      {t('analytics.segment', 'Segment')}:\n                    </span>\n                    <span className=\"font-medium text-foreground capitalize\">\n                      {selectedSegment}\n                    </span>\n                  </div>\n                  <div\n                    className={`flex justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n                  >\n                    <span className=\"text-foreground/60\">\n                      {t('analytics.generatedAt', 'Generated')}:\n                    </span>\n                    <span className=\"font-medium text-foreground\">\n                      {new Date().toLocaleString()}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className={`flex gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}>\n                <motion.button\n                  onClick={handleExport}\n                  disabled={isExporting}\n                  className=\"flex-1 bg-primary text-white px-4 py-2 rounded-lg font-medium hover:bg-primary/90 transition-colors disabled:opacity-50 flex items-center justify-center gap-2\"\n                  whileHover={{ scale: isExporting ? 1 : 1.02 }}\n                  whileTap={{ scale: isExporting ? 1 : 0.98 }}\n                >\n                  {isExporting ? (\n                    <>\n                      <RefreshCw size={16} className=\"animate-spin\" />\n                      {t('analytics.generating', 'Generating...')}\n                    </>\n                  ) : (\n                    <>\n                      <Download size={16} />\n                      {t('analytics.generateReport', 'Generate Report')}\n                    </>\n                  )}\n                </motion.button>\n                <button\n                  onClick={() => setShowOptions(false)}\n                  className=\"px-4 py-2 border border-border rounded-lg text-foreground hover:bg-background/50 transition-colors\"\n                >\n                  {t('common.cancel', 'Cancel')}\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default AnalyticsExport\n","import { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport {\n  BarChart3,\n  Users,\n  ShoppingBag,\n  TrendingUp,\n  TrendingDown,\n  Package,\n  DollarSign,\n  RefreshCw,\n  Eye,\n} from 'lucide-react'\nimport { useSegment } from '../../../contexts/SegmentContext.jsx'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\nimport AnalyticsExport from '../../../components/analytics/AnalyticsExport.jsx'\n\nconst MOCK_ANALYTICS = {\n  overview: {\n    totalRevenue: 145420,\n    totalOrders: 1284,\n    totalCustomers: 892,\n    conversionRate: 3.4,\n    changes: {\n      revenue: 12.5,\n      orders: 8.2,\n      customers: 15.7,\n      conversion: -2.1,\n    },\n  },\n  segmentData: {\n    leather: { orders: 456, revenue: 67890, growth: 15.2 },\n    electronics: { orders: 389, revenue: 48520, growth: 22.1 },\n    furniture: { orders: 439, revenue: 29010, growth: 8.7 },\n  },\n  recentOrders: [\n    {\n      id: 'ORD-001',\n      customer: 'Ahmed Al-Rashid',\n      amount: 299.99,\n      status: 'completed',\n      segment: 'leather',\n      time: '2 hours ago',\n    },\n    {\n      id: 'ORD-002',\n      customer: 'Sarah Johnson',\n      amount: 149.99,\n      status: 'processing',\n      segment: 'electronics',\n      time: '4 hours ago',\n    },\n    {\n      id: 'ORD-003',\n      customer: 'Mohammed Hassan',\n      amount: 599.99,\n      status: 'pending',\n      segment: 'furniture',\n      time: '6 hours ago',\n    },\n  ],\n  customRequests: [\n    {\n      id: 'REQ-001',\n      customer: 'Fatima Al-Zahra',\n      category: 'Custom Bags',\n      status: 'new',\n      urgency: 'high',\n      time: '1 hour ago',\n    },\n    {\n      id: 'REQ-002',\n      customer: 'Omar Khalil',\n      category: 'Bespoke Wallets',\n      status: 'in-review',\n      urgency: 'normal',\n      time: '3 hours ago',\n    },\n    {\n      id: 'REQ-003',\n      customer: 'Layla Ibrahim',\n      category: 'Custom Furniture',\n      status: 'quoted',\n      urgency: 'low',\n      time: '1 day ago',\n    },\n  ],\n}\n\nconst SEGMENT_COLORS = {\n  leather: '#4E342E',\n  electronics: '#2962FF',\n  furniture: '#2E7D32',\n}\n\nexport default function AdminDashboard() {\n  const { theme } = useSegment()\n  const { t, isRTL } = useI18n()\n  const [timeRange, setTimeRange] = useState('7d')\n  const [selectedSegment, setSelectedSegment] = useState('all')\n  const [analytics, setAnalytics] = useState(MOCK_ANALYTICS)\n  const [refreshing, setRefreshing] = useState(false)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnalytics(prev => ({\n        ...prev,\n        overview: {\n          ...prev.overview,\n          totalRevenue:\n            prev.overview.totalRevenue + Math.floor(Math.random() * 100),\n          totalOrders:\n            prev.overview.totalOrders + Math.floor(Math.random() * 3),\n        },\n      }))\n    }, 10000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const StatCard = ({\n    title,\n    value,\n    change,\n    icon: Icon,\n    format = 'number',\n    subtitle,\n    _trend,\n  }) => {\n    const isPositive = change > 0\n    const formatValue = val => {\n      if (format === 'currency') return `${val.toLocaleString()} SAR`\n      if (format === 'percentage') return `${val}%`\n      if (format === 'decimal') return val.toFixed(1)\n      return val.toLocaleString()\n    }\n\n    return (\n      <motion.div\n        className=\"bg-surface border border-border rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-300 relative overflow-hidden\"\n        whileHover={{ y: -2 }}\n        layout\n      >\n        {/* Background Gradient */}\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent\"></div>\n\n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div\n              className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n              style={{ backgroundColor: `${theme.colors.primary}15` }}\n            >\n              <Icon size={24} style={{ color: theme.colors.primary }} />\n            </div>\n            <div\n              className={`flex items-center gap-1 text-sm font-medium ${\n                isPositive ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {isPositive ? (\n                <TrendingUp size={16} />\n              ) : (\n                <TrendingDown size={16} />\n              )}\n              {Math.abs(change)}%\n            </div>\n          </div>\n\n          <div className=\"space-y-1\">\n            <h3 className=\"text-3xl font-bold text-foreground\">\n              {formatValue(value)}\n            </h3>\n            <p className=\"text-foreground/60 text-sm font-medium\">{title}</p>\n            {subtitle && (\n              <p className=\"text-foreground/40 text-xs\">{subtitle}</p>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    )\n  }\n\n  return (\n    <div\n      className=\"min-h-screen py-8\"\n      style={{ backgroundColor: theme.colors.background }}\n    >\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div\n          className={`flex items-center justify-between mb-8 ${isRTL ? 'flex-row-reverse' : ''}`}\n        >\n          <div className={isRTL ? 'text-right' : 'text-left'}>\n            <h1 className=\"text-3xl font-bold text-foreground mb-2 flex items-center gap-3\">\n              <BarChart3 className=\"h-8 w-8 text-primary\" />\n              {t('admin.enhancedDashboard', 'Enhanced Admin Dashboard')}\n            </h1>\n            <p className=\"text-foreground/60\">\n              {t(\n                'admin.dashboardSubtitle',\n                'Real-time business intelligence and analytics'\n              )}\n            </p>\n          </div>\n\n          <div\n            className={`flex items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            {/* Segment Filter */}\n            <select\n              value={selectedSegment}\n              onChange={e => setSelectedSegment(e.target.value)}\n              className=\"px-4 py-2 rounded-xl border border-border bg-surface text-foreground focus:ring-2 focus:ring-primary transition-all\"\n            >\n              <option value=\"all\">\n                {t('admin.allSegments', 'All Segments')}\n              </option>\n              <option value=\"leather\">{t('admin.leather', 'Leather')}</option>\n              <option value=\"electronics\">\n                {t('admin.electronics', 'Electronics')}\n              </option>\n              <option value=\"furniture\">\n                {t('admin.furniture', 'Furniture')}\n              </option>\n            </select>\n\n            {/* Time Range */}\n            <select\n              value={timeRange}\n              onChange={e => setTimeRange(e.target.value)}\n              className=\"px-4 py-2 rounded-xl border border-border bg-surface text-foreground focus:ring-2 focus:ring-primary transition-all\"\n            >\n              <option value=\"24h\">{t('admin.last24h', 'Last 24 Hours')}</option>\n              <option value=\"7d\">{t('admin.last7days', 'Last 7 Days')}</option>\n              <option value=\"30d\">\n                {t('admin.last30days', 'Last 30 Days')}\n              </option>\n              <option value=\"90d\">\n                {t('admin.last90days', 'Last 90 Days')}\n              </option>\n            </select>\n\n            {/* Refresh Button */}\n            <motion.button\n              onClick={() => setRefreshing(!refreshing)}\n              disabled={refreshing}\n              className=\"p-3 rounded-xl border border-border bg-surface text-foreground hover:bg-background transition-all disabled:opacity-50\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <RefreshCw\n                className={`h-5 w-5 ${refreshing ? 'animate-spin' : ''}`}\n              />\n            </motion.button>\n\n            {/* Export */}\n            <AnalyticsExport\n              data={analytics}\n              timeRange={timeRange}\n              selectedSegment={selectedSegment}\n              onExport={result => {\n                console.log('Export completed:', result)\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <StatCard\n            title=\"Total Revenue\"\n            value={analytics.overview.totalRevenue}\n            change={analytics.overview.changes.revenue}\n            icon={DollarSign}\n            format=\"currency\"\n          />\n          <StatCard\n            title=\"Total Orders\"\n            value={analytics.overview.totalOrders}\n            change={analytics.overview.changes.orders}\n            icon={ShoppingBag}\n          />\n          <StatCard\n            title=\"Total Customers\"\n            value={analytics.overview.totalCustomers}\n            change={analytics.overview.changes.customers}\n            icon={Users}\n          />\n          <StatCard\n            title=\"Conversion Rate\"\n            value={analytics.overview.conversionRate}\n            change={analytics.overview.changes.conversion}\n            icon={TrendingUp}\n            format=\"percentage\"\n          />\n        </div>\n\n        <motion.div\n          className=\"bg-surface border border-border rounded-segment-xl p-6 shadow-segment-sm mb-8\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <h2 className=\"text-xl font-bold text-foreground mb-6\">\n            Segment Performance\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {Object.entries(analytics.segmentData).map(([segment, data]) => (\n              <div key={segment} className=\"text-center\">\n                <div\n                  className=\"w-16 h-16 mx-auto mb-4 rounded-2xl flex items-center justify-center\"\n                  style={{ backgroundColor: `${SEGMENT_COLORS[segment]}15` }}\n                >\n                  <Package\n                    size={32}\n                    style={{ color: SEGMENT_COLORS[segment] }}\n                  />\n                </div>\n                <h3 className=\"font-semibold text-foreground capitalize mb-2\">\n                  {segment}\n                </h3>\n                <div className=\"space-y-1\">\n                  <p className=\"text-2xl font-bold text-foreground\">\n                    {data.orders}\n                  </p>\n                  <p className=\"text-sm text-foreground/60\">Orders</p>\n                  <p\n                    className=\"text-lg font-medium\"\n                    style={{ color: SEGMENT_COLORS[segment] }}\n                  >\n                    {data.revenue.toLocaleString()} SAR\n                  </p>\n                  <p className=\"text-sm text-green-600 font-medium\">\n                    +{data.growth}%\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <motion.div\n            className=\"lg:col-span-2 bg-surface border border-border rounded-segment-xl shadow-segment-sm\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n          >\n            <div className=\"p-6 border-b border-border\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-xl font-bold text-foreground\">\n                  Recent Orders\n                </h2>\n                <button className=\"text-primary hover:text-primary/80 font-medium text-sm flex items-center gap-1\">\n                  View All <Eye size={16} />\n                </button>\n              </div>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-4\">\n                {analytics.recentOrders.map(order => (\n                  <div\n                    key={order.id}\n                    className=\"flex items-center justify-between p-4 bg-background rounded-segment-lg border border-border\"\n                  >\n                    <div className=\"flex items-center gap-4\">\n                      <div\n                        className=\"w-3 h-3 rounded-full\"\n                        style={{\n                          backgroundColor: SEGMENT_COLORS[order.segment],\n                        }}\n                      />\n                      <div>\n                        <p className=\"font-medium text-foreground\">\n                          {order.id}\n                        </p>\n                        <p className=\"text-sm text-foreground/60\">\n                          {order.customer}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium text-foreground\">\n                        {order.amount} SAR\n                      </p>\n                      <p className=\"text-sm text-foreground/60\">{order.time}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            className=\"bg-surface border border-border rounded-segment-xl shadow-segment-sm\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.4 }}\n          >\n            <div className=\"p-6 border-b border-border\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-xl font-bold text-foreground\">\n                  Custom Requests\n                </h2>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-red-500 rounded-full animate-pulse\"></div>\n                  <span className=\"text-sm text-foreground/60\">\n                    {\n                      analytics.customRequests.filter(r => r.status === 'new')\n                        .length\n                    }{' '}\n                    new\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"p-6 space-y-4\">\n              {analytics.customRequests.map(request => (\n                <div\n                  key={request.id}\n                  className=\"p-4 bg-background border border-border rounded-segment-lg\"\n                >\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div>\n                      <h4 className=\"font-medium text-foreground\">\n                        {request.id}\n                      </h4>\n                      <p className=\"text-sm text-foreground/60\">\n                        {request.customer}\n                      </p>\n                    </div>\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        request.urgency === 'high'\n                          ? 'bg-red-100 text-red-800'\n                          : request.urgency === 'normal'\n                            ? 'bg-blue-100 text-blue-800'\n                            : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {request.urgency}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-foreground/80\">\n                      {request.category}\n                    </span>\n                    <span className=\"text-xs text-foreground/40\">\n                      {request.time}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useRef } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {\r\n  Upload,\r\n  Download,\r\n  Trash2,\r\n  Edit3,\r\n  Copy,\r\n  Archive,\r\n  CheckSquare,\r\n  Square,\r\n  AlertTriangle,\r\n  Search,\r\n  RefreshCw,\r\n  Zap,\r\n} from 'lucide-react'\r\n\r\nconst BulkOperationsManager = ({\r\n  items,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onBulkAction,\r\n  itemType = 'items',\r\n  columns = [],\r\n}) => {\r\n  const [bulkAction, setBulkAction] = useState('')\r\n  const [showConfirmation, setShowConfirmation] = useState(false)\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filterCriteria, setFilterCriteria] = useState({})\r\n  const [progress, setProgress] = useState(0)\r\n  const fileInputRef = useRef()\r\n\r\n  const bulkActions = [\r\n    {\r\n      id: 'delete',\r\n      label: `Delete Selected ${itemType}`,\r\n      icon: Trash2,\r\n      color: 'red',\r\n      danger: true,\r\n    },\r\n    {\r\n      id: 'archive',\r\n      label: `Archive Selected ${itemType}`,\r\n      icon: Archive,\r\n      color: 'orange',\r\n    },\r\n    {\r\n      id: 'duplicate',\r\n      label: `Duplicate Selected ${itemType}`,\r\n      icon: Copy,\r\n      color: 'blue',\r\n    },\r\n    {\r\n      id: 'export',\r\n      label: `Export Selected ${itemType}`,\r\n      icon: Download,\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 'bulk_edit',\r\n      label: `Bulk Edit Selected ${itemType}`,\r\n      icon: Edit3,\r\n      color: 'purple',\r\n    },\r\n    {\r\n      id: 'import',\r\n      label: `Import ${itemType}`,\r\n      icon: Upload,\r\n      color: 'indigo',\r\n    },\r\n  ]\r\n\r\n  const filteredItems = items.filter(item => {\r\n    const matchesSearch =\r\n      searchTerm === '' ||\r\n      Object.values(item).some(value =>\r\n        String(value).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n\r\n    const matchesFilter = Object.keys(filterCriteria).every(key => {\r\n      if (!filterCriteria[key]) return true\r\n      return item[key] === filterCriteria[key]\r\n    })\r\n\r\n    return matchesSearch && matchesFilter\r\n  })\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedItems.length === filteredItems.length) {\r\n      onSelectionChange([])\r\n    } else {\r\n      onSelectionChange(filteredItems.map(item => item.id))\r\n    }\r\n  }\r\n\r\n  const handleBulkAction = async actionId => {\r\n    if (selectedItems.length === 0) return\r\n\r\n    const action = bulkActions.find(a => a.id === actionId)\r\n    if (action.danger) {\r\n      setBulkAction(actionId)\r\n      setShowConfirmation(true)\r\n      return\r\n    }\r\n\r\n    await executeBulkAction(actionId)\r\n  }\r\n\r\n  const executeBulkAction = async actionId => {\r\n    setIsProcessing(true)\r\n    setProgress(0)\r\n\r\n    try {\r\n      for (let i = 0; i < selectedItems.length; i++) {\r\n        await new Promise(resolve => setTimeout(resolve, 100)) // Simulate processing\r\n        setProgress(((i + 1) / selectedItems.length) * 100)\r\n      }\r\n\r\n      await onBulkAction(actionId, selectedItems)\r\n      onSelectionChange([])\r\n    } catch (error) {\r\n      console.error('Bulk operation failed:', error)\r\n    } finally {\r\n      setIsProcessing(false)\r\n      setShowConfirmation(false)\r\n      setProgress(0)\r\n    }\r\n  }\r\n\r\n  const handleFileImport = event => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      const reader = new FileReader()\r\n      reader.onload = e => {\r\n        try {\r\n          const data = JSON.parse(e.target.result)\r\n          onBulkAction('import', data)\r\n        } catch (error) {\r\n          console.error('Import failed:', error)\r\n        }\r\n      }\r\n      reader.readAsText(file)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Search and Filter Bar */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n        <div className=\"flex flex-wrap gap-4 items-center\">\r\n          <div className=\"flex-1 min-w-64\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`Search ${itemType}...`}\r\n                value={searchTerm}\r\n                onChange={e => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {columns.length > 0 && (\r\n            <div className=\"flex gap-2\">\r\n              {columns\r\n                .filter(col => col.filterable)\r\n                .map(column => (\r\n                  <select\r\n                    key={column.key}\r\n                    value={filterCriteria[column.key] || ''}\r\n                    onChange={e =>\r\n                      setFilterCriteria(prev => ({\r\n                        ...prev,\r\n                        [column.key]: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"\">All {column.label}</option>\r\n                    {column.filterOptions?.map(option => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ))}\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            onClick={() => {\r\n              setSearchTerm('')\r\n              setFilterCriteria({})\r\n            }}\r\n            className=\"px-3 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n            title=\"Clear filters\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bulk Actions Bar */}\r\n      <AnimatePresence>\r\n        {selectedItems.length > 0 && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <Zap className=\"w-5 h-5 text-blue-600\" />\r\n                <span className=\"font-medium text-blue-900\">\r\n                  {selectedItems.length} {itemType} selected\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {bulkActions.map(action => (\r\n                  <button\r\n                    key={action.id}\r\n                    onClick={() =>\r\n                      action.id === 'import'\r\n                        ? fileInputRef.current?.click()\r\n                        : handleBulkAction(action.id)\r\n                    }\r\n                    disabled={\r\n                      isProcessing ||\r\n                      (action.id !== 'import' && selectedItems.length === 0)\r\n                    }\r\n                    className={`\r\n                      flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium transition-colors\r\n                      ${\r\n                        action.color === 'red'\r\n                          ? 'bg-red-100 text-red-700 hover:bg-red-200'\r\n                          : action.color === 'orange'\r\n                            ? 'bg-orange-100 text-orange-700 hover:bg-orange-200'\r\n                            : action.color === 'green'\r\n                              ? 'bg-green-100 text-green-700 hover:bg-green-200'\r\n                              : action.color === 'purple'\r\n                                ? 'bg-purple-100 text-purple-700 hover:bg-purple-200'\r\n                                : action.color === 'indigo'\r\n                                  ? 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\r\n                                  : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\r\n                      }\r\n                      disabled:opacity-50 disabled:cursor-not-allowed\r\n                    `}\r\n                  >\r\n                    <action.icon className=\"w-4 h-4\" />\r\n                    {action.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Progress Bar */}\r\n            {isProcessing && (\r\n              <div className=\"mt-3\">\r\n                <div className=\"flex items-center justify-between text-sm text-blue-700 mb-1\">\r\n                  <span>Processing...</span>\r\n                  <span>{Math.round(progress)}%</span>\r\n                </div>\r\n                <div className=\"w-full bg-blue-200 rounded-full h-2\">\r\n                  <motion.div\r\n                    className=\"bg-blue-600 h-2 rounded-full\"\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: `${progress}%` }}\r\n                    transition={{ duration: 0.3 }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Selection Controls */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n        <div className=\"p-4 border-b bg-gray-50\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                onClick={handleSelectAll}\r\n                className=\"flex items-center gap-2 text-sm font-medium text-gray-700 hover:text-gray-900\"\r\n              >\r\n                {selectedItems.length === filteredItems.length &&\r\n                filteredItems.length > 0 ? (\r\n                  <CheckSquare className=\"w-5 h-5 text-blue-600\" />\r\n                ) : (\r\n                  <Square className=\"w-5 h-5\" />\r\n                )}\r\n                Select All ({filteredItems.length})\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"text-sm text-gray-500\">\r\n              Showing {filteredItems.length} of {items.length} {itemType}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Items List */}\r\n        <div className=\"max-h-96 overflow-y-auto\">\r\n          {filteredItems.map(item => (\r\n            <div\r\n              key={item.id}\r\n              className={`\r\n                flex items-center gap-3 p-3 border-b hover:bg-gray-50 transition-colors\r\n                ${selectedItems.includes(item.id) ? 'bg-blue-50 border-blue-200' : ''}\r\n              `}\r\n            >\r\n              <button\r\n                onClick={() => {\r\n                  if (selectedItems.includes(item.id)) {\r\n                    onSelectionChange(\r\n                      selectedItems.filter(id => id !== item.id)\r\n                    )\r\n                  } else {\r\n                    onSelectionChange([...selectedItems, item.id])\r\n                  }\r\n                }}\r\n              >\r\n                {selectedItems.includes(item.id) ? (\r\n                  <CheckSquare className=\"w-5 h-5 text-blue-600\" />\r\n                ) : (\r\n                  <Square className=\"w-5 h-5 text-gray-400\" />\r\n                )}\r\n              </button>\r\n\r\n              <div className=\"flex-1\">\r\n                <div className=\"font-medium text-gray-900\">\r\n                  {item.name || item.title || `${itemType} #${item.id}`}\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  {item.description ||\r\n                    item.email ||\r\n                    item.status ||\r\n                    'No description'}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"text-sm text-gray-500\">\r\n                {item.updatedAt\r\n                  ? new Date(item.updatedAt).toLocaleDateString()\r\n                  : ''}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      <AnimatePresence>\r\n        {showConfirmation && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.95 }}\r\n              className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\"\r\n            >\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <AlertTriangle className=\"w-6 h-6 text-red-600\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Confirm Action\r\n                </h3>\r\n              </div>\r\n\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Are you sure you want to {bulkAction} {selectedItems.length}{' '}\r\n                selected {itemType}? This action cannot be undone.\r\n              </p>\r\n\r\n              <div className=\"flex gap-3 justify-end\">\r\n                <button\r\n                  onClick={() => setShowConfirmation(false)}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={() => executeBulkAction(bulkAction)}\r\n                  disabled={isProcessing}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50\"\r\n                >\r\n                  {isProcessing ? 'Processing...' : 'Confirm'}\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Hidden File Input */}\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        accept=\".json,.csv\"\r\n        onChange={handleFileImport}\r\n        className=\"hidden\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BulkOperationsManager\r\n","import { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Plus,\n  Edit,\n  Eye,\n  Search,\n  Download,\n  Star,\n  Package,\n  AlertCircle,\n  Check,\n} from 'lucide-react'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\nimport { useAudit, AUDIT_ACTIONS } from '../../../contexts/AuditContext.jsx'\nimport BulkOperationsManager from '../../../components/admin/BulkOperationsManager.jsx'\n\n// Mock product data\nconst MOCK_PRODUCTS = [\n  {\n    id: 1,\n    name: 'Premium Leather Briefcase',\n    nameAr: 'حقيبة جلدية فاخرة',\n    category: 'leather',\n    subcategory: 'bags',\n    price: 850,\n    originalPrice: 1200,\n    stock: 15,\n    status: 'active',\n    rating: 4.8,\n    reviews: 124,\n    image: '/api/placeholder/300/300',\n    featured: true,\n    bestseller: true,\n    dateAdded: '2024-01-15',\n    lastModified: '2024-01-20',\n  },\n  {\n    id: 2,\n    name: 'Wireless Premium Headphones',\n    nameAr: 'سماعات لاسلكية فاخرة',\n    category: 'electronics',\n    subcategory: 'audio',\n    price: 299,\n    originalPrice: 399,\n    stock: 32,\n    status: 'active',\n    rating: 4.6,\n    reviews: 89,\n    image: '/api/placeholder/300/300',\n    featured: false,\n    bestseller: true,\n    dateAdded: '2024-01-10',\n    lastModified: '2024-01-18',\n  },\n  {\n    id: 3,\n    name: 'Executive Office Chair',\n    nameAr: 'كرسي مكتب تنفيذي',\n    category: 'furniture',\n    subcategory: 'seating',\n    price: 650,\n    originalPrice: 650,\n    stock: 8,\n    status: 'active',\n    rating: 4.9,\n    reviews: 56,\n    image: '/api/placeholder/300/300',\n    featured: true,\n    bestseller: false,\n    dateAdded: '2024-01-12',\n    lastModified: '2024-01-19',\n  },\n  {\n    id: 4,\n    name: 'Handcrafted Leather Wallet',\n    nameAr: 'محفظة جلدية مصنوعة يدوياً',\n    category: 'leather',\n    subcategory: 'wallets',\n    price: 120,\n    originalPrice: 150,\n    stock: 0,\n    status: 'out_of_stock',\n    rating: 4.7,\n    reviews: 203,\n    image: '/api/placeholder/300/300',\n    featured: false,\n    bestseller: true,\n    dateAdded: '2024-01-08',\n    lastModified: '2024-01-16',\n  },\n]\n\nconst CATEGORIES = {\n  leather: {\n    name: 'Leather',\n    nameAr: 'جلود',\n    subcategories: ['bags', 'wallets', 'belts', 'accessories'],\n  },\n  electronics: {\n    name: 'Electronics',\n    nameAr: 'إلكترونيات',\n    subcategories: ['audio', 'wearables', 'accessories'],\n  },\n  furniture: {\n    name: 'Furniture',\n    nameAr: 'أثاث',\n    subcategories: ['office', 'seating', 'storage'],\n  },\n}\n\nconst STATUS_OPTIONS = [\n  { value: 'all', label: 'All Status', labelAr: 'جميع الحالات' },\n  { value: 'active', label: 'Active', labelAr: 'نشط' },\n  { value: 'inactive', label: 'Inactive', labelAr: 'غير نشط' },\n  { value: 'out_of_stock', label: 'Out of Stock', labelAr: 'نفد المخزون' },\n  { value: 'draft', label: 'Draft', labelAr: 'مسودة' },\n]\n\nexport default function ProductCatalog() {\n  const [products, setProducts] = useState(MOCK_PRODUCTS)\n  const [filteredProducts, setFilteredProducts] = useState(MOCK_PRODUCTS)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('all')\n  const [selectedStatus, setSelectedStatus] = useState('all')\n  const [selectedProducts, setSelectedProducts] = useState([])\n\n  const { t, isRTL, formatCurrency } = useI18n()\n  const { logAction } = useAudit()\n\n  // Filter products based on search and filters\n  useEffect(() => {\n    let filtered = products\n\n    // Search filter\n    if (searchQuery) {\n      filtered = filtered.filter(\n        product =>\n          product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          product.nameAr.includes(searchQuery) ||\n          product.category.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    }\n\n    // Category filter\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(\n        product => product.category === selectedCategory\n      )\n    }\n\n    // Status filter\n    if (selectedStatus !== 'all') {\n      filtered = filtered.filter(product => product.status === selectedStatus)\n    }\n\n    setFilteredProducts(filtered)\n  }, [products, searchQuery, selectedCategory, selectedStatus])\n\n  const handleSelectProduct = productId => {\n    setSelectedProducts(prev =>\n      prev.includes(productId)\n        ? prev.filter(id => id !== productId)\n        : [...prev, productId]\n    )\n  }\n\n  const handleBulkAction = async (action, selectedIds, data = null) => {\n    // Declare variables outside switch to avoid lexical declaration issues\n    let duplicates = []\n    let newProducts = []\n    let newStatus = ''\n\n    switch (action) {\n      case 'delete':\n        if (\n          window.confirm(\n            t(\n              'admin.confirmBulkDelete',\n              `Delete ${selectedIds.length} products?`\n            )\n          )\n        ) {\n          setProducts(prev => prev.filter(p => !selectedIds.includes(p.id)))\n          await logAction(AUDIT_ACTIONS.DELETE, 'bulk-products', {\n            productIds: selectedIds,\n            count: selectedIds.length,\n          })\n        }\n        break\n      case 'archive':\n        setProducts(prev =>\n          prev.map(p =>\n            selectedIds.includes(p.id) ? { ...p, status: 'archived' } : p\n          )\n        )\n        await logAction(AUDIT_ACTIONS.UPDATE, 'bulk-products-archive', {\n          productIds: selectedIds,\n          count: selectedIds.length,\n        })\n        break\n      case 'duplicate':\n        duplicates = products\n          .filter(p => selectedIds.includes(p.id))\n          .map(p => ({\n            ...p,\n            id: Date.now() + Math.random(),\n            name: `${p.name} (Copy)`,\n          }))\n        setProducts(prev => [...prev, ...duplicates])\n        await logAction(AUDIT_ACTIONS.CREATE, 'bulk-products-duplicate', {\n          originalIds: selectedIds,\n          count: duplicates.length,\n        })\n        break\n      case 'export':\n        await exportProducts('csv', selectedIds)\n        break\n      case 'bulk_edit':\n        // Open bulk edit modal\n        console.log('Bulk edit:', selectedIds)\n        break\n      case 'import':\n        if (data) {\n          newProducts = data.map(item => ({\n            ...item,\n            id: Date.now() + Math.random(),\n            dateAdded: new Date().toISOString().split('T')[0],\n            lastModified: new Date().toISOString().split('T')[0],\n          }))\n          setProducts(prev => [...prev, ...newProducts])\n          await logAction(AUDIT_ACTIONS.CREATE, 'bulk-products-import', {\n            count: newProducts.length,\n          })\n        }\n        break\n      default:\n        if (action === 'activate' || action === 'deactivate') {\n          newStatus = action === 'activate' ? 'active' : 'inactive'\n          setProducts(prev =>\n            prev.map(p =>\n              selectedIds.includes(p.id) ? { ...p, status: newStatus } : p\n            )\n          )\n          await logAction(AUDIT_ACTIONS.UPDATE, 'bulk-products-status', {\n            productIds: selectedIds,\n            newStatus,\n            count: selectedIds.length,\n          })\n        }\n    }\n    setSelectedProducts([])\n  }\n\n  const exportProducts = async (format = 'csv', selectedIds = null) => {\n    const exportItems = selectedIds\n      ? filteredProducts.filter(p => selectedIds.includes(p.id))\n      : filteredProducts\n\n    const exportData = exportItems.map(product => ({\n      ID: product.id,\n      Name: isRTL ? product.nameAr : product.name,\n      Category:\n        CATEGORIES[product.category]?.[isRTL ? 'nameAr' : 'name'] ||\n        product.category,\n      Price: product.price,\n      OriginalPrice: product.originalPrice,\n      Stock: product.stock,\n      Status: product.status,\n      Rating: product.rating,\n      Reviews: product.reviews,\n      Featured: product.featured ? 'Yes' : 'No',\n      Bestseller: product.bestseller ? 'Yes' : 'No',\n      DateAdded: product.dateAdded,\n      LastModified: product.lastModified,\n    }))\n\n    if (format === 'csv') {\n      const csv = convertToCSV(exportData)\n      downloadFile(\n        csv,\n        `products-${new Date().toISOString().split('T')[0]}.csv`,\n        'text/csv'\n      )\n    } else if (format === 'json') {\n      const json = JSON.stringify(exportData, null, 2)\n      downloadFile(\n        json,\n        `products-${new Date().toISOString().split('T')[0]}.json`,\n        'application/json'\n      )\n    }\n\n    await logAction(AUDIT_ACTIONS.EXPORT, 'products', {\n      format,\n      count: exportData.length,\n      selectedOnly: !!selectedIds,\n      filters: {\n        category: selectedCategory,\n        status: selectedStatus,\n        search: searchQuery,\n      },\n    })\n  }\n\n  const convertToCSV = data => {\n    if (data.length === 0) return ''\n    const headers = Object.keys(data[0]).join(',')\n    const rows = data.map(row =>\n      Object.values(row)\n        .map(value =>\n          typeof value === 'string' && value.includes(',')\n            ? `\"${value.replace(/\"/g, '\"\"')}\"`\n            : value\n        )\n        .join(',')\n    )\n    return [headers, ...rows].join('\\n')\n  }\n\n  const downloadFile = (content, filename, mimeType) => {\n    const blob = new Blob([content], { type: mimeType })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = filename\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    window.URL.revokeObjectURL(url)\n  }\n\n  const getStatusBadge = status => {\n    const statusConfig = {\n      active: {\n        bg: 'bg-green-100',\n        text: 'text-green-800',\n        label: t('admin.status.active', 'Active'),\n      },\n      inactive: {\n        bg: 'bg-gray-100',\n        text: 'text-gray-800',\n        label: t('admin.status.inactive', 'Inactive'),\n      },\n      out_of_stock: {\n        bg: 'bg-red-100',\n        text: 'text-red-800',\n        label: t('admin.status.outOfStock', 'Out of Stock'),\n      },\n      draft: {\n        bg: 'bg-yellow-100',\n        text: 'text-yellow-800',\n        label: t('admin.status.draft', 'Draft'),\n      },\n    }\n\n    const config = statusConfig[status] || statusConfig.draft\n\n    return (\n      <span\n        className={`px-2 py-1 rounded-full text-xs font-medium ${config.bg} ${config.text}`}\n      >\n        {config.label}\n      </span>\n    )\n  }\n\n  const ProductGridItem = ({ product }) => (\n    <motion.div\n      layout\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.9 }}\n      className=\"bg-surface border border-border rounded-xl p-4 hover:shadow-lg transition-all group\"\n    >\n      {/* Product Image */}\n      <div className=\"relative mb-4\">\n        <div className=\"aspect-square bg-background rounded-lg overflow-hidden\">\n          <img\n            src={product.image}\n            alt={isRTL ? product.nameAr : product.name}\n            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n          />\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n          <div className=\"flex gap-1\">\n            <button className=\"p-1.5 bg-white/90 backdrop-blur-sm rounded-lg hover:bg-white transition-colors\">\n              <Eye size={14} />\n            </button>\n            <button\n              onClick={() => console.log('Edit product:', product.id)}\n              className=\"p-1.5 bg-white/90 backdrop-blur-sm rounded-lg hover:bg-white transition-colors\"\n            >\n              <Edit size={14} />\n            </button>\n          </div>\n        </div>\n\n        {/* Badges */}\n        <div className=\"absolute top-2 left-2 flex flex-col gap-1\">\n          {product.featured && (\n            <span className=\"px-2 py-1 bg-primary text-white text-xs rounded-full font-medium\">\n              {t('admin.featured', 'Featured')}\n            </span>\n          )}\n          {product.bestseller && (\n            <span className=\"px-2 py-1 bg-accent text-white text-xs rounded-full font-medium\">\n              {t('admin.bestseller', 'Bestseller')}\n            </span>\n          )}\n        </div>\n\n        {/* Selection Checkbox */}\n        <div className=\"absolute bottom-2 left-2\">\n          <input\n            type=\"checkbox\"\n            checked={selectedProducts.includes(product.id)}\n            onChange={() => handleSelectProduct(product.id)}\n            className=\"w-4 h-4 text-primary bg-white border-gray-300 rounded focus:ring-primary\"\n          />\n        </div>\n      </div>\n\n      {/* Product Info */}\n      <div className=\"space-y-2\">\n        <div className=\"flex items-start justify-between gap-2\">\n          <h3 className=\"font-medium text-foreground line-clamp-2\">\n            {isRTL ? product.nameAr : product.name}\n          </h3>\n          <div className=\"flex items-center gap-1 text-xs text-foreground/60\">\n            <Star size={12} className=\"fill-yellow-400 text-yellow-400\" />\n            {product.rating}\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-y-1\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"font-semibold text-foreground\">\n                {formatCurrency(product.price)}\n              </span>\n              {product.originalPrice > product.price && (\n                <span className=\"text-sm text-foreground/50 line-through\">\n                  {formatCurrency(product.originalPrice)}\n                </span>\n              )}\n            </div>\n            <div className=\"text-xs text-foreground/60\">\n              {t('admin.stock', 'Stock')}: {product.stock}\n            </div>\n          </div>\n          {getStatusBadge(product.status)}\n        </div>\n      </div>\n    </motion.div>\n  )\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div\n        className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n      >\n        <div className={isRTL ? 'text-right' : 'text-left'}>\n          <h1 className=\"text-2xl font-bold text-foreground\">\n            {t('admin.productCatalog', 'Product Catalog')}\n          </h1>\n          <p className=\"text-foreground/60\">\n            {t(\n              'admin.catalogSubtitle',\n              'Manage your product inventory and catalog'\n            )}\n          </p>\n        </div>\n\n        <div\n          className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n        >\n          {/* Export Dropdown */}\n          <div className=\"relative\">\n            <motion.button\n              onClick={() => exportProducts('csv')}\n              className=\"flex items-center gap-2 px-4 py-2 border border-border bg-surface rounded-xl hover:bg-background transition-colors\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Download size={16} />\n              {t('admin.exportCSV', 'Export CSV')}\n            </motion.button>\n          </div>\n\n          {/* Add Product Button */}\n          <motion.button\n            onClick={() => console.log('Add product')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-xl hover:bg-primary/90 transition-colors\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <Plus size={20} />\n            {t('admin.addProduct', 'Add Product')}\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Filters Bar */}\n      <div className=\"bg-surface border border-border rounded-xl p-4\">\n        <div className=\"flex items-center gap-4 flex-wrap\">\n          {/* Search */}\n          <div className=\"relative flex-1 min-w-[300px]\">\n            <Search\n              className={`absolute top-1/2 transform -translate-y-1/2 text-foreground/40 ${isRTL ? 'right-3' : 'left-3'}`}\n              size={20}\n            />\n            <input\n              type=\"text\"\n              placeholder={t('admin.searchProducts', 'Search products...')}\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              className={`w-full bg-background border border-border rounded-lg text-foreground placeholder-foreground/40 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary ${\n                isRTL ? 'pr-10 pl-4 text-right' : 'pl-10 pr-4 text-left'\n              } py-2`}\n            />\n          </div>\n\n          {/* Category Filter */}\n          <select\n            value={selectedCategory}\n            onChange={e => setSelectedCategory(e.target.value)}\n            className=\"px-3 py-2 bg-background border border-border rounded-lg text-foreground focus:outline-none focus:ring-2 focus:ring-primary\"\n          >\n            <option value=\"all\">\n              {t('admin.allCategories', 'All Categories')}\n            </option>\n            {Object.entries(CATEGORIES).map(([key, category]) => (\n              <option key={key} value={key}>\n                {isRTL ? category.nameAr : category.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Status Filter */}\n          <select\n            value={selectedStatus}\n            onChange={e => setSelectedStatus(e.target.value)}\n            className=\"px-3 py-2 bg-background border border-border rounded-lg text-foreground focus:outline-none focus:ring-2 focus:ring-primary\"\n          >\n            {STATUS_OPTIONS.map(option => (\n              <option key={option.value} value={option.value}>\n                {isRTL ? option.labelAr : option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Advanced Bulk Operations Manager */}\n      <BulkOperationsManager\n        items={filteredProducts}\n        selectedItems={selectedProducts}\n        onSelectionChange={setSelectedProducts}\n        onBulkAction={handleBulkAction}\n        itemType=\"products\"\n        columns={[\n          {\n            key: 'category',\n            label: 'Category',\n            filterable: true,\n            filterOptions: Object.entries(CATEGORIES).map(([key, cat]) => ({\n              value: key,\n              label: isRTL ? cat.nameAr : cat.name,\n            })),\n          },\n          {\n            key: 'status',\n            label: 'Status',\n            filterable: true,\n            filterOptions: STATUS_OPTIONS.filter(\n              opt => opt.value !== 'all'\n            ).map(opt => ({\n              value: opt.value,\n              label: isRTL ? opt.labelAr : opt.label,\n            })),\n          },\n        ]}\n      />\n\n      {/* Products Grid/List */}\n      <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            <AnimatePresence>\n              {filteredProducts.map(product => (\n                <ProductGridItem key={product.id} product={product} />\n              ))}\n            </AnimatePresence>\n          </div>\n        </div>\n\n        {/* Empty State */}\n        {filteredProducts.length === 0 && (\n          <div className=\"py-12 text-center\">\n            <Package size={48} className=\"mx-auto text-foreground/30 mb-4\" />\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">\n              {t('admin.noProducts', 'No products found')}\n            </h3>\n            <p className=\"text-foreground/60\">\n              {t(\n                'admin.noProductsSubtitle',\n                'Try adjusting your search or filter criteria'\n              )}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Stats Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Package className=\"text-blue-600\" size={20} />\n            </div>\n            <div>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.totalProducts', 'Total Products')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {products.length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-green-100 rounded-lg\">\n              <Check className=\"text-green-600\" size={20} />\n            </div>\n            <div>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.activeProducts', 'Active')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {products.filter(p => p.status === 'active').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-red-100 rounded-lg\">\n              <AlertCircle className=\"text-red-600\" size={20} />\n            </div>\n            <div>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.outOfStock', 'Out of Stock')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {products.filter(p => p.status === 'out_of_stock').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-yellow-100 rounded-lg\">\n              <Star className=\"text-yellow-600\" size={20} />\n            </div>\n            <div>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.avgRating', 'Avg. Rating')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {(\n                  products.reduce((sum, p) => sum + p.rating, 0) /\n                  products.length\n                ).toFixed(1)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport {\n  Palette,\n  Save,\n  RotateCcw,\n  Eye,\n  Download,\n  Upload,\n  Type,\n  Layout,\n  Zap,\n  Monitor,\n  Smartphone,\n  Tablet,\n  Sun,\n  Moon,\n  Shuffle,\n  Check,\n  X,\n} from 'lucide-react'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\nimport { useSegment } from '../../../contexts/SegmentContext.jsx'\n\n// Color palette presets\nconst COLOR_PRESETS = {\n  leather: {\n    name: 'Leather Premium',\n    primary: '#8B4513',\n    secondary: '#D2691E',\n    accent: '#CD853F',\n    background: '#FDF5E6',\n    surface: '#FFFFFF',\n    foreground: '#2C1810',\n  },\n  electronics: {\n    name: 'Tech Blue',\n    primary: '#1E40AF',\n    secondary: '#3B82F6',\n    accent: '#06B6D4',\n    background: '#F8FAFC',\n    surface: '#FFFFFF',\n    foreground: '#0F172A',\n  },\n  furniture: {\n    name: 'Natural Wood',\n    primary: '#92400E',\n    secondary: '#D97706',\n    accent: '#F59E0B',\n    background: '#FFFBEB',\n    surface: '#FFFFFF',\n    foreground: '#1C1917',\n  },\n  modern: {\n    name: 'Modern Dark',\n    primary: '#6366F1',\n    secondary: '#8B5CF6',\n    accent: '#EC4899',\n    background: '#0F172A',\n    surface: '#1E293B',\n    foreground: '#F1F5F9',\n  },\n  nature: {\n    name: 'Nature Green',\n    primary: '#059669',\n    secondary: '#10B981',\n    accent: '#34D399',\n    background: '#F0FDF4',\n    surface: '#FFFFFF',\n    foreground: '#064E3B',\n  },\n}\n\n// Typography presets\nconst TYPOGRAPHY_PRESETS = {\n  modern: {\n    name: 'Modern Sans',\n    headings: 'Inter',\n    body: 'Inter',\n    accent: 'Poppins',\n  },\n  classic: {\n    name: 'Classic Serif',\n    headings: 'Playfair Display',\n    body: 'Source Sans Pro',\n    accent: 'Playfair Display',\n  },\n  minimal: {\n    name: 'Minimal',\n    headings: 'Roboto',\n    body: 'Roboto',\n    accent: 'Roboto Mono',\n  },\n  elegant: {\n    name: 'Elegant',\n    headings: 'Merriweather',\n    body: 'Open Sans',\n    accent: 'Dancing Script',\n  },\n}\n\n// Spacing and layout presets\nconst LAYOUT_PRESETS = {\n  compact: {\n    name: 'Compact',\n    containerPadding: '1rem',\n    sectionSpacing: '2rem',\n    cardPadding: '1rem',\n    borderRadius: '0.5rem',\n  },\n  comfortable: {\n    name: 'Comfortable',\n    containerPadding: '1.5rem',\n    sectionSpacing: '3rem',\n    cardPadding: '1.5rem',\n    borderRadius: '0.75rem',\n  },\n  spacious: {\n    name: 'Spacious',\n    containerPadding: '2rem',\n    sectionSpacing: '4rem',\n    cardPadding: '2rem',\n    borderRadius: '1rem',\n  },\n}\n\nexport default function ThemeEditor() {\n  const [selectedPreset, setSelectedPreset] = useState('leather')\n  const [customColors, setCustomColors] = useState(COLOR_PRESETS.leather)\n  const [selectedTypography, setSelectedTypography] = useState('modern')\n  const [selectedLayout, setSelectedLayout] = useState('comfortable')\n  const [previewMode, setPreviewMode] = useState('desktop') // desktop, tablet, mobile\n  const [isDarkMode, setIsDarkMode] = useState(false)\n  const [showPreview, setShowPreview] = useState(false)\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false)\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [showColorPicker, setShowColorPicker] = useState(null)\n\n  const { t } = useI18n()\n  const { currentSegment } = useSegment()\n\n  useEffect(() => {\n    setHasUnsavedChanges(true)\n  }, [customColors, selectedTypography, selectedLayout, isDarkMode])\n\n  const handleColorChange = (colorKey, value) => {\n    setCustomColors(prev => ({\n      ...prev,\n      [colorKey]: value,\n    }))\n  }\n\n  const handlePresetSelect = presetKey => {\n    setSelectedPreset(presetKey)\n    setCustomColors(COLOR_PRESETS[presetKey])\n  }\n\n  const handleSaveTheme = () => {\n    // Save theme configuration\n    const themeConfig = {\n      colors: customColors,\n      typography: TYPOGRAPHY_PRESETS[selectedTypography],\n      layout: LAYOUT_PRESETS[selectedLayout],\n      darkMode: isDarkMode,\n      segment: currentSegment,\n    }\n\n    console.log('Saving theme configuration:', themeConfig)\n    setHasUnsavedChanges(false)\n    // Here you would typically save to backend/localStorage\n  }\n\n  const handleResetTheme = () => {\n    setCustomColors(COLOR_PRESETS[selectedPreset])\n    setSelectedTypography('modern')\n    setSelectedLayout('comfortable')\n    setIsDarkMode(false)\n    setHasUnsavedChanges(false)\n  }\n\n  const handleGenerateTheme = async () => {\n    setIsGenerating(true)\n\n    // Simulate AI theme generation\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    const randomPreset =\n      Object.keys(COLOR_PRESETS)[\n        Math.floor(Math.random() * Object.keys(COLOR_PRESETS).length)\n      ]\n    setCustomColors(COLOR_PRESETS[randomPreset])\n    setSelectedPreset(randomPreset)\n\n    setIsGenerating(false)\n  }\n\n  const ColorPicker = ({ label, colorKey, value }) => (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium text-foreground\">{label}</label>\n      <div className=\"relative\">\n        <button\n          onClick={() =>\n            setShowColorPicker(showColorPicker === colorKey ? null : colorKey)\n          }\n          className=\"w-full h-10 rounded-lg border border-border flex items-center gap-3 px-3 hover:border-primary transition-colors\"\n        >\n          <div\n            className=\"w-6 h-6 rounded border border-border\"\n            style={{ backgroundColor: value }}\n          />\n          <span className=\"font-mono text-sm text-foreground\">{value}</span>\n        </button>\n\n        {showColorPicker === colorKey && (\n          <div className=\"absolute top-full mt-2 z-50 bg-surface border border-border rounded-lg p-4 shadow-lg\">\n            <input\n              type=\"color\"\n              value={value}\n              onChange={e => handleColorChange(colorKey, e.target.value)}\n              className=\"w-full h-32 border border-border rounded cursor-pointer\"\n            />\n            <div className=\"mt-3 space-y-2\">\n              <input\n                type=\"text\"\n                value={value}\n                onChange={e => handleColorChange(colorKey, e.target.value)}\n                className=\"w-full px-3 py-2 border border-border rounded text-sm font-mono\"\n                placeholder=\"#000000\"\n              />\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={() => setShowColorPicker(null)}\n                  className=\"flex-1 px-3 py-1.5 bg-primary text-white rounded text-sm hover:bg-primary/90 transition-colors\"\n                >\n                  <Check size={14} className=\"inline mr-1\" />\n                  Done\n                </button>\n                <button\n                  onClick={() => setShowColorPicker(null)}\n                  className=\"px-3 py-1.5 border border-border rounded text-sm hover:bg-background transition-colors\"\n                >\n                  <X size={14} />\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n\n  const PreviewComponent = () => (\n    <div\n      className=\"space-y-4 p-6\"\n      style={{\n        backgroundColor: customColors.background,\n        color: customColors.foreground,\n      }}\n    >\n      {/* Header Preview */}\n      <div\n        className=\"flex items-center justify-between p-4 rounded-lg\"\n        style={{ backgroundColor: customColors.surface }}\n      >\n        <h1\n          className=\"text-xl font-bold\"\n          style={{ color: customColors.primary }}\n        >\n          IVOLEX\n        </h1>\n        <div className=\"flex gap-2\">\n          <button\n            className=\"px-4 py-2 rounded text-sm\"\n            style={{\n              backgroundColor: customColors.primary,\n              color: customColors.background,\n            }}\n          >\n            Primary\n          </button>\n          <button\n            className=\"px-4 py-2 rounded text-sm border\"\n            style={{\n              borderColor: customColors.secondary,\n              color: customColors.secondary,\n            }}\n          >\n            Secondary\n          </button>\n        </div>\n      </div>\n\n      {/* Content Preview */}\n      <div\n        className=\"p-4 rounded-lg\"\n        style={{ backgroundColor: customColors.surface }}\n      >\n        <h2\n          className=\"text-lg font-semibold mb-2\"\n          style={{ color: customColors.foreground }}\n        >\n          Sample Content\n        </h2>\n        <p\n          className=\"text-sm mb-4\"\n          style={{ color: customColors.foreground + '99' }}\n        >\n          This is how your content will look with the selected theme colors and\n          typography.\n        </p>\n        <div\n          className=\"inline-block px-3 py-1 rounded-full text-xs font-medium\"\n          style={{\n            backgroundColor: customColors.accent + '20',\n            color: customColors.accent,\n          }}\n        >\n          Accent Badge\n        </div>\n      </div>\n\n      {/* Cards Preview */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div\n          className=\"p-4 rounded-lg border\"\n          style={{\n            backgroundColor: customColors.surface,\n            borderColor: customColors.primary + '20',\n          }}\n        >\n          <div\n            className=\"w-full h-20 rounded mb-3\"\n            style={{ backgroundColor: customColors.primary + '10' }}\n          ></div>\n          <h3\n            className=\"font-medium\"\n            style={{ color: customColors.foreground }}\n          >\n            Product Card\n          </h3>\n          <p className=\"text-sm mt-1\" style={{ color: customColors.accent }}>\n            $99.99\n          </p>\n        </div>\n        <div\n          className=\"p-4 rounded-lg border\"\n          style={{\n            backgroundColor: customColors.surface,\n            borderColor: customColors.secondary + '20',\n          }}\n        >\n          <div\n            className=\"w-full h-20 rounded mb-3\"\n            style={{ backgroundColor: customColors.secondary + '10' }}\n          ></div>\n          <h3\n            className=\"font-medium\"\n            style={{ color: customColors.foreground }}\n          >\n            Another Card\n          </h3>\n          <p className=\"text-sm mt-1\" style={{ color: customColors.accent }}>\n            $149.99\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-foreground\">\n            {t('admin.themeEditor', 'Theme Editor')}\n          </h1>\n          <p className=\"text-foreground/60\">\n            {t(\n              'admin.themeEditorSubtitle',\n              'Customize the visual appearance of your store'\n            )}\n          </p>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          {hasUnsavedChanges && (\n            <span className=\"text-xs text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full\">\n              {t('admin.unsavedChanges', 'Unsaved changes')}\n            </span>\n          )}\n\n          <motion.button\n            onClick={() => setShowPreview(!showPreview)}\n            className=\"flex items-center gap-2 px-4 py-2 border border-border rounded-xl hover:bg-background transition-colors\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <Eye size={16} />\n            {t('admin.preview', 'Preview')}\n          </motion.button>\n\n          <motion.button\n            onClick={handleSaveTheme}\n            disabled={!hasUnsavedChanges}\n            className=\"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-xl hover:bg-primary/90 transition-colors disabled:opacity-50\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <Save size={16} />\n            {t('common.save', 'Save')}\n          </motion.button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Theme Controls */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* Color Presets */}\n          <div className=\"bg-surface border border-border rounded-xl p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"font-semibold text-foreground flex items-center gap-2\">\n                <Palette size={20} />\n                {t('admin.colorPresets', 'Color Presets')}\n              </h3>\n              <button\n                onClick={handleGenerateTheme}\n                disabled={isGenerating}\n                className=\"p-2 hover:bg-background rounded-lg transition-colors disabled:opacity-50\"\n                title={t('admin.generateTheme', 'Generate AI Theme')}\n              >\n                {isGenerating ? (\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                ) : (\n                  <Shuffle size={16} />\n                )}\n              </button>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3 mb-4\">\n              {Object.entries(COLOR_PRESETS).map(([key, preset]) => (\n                <button\n                  key={key}\n                  onClick={() => handlePresetSelect(key)}\n                  className={`p-3 rounded-lg border-2 transition-all ${\n                    selectedPreset === key\n                      ? 'border-primary bg-primary/5'\n                      : 'border-border hover:border-primary/50'\n                  }`}\n                >\n                  <div className=\"flex gap-1 mb-2\">\n                    <div\n                      className=\"w-4 h-4 rounded\"\n                      style={{ backgroundColor: preset.primary }}\n                    ></div>\n                    <div\n                      className=\"w-4 h-4 rounded\"\n                      style={{ backgroundColor: preset.secondary }}\n                    ></div>\n                    <div\n                      className=\"w-4 h-4 rounded\"\n                      style={{ backgroundColor: preset.accent }}\n                    ></div>\n                  </div>\n                  <div className=\"text-xs font-medium text-foreground\">\n                    {preset.name}\n                  </div>\n                </button>\n              ))}\n            </div>\n\n            {/* Custom Colors */}\n            <div className=\"space-y-4\">\n              <h4 className=\"font-medium text-foreground\">\n                {t('admin.customColors', 'Custom Colors')}\n              </h4>\n              <ColorPicker\n                label={t('admin.primaryColor', 'Primary')}\n                colorKey=\"primary\"\n                value={customColors.primary}\n              />\n              <ColorPicker\n                label={t('admin.secondaryColor', 'Secondary')}\n                colorKey=\"secondary\"\n                value={customColors.secondary}\n              />\n              <ColorPicker\n                label={t('admin.accentColor', 'Accent')}\n                colorKey=\"accent\"\n                value={customColors.accent}\n              />\n              <ColorPicker\n                label={t('admin.backgroundColor', 'Background')}\n                colorKey=\"background\"\n                value={customColors.background}\n              />\n              <ColorPicker\n                label={t('admin.surfaceColor', 'Surface')}\n                colorKey=\"surface\"\n                value={customColors.surface}\n              />\n              <ColorPicker\n                label={t('admin.textColor', 'Text')}\n                colorKey=\"foreground\"\n                value={customColors.foreground}\n              />\n            </div>\n          </div>\n\n          {/* Typography */}\n          <div className=\"bg-surface border border-border rounded-xl p-6\">\n            <h3 className=\"font-semibold text-foreground flex items-center gap-2 mb-4\">\n              <Type size={20} />\n              {t('admin.typography', 'Typography')}\n            </h3>\n\n            <div className=\"space-y-3\">\n              {Object.entries(TYPOGRAPHY_PRESETS).map(([key, preset]) => (\n                <button\n                  key={key}\n                  onClick={() => setSelectedTypography(key)}\n                  className={`w-full p-3 rounded-lg border text-left transition-all ${\n                    selectedTypography === key\n                      ? 'border-primary bg-primary/5'\n                      : 'border-border hover:border-primary/50'\n                  }`}\n                >\n                  <div className=\"font-medium text-foreground\">\n                    {preset.name}\n                  </div>\n                  <div className=\"text-xs text-foreground/60 mt-1\">\n                    {preset.headings} / {preset.body}\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Layout */}\n          <div className=\"bg-surface border border-border rounded-xl p-6\">\n            <h3 className=\"font-semibold text-foreground flex items-center gap-2 mb-4\">\n              <Layout size={20} />\n              {t('admin.layout', 'Layout')}\n            </h3>\n\n            <div className=\"space-y-3\">\n              {Object.entries(LAYOUT_PRESETS).map(([key, preset]) => (\n                <button\n                  key={key}\n                  onClick={() => setSelectedLayout(key)}\n                  className={`w-full p-3 rounded-lg border text-left transition-all ${\n                    selectedLayout === key\n                      ? 'border-primary bg-primary/5'\n                      : 'border-border hover:border-primary/50'\n                  }`}\n                >\n                  <div className=\"font-medium text-foreground\">\n                    {preset.name}\n                  </div>\n                  <div className=\"text-xs text-foreground/60 mt-1\">\n                    Spacing: {preset.sectionSpacing} | Radius:{' '}\n                    {preset.borderRadius}\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"bg-surface border border-border rounded-xl p-6\">\n            <h3 className=\"font-semibold text-foreground flex items-center gap-2 mb-4\">\n              <Zap size={20} />\n              {t('admin.actions', 'Actions')}\n            </h3>\n\n            <div className=\"space-y-3\">\n              <button\n                onClick={handleResetTheme}\n                className=\"w-full flex items-center gap-2 px-4 py-2 border border-border rounded-lg hover:bg-background transition-colors\"\n              >\n                <RotateCcw size={16} />\n                {t('admin.resetTheme', 'Reset to Default')}\n              </button>\n\n              <button className=\"w-full flex items-center gap-2 px-4 py-2 border border-border rounded-lg hover:bg-background transition-colors\">\n                <Download size={16} />\n                {t('admin.exportTheme', 'Export Theme')}\n              </button>\n\n              <button className=\"w-full flex items-center gap-2 px-4 py-2 border border-border rounded-lg hover:bg-background transition-colors\">\n                <Upload size={16} />\n                {t('admin.importTheme', 'Import Theme')}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Preview Panel */}\n        <div className=\"lg:col-span-2\">\n          <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n            {/* Preview Controls */}\n            <div className=\"border-b border-border p-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"font-semibold text-foreground\">\n                  {t('admin.livePreview', 'Live Preview')}\n                </h3>\n\n                <div className=\"flex items-center gap-2\">\n                  {/* Device Preview Toggle */}\n                  <div className=\"flex bg-background border border-border rounded-lg overflow-hidden\">\n                    <button\n                      onClick={() => setPreviewMode('desktop')}\n                      className={`p-2 transition-colors ${\n                        previewMode === 'desktop'\n                          ? 'bg-primary text-white'\n                          : 'text-foreground/60 hover:text-foreground'\n                      }`}\n                    >\n                      <Monitor size={16} />\n                    </button>\n                    <button\n                      onClick={() => setPreviewMode('tablet')}\n                      className={`p-2 transition-colors ${\n                        previewMode === 'tablet'\n                          ? 'bg-primary text-white'\n                          : 'text-foreground/60 hover:text-foreground'\n                      }`}\n                    >\n                      <Tablet size={16} />\n                    </button>\n                    <button\n                      onClick={() => setPreviewMode('mobile')}\n                      className={`p-2 transition-colors ${\n                        previewMode === 'mobile'\n                          ? 'bg-primary text-white'\n                          : 'text-foreground/60 hover:text-foreground'\n                      }`}\n                    >\n                      <Smartphone size={16} />\n                    </button>\n                  </div>\n\n                  {/* Dark Mode Toggle */}\n                  <button\n                    onClick={() => setIsDarkMode(!isDarkMode)}\n                    className=\"p-2 border border-border rounded-lg hover:bg-background transition-colors\"\n                  >\n                    {isDarkMode ? <Sun size={16} /> : <Moon size={16} />}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Preview Content */}\n            <div\n              className={`${\n                previewMode === 'desktop'\n                  ? 'w-full'\n                  : previewMode === 'tablet'\n                    ? 'w-[768px] mx-auto'\n                    : 'w-[375px] mx-auto'\n              } transition-all duration-300`}\n            >\n              <PreviewComponent />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Clock,\n  CheckCircle,\n  XCircle,\n  AlertCircle,\n  Search,\n  User,\n  DollarSign,\n  Package,\n  Mail,\n  Phone,\n} from 'lucide-react'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\n\n// Mock data - simplified\nconst MOCK_REQUESTS = [\n  {\n    id: 'CR-001',\n    customerName: 'Ahmed Al-Rashid',\n    customerNameAr: 'أحمد الراشد',\n    email: 'ahmed@example.com',\n    phone: '+966501234567',\n    status: 'pending',\n    priority: 'high',\n    segment: 'leather',\n    projectTitle: 'Custom Leather Briefcase',\n    projectTitleAr: 'حقيبة جلدية مخصصة',\n    description: 'Premium leather briefcase with custom embossing.',\n    budget: 1500,\n    timeline: '2 weeks',\n    dateSubmitted: '2024-01-15T10:30:00Z',\n    files: 2,\n  },\n  {\n    id: 'CR-002',\n    customerName: 'Sarah Johnson',\n    customerNameAr: 'سارة جونسون',\n    email: 'sarah@example.com',\n    phone: '+1234567890',\n    status: 'in_progress',\n    priority: 'medium',\n    segment: 'electronics',\n    projectTitle: 'Custom Smart Watch Interface',\n    projectTitleAr: 'واجهة ساعة ذكية مخصصة',\n    description: 'Smart watch interface with health monitoring.',\n    budget: 800,\n    timeline: '3 weeks',\n    dateSubmitted: '2024-01-12T09:15:00Z',\n    files: 1,\n  },\n  {\n    id: 'CR-003',\n    customerName: 'Mohammed Hassan',\n    customerNameAr: 'محمد حسن',\n    email: 'mohammed@example.com',\n    phone: '+966509876543',\n    status: 'completed',\n    priority: 'low',\n    segment: 'furniture',\n    projectTitle: 'Executive Office Desk',\n    projectTitleAr: 'مكتب تنفيذي مخصص',\n    description: 'Complete office setup with custom wood finish.',\n    budget: 2500,\n    timeline: '4 weeks',\n    dateSubmitted: '2024-01-05T11:20:00Z',\n    files: 3,\n  },\n]\n\nconst STATUS_CONFIG = {\n  pending: {\n    label: 'Pending',\n    labelAr: 'قيد الانتظار',\n    color: 'bg-yellow-100 text-yellow-800',\n    icon: Clock,\n  },\n  in_progress: {\n    label: 'In Progress',\n    labelAr: 'قيد التنفيذ',\n    color: 'bg-blue-100 text-blue-800',\n    icon: AlertCircle,\n  },\n  completed: {\n    label: 'Completed',\n    labelAr: 'مكتمل',\n    color: 'bg-green-100 text-green-800',\n    icon: CheckCircle,\n  },\n  rejected: {\n    label: 'Rejected',\n    labelAr: 'مرفوض',\n    color: 'bg-red-100 text-red-800',\n    icon: XCircle,\n  },\n}\n\nexport default function CustomizationRequests() {\n  const [requests, setRequests] = useState(MOCK_REQUESTS)\n  const [filteredRequests, setFilteredRequests] = useState(MOCK_REQUESTS)\n  const [selectedRequest, setSelectedRequest] = useState(null)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [statusFilter, setStatusFilter] = useState('all')\n\n  const { t, isRTL, formatCurrency, formatDate } = useI18n()\n\n  useEffect(() => {\n    let filtered = requests\n\n    if (searchQuery) {\n      filtered = filtered.filter(\n        request =>\n          request.customerName\n            .toLowerCase()\n            .includes(searchQuery.toLowerCase()) ||\n          request.projectTitle\n            .toLowerCase()\n            .includes(searchQuery.toLowerCase()) ||\n          request.id.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    }\n\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(request => request.status === statusFilter)\n    }\n\n    setFilteredRequests(filtered)\n  }, [requests, searchQuery, statusFilter])\n\n  const getStatusBadge = status => {\n    const config = STATUS_CONFIG[status]\n    const StatusIcon = config.icon\n\n    return (\n      <span\n        className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium ${config.color}`}\n      >\n        <StatusIcon size={12} />\n        {isRTL ? config.labelAr : config.label}\n      </span>\n    )\n  }\n\n  const handleStatusChange = (requestId, newStatus) => {\n    setRequests(prev =>\n      prev.map(req =>\n        req.id === requestId ? { ...req, status: newStatus } : req\n      )\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-foreground\">\n          {t('admin.customizationRequests', 'Customization Requests')}\n        </h1>\n        <p className=\"text-foreground/60\">\n          {t(\n            'admin.requestsSubtitle',\n            'Manage customer customization requests'\n          )}\n        </p>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-surface border border-border rounded-xl p-4\">\n        <div\n          className={`flex items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n        >\n          <div className=\"relative flex-1\">\n            <Search\n              className={`absolute top-1/2 transform -translate-y-1/2 text-foreground/40 ${isRTL ? 'right-3' : 'left-3'}`}\n              size={20}\n            />\n            <input\n              type=\"text\"\n              placeholder={t('admin.searchRequests', 'Search requests...')}\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              className={`w-full bg-background border border-border rounded-lg text-foreground py-2 ${\n                isRTL ? 'pr-10 pl-4 text-right' : 'pl-10 pr-4 text-left'\n              }`}\n            />\n          </div>\n          <select\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n            className=\"px-3 py-2 bg-background border border-border rounded-lg text-foreground\"\n          >\n            <option value=\"all\">\n              {t('admin.allStatuses', 'All Statuses')}\n            </option>\n            {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n              <option key={key} value={key}>\n                {isRTL ? config.labelAr : config.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Requests Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n        <AnimatePresence>\n          {filteredRequests.map(request => (\n            <motion.div\n              key={request.id}\n              layout\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              className=\"bg-surface border border-border rounded-xl p-6 hover:shadow-lg transition-all cursor-pointer\"\n              onClick={() => setSelectedRequest(request)}\n            >\n              {/* Header */}\n              <div\n                className={`flex items-start justify-between mb-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <div className={isRTL ? 'text-right' : 'text-left'}>\n                  <h3 className=\"font-semibold text-foreground line-clamp-1\">\n                    {isRTL ? request.projectTitleAr : request.projectTitle}\n                  </h3>\n                  <p className=\"text-sm text-foreground/60\">{request.id}</p>\n                </div>\n                {getStatusBadge(request.status)}\n              </div>\n\n              {/* Customer */}\n              <div\n                className={`flex items-center gap-2 mb-3 text-sm ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <User size={14} className=\"text-foreground/60\" />\n                <span className=\"text-foreground\">\n                  {isRTL ? request.customerNameAr : request.customerName}\n                </span>\n              </div>\n\n              {/* Details Grid */}\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                <div\n                  className={`flex items-center gap-1 ${isRTL ? 'flex-row-reverse' : ''}`}\n                >\n                  <DollarSign size={12} className=\"text-foreground/60\" />\n                  <span className=\"text-foreground/60\">\n                    {formatCurrency(request.budget)}\n                  </span>\n                </div>\n                <div\n                  className={`flex items-center gap-1 ${isRTL ? 'flex-row-reverse' : ''}`}\n                >\n                  <Package size={12} className=\"text-foreground/60\" />\n                  <span className=\"text-foreground/60\">\n                    {request.files} {t('admin.files', 'files')}\n                  </span>\n                </div>\n                <div\n                  className={`flex items-center gap-1 ${isRTL ? 'flex-row-reverse' : ''}`}\n                >\n                  <Clock size={12} className=\"text-foreground/60\" />\n                  <span className=\"text-foreground/60\">{request.timeline}</span>\n                </div>\n                <div\n                  className={`flex items-center gap-1 ${isRTL ? 'flex-row-reverse' : ''}`}\n                >\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  <span className=\"text-foreground/60\">\n                    {formatDate(request.dateSubmitted)}\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n\n      {/* Request Detail Modal */}\n      <AnimatePresence>\n        {selectedRequest && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n            onClick={() => setSelectedRequest(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.95, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.95, opacity: 0 }}\n              className=\"bg-surface border border-border rounded-xl p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto\"\n              onClick={e => e.stopPropagation()}\n            >\n              <div\n                className={`flex items-center justify-between mb-6 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <h3 className=\"text-lg font-semibold text-foreground\">\n                  {t('admin.requestDetails', 'Request Details')}\n                </h3>\n                <button\n                  onClick={() => setSelectedRequest(null)}\n                  className=\"p-2 text-foreground/40 hover:text-foreground transition-colors\"\n                >\n                  <XCircle size={20} />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">\n                    {isRTL\n                      ? selectedRequest.projectTitleAr\n                      : selectedRequest.projectTitle}\n                  </h4>\n                  <p className=\"text-foreground/60 text-sm\">\n                    {isRTL\n                      ? selectedRequest.descriptionAr\n                      : selectedRequest.description}\n                  </p>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-xs text-foreground/60 uppercase\">\n                      {t('admin.customer', 'Customer')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {isRTL\n                        ? selectedRequest.customerNameAr\n                        : selectedRequest.customerName}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-foreground/60 uppercase\">\n                      {t('admin.status', 'Status')}\n                    </label>\n                    <div>{getStatusBadge(selectedRequest.status)}</div>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-foreground/60 uppercase\">\n                      {t('admin.budget', 'Budget')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {formatCurrency(selectedRequest.budget)}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-foreground/60 uppercase\">\n                      {t('admin.timeline', 'Timeline')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {selectedRequest.timeline}\n                    </p>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"text-xs text-foreground/60 uppercase\">\n                    {t('admin.contact', 'Contact')}\n                  </label>\n                  <div className=\"space-y-2 mt-1\">\n                    <div\n                      className={`flex items-center gap-2 text-sm ${isRTL ? 'flex-row-reverse' : ''}`}\n                    >\n                      <Mail size={14} className=\"text-foreground/60\" />\n                      <span className=\"text-foreground\">\n                        {selectedRequest.email}\n                      </span>\n                    </div>\n                    <div\n                      className={`flex items-center gap-2 text-sm ${isRTL ? 'flex-row-reverse' : ''}`}\n                    >\n                      <Phone size={14} className=\"text-foreground/60\" />\n                      <span className=\"text-foreground\">\n                        {selectedRequest.phone}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() =>\n                      handleStatusChange(selectedRequest.id, 'in_progress')\n                    }\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors\"\n                  >\n                    {t('admin.startProcessing', 'Start Processing')}\n                  </button>\n                  <button\n                    onClick={() =>\n                      handleStatusChange(selectedRequest.id, 'completed')\n                    }\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg text-sm font-medium hover:bg-green-700 transition-colors\"\n                  >\n                    {t('admin.markComplete', 'Mark Complete')}\n                  </button>\n                  <button\n                    onClick={() =>\n                      handleStatusChange(selectedRequest.id, 'rejected')\n                    }\n                    className=\"px-4 py-2 bg-red-600 text-white rounded-lg text-sm font-medium hover:bg-red-700 transition-colors\"\n                  >\n                    {t('admin.reject', 'Reject')}\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Users,\n  Search,\n  Edit,\n  Shield,\n  ShieldCheck,\n  Eye,\n  CheckCircle,\n} from 'lucide-react'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\n\nconst MOCK_USERS = [\n  {\n    id: 1,\n    name: 'Faisal Khan',\n    nameAr: 'فيصل خان',\n    email: 'faisal@limitlessinfotech.com',\n    phone: '+966501234567',\n    role: 'super_admin',\n    status: 'active',\n    joinDate: '2023-01-01T00:00:00Z',\n    lastLogin: new Date().toISOString(),\n    orders: 0,\n    totalSpent: 0,\n    avatar: '/api/placeholder/40/40',\n  },\n]\n\nconst ROLE_CONFIG = {\n  super_admin: {\n    label: 'Super Admin',\n    labelAr: 'مدير عام',\n    color: 'bg-purple-100 text-purple-800',\n    icon: ShieldCheck,\n  },\n  admin: {\n    label: 'Admin',\n    labelAr: 'مدير',\n    color: 'bg-red-100 text-red-800',\n    icon: ShieldCheck,\n  },\n  moderator: {\n    label: 'Moderator',\n    labelAr: 'مشرف',\n    color: 'bg-blue-100 text-blue-800',\n    icon: Shield,\n  },\n  customer: {\n    label: 'Customer',\n    labelAr: 'عميل',\n    color: 'bg-green-100 text-green-800',\n    icon: Users,\n  },\n}\n\nconst STATUS_CONFIG = {\n  active: {\n    label: 'Active',\n    labelAr: 'نشط',\n    color: 'bg-green-100 text-green-800',\n  },\n  inactive: {\n    label: 'Inactive',\n    labelAr: 'غير نشط',\n    color: 'bg-gray-100 text-gray-800',\n  },\n  suspended: {\n    label: 'Suspended',\n    labelAr: 'معلق',\n    color: 'bg-red-100 text-red-800',\n  },\n}\n\nexport default function UserManagement() {\n  const [users, setUsers] = useState(MOCK_USERS)\n  const [filteredUsers, setFilteredUsers] = useState(MOCK_USERS)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [roleFilter, setRoleFilter] = useState('all')\n  const [statusFilter, setStatusFilter] = useState('all')\n  // Removed unused state variables\n\n  const { t, isRTL, formatCurrency } = useI18n()\n\n  useEffect(() => {\n    let filtered = users\n\n    if (searchQuery) {\n      filtered = filtered.filter(\n        user =>\n          user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          user.nameAr.includes(searchQuery) ||\n          user.email.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    }\n\n    if (roleFilter !== 'all') {\n      filtered = filtered.filter(user => user.role === roleFilter)\n    }\n\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(user => user.status === statusFilter)\n    }\n\n    setFilteredUsers(filtered)\n  }, [users, searchQuery, roleFilter, statusFilter])\n\n  // Removed unused getRoleBadge function\n\n  const getStatusBadge = status => {\n    const config = STATUS_CONFIG[status]\n\n    return (\n      <span\n        className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${config.color}`}\n      >\n        {isRTL ? config.labelAr : config.label}\n      </span>\n    )\n  }\n\n  const handleStatusChange = (userId, newStatus) => {\n    setUsers(prev =>\n      prev.map(user =>\n        user.id === userId ? { ...user, status: newStatus } : user\n      )\n    )\n  }\n\n  const handleRoleChange = (userId, newRole) => {\n    setUsers(prev =>\n      prev.map(user => (user.id === userId ? { ...user, role: newRole } : user))\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div\n        className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n      >\n        <div className={isRTL ? 'text-right' : 'text-left'}>\n          <h1 className=\"text-2xl font-bold text-foreground\">\n            {t('admin.userManagement', 'User Management')}\n          </h1>\n          <p className=\"text-foreground/60\">\n            {t('admin.userSubtitle', 'Manage users, roles, and permissions')}\n          </p>\n        </div>\n\n        {/* Add User functionality will be implemented with backend API */}\n        <div className=\"text-sm text-foreground/60\">\n          {t('admin.addUser', 'Add User')} - Available after backend integration\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-surface border border-border rounded-xl p-4\">\n        <div\n          className={`flex items-center gap-4 flex-wrap ${isRTL ? 'flex-row-reverse' : ''}`}\n        >\n          <div className=\"relative flex-1 min-w-[300px]\">\n            <Search\n              className={`absolute top-1/2 transform -translate-y-1/2 text-foreground/40 ${isRTL ? 'right-3' : 'left-3'}`}\n              size={20}\n            />\n            <input\n              type=\"text\"\n              placeholder={t('admin.searchUsers', 'Search users...')}\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              className={`w-full bg-background border border-border rounded-lg text-foreground py-2 ${\n                isRTL ? 'pr-10 pl-4 text-right' : 'pl-10 pr-4 text-left'\n              }`}\n            />\n          </div>\n\n          <select\n            value={roleFilter}\n            onChange={e => setRoleFilter(e.target.value)}\n            className=\"px-3 py-2 bg-background border border-border rounded-lg text-foreground\"\n          >\n            <option value=\"all\">{t('admin.allRoles', 'All Roles')}</option>\n            {Object.entries(ROLE_CONFIG).map(([key, config]) => (\n              <option key={key} value={key}>\n                {isRTL ? config.labelAr : config.label}\n              </option>\n            ))}\n          </select>\n\n          <select\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n            className=\"px-3 py-2 bg-background border border-border rounded-lg text-foreground\"\n          >\n            <option value=\"all\">\n              {t('admin.allStatuses', 'All Statuses')}\n            </option>\n            {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n              <option key={key} value={key}>\n                {isRTL ? config.labelAr : config.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Users Table */}\n      <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-background border-b border-border\">\n              <tr>\n                <th\n                  className={`p-4 font-medium text-foreground ${isRTL ? 'text-right' : 'text-left'}`}\n                >\n                  {t('admin.user', 'User')}\n                </th>\n                <th\n                  className={`p-4 font-medium text-foreground ${isRTL ? 'text-right' : 'text-left'}`}\n                >\n                  {t('admin.role', 'Role')}\n                </th>\n                <th\n                  className={`p-4 font-medium text-foreground ${isRTL ? 'text-right' : 'text-left'}`}\n                >\n                  {t('admin.status', 'Status')}\n                </th>\n                <th\n                  className={`p-4 font-medium text-foreground ${isRTL ? 'text-right' : 'text-left'}`}\n                >\n                  {t('admin.activity', 'Activity')}\n                </th>\n                <th\n                  className={`p-4 font-medium text-foreground ${isRTL ? 'text-right' : 'text-left'}`}\n                >\n                  {t('admin.actions', 'Actions')}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <AnimatePresence>\n                {filteredUsers.map(user => (\n                  <motion.tr\n                    key={user.id}\n                    layout\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    className=\"hover:bg-background/50 transition-colors border-b border-border last:border-0\"\n                  >\n                    <td className=\"p-4\">\n                      <div\n                        className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n                      >\n                        <img\n                          src={user.avatar}\n                          alt={isRTL ? user.nameAr : user.name}\n                          className=\"w-10 h-10 rounded-full object-cover\"\n                        />\n                        <div className={isRTL ? 'text-right' : 'text-left'}>\n                          <div className=\"font-medium text-foreground\">\n                            {isRTL ? user.nameAr : user.name}\n                          </div>\n                          <div className=\"text-sm text-foreground/60\">\n                            {user.email}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <select\n                        value={user.role}\n                        onChange={e =>\n                          handleRoleChange(user.id, e.target.value)\n                        }\n                        className=\"px-2 py-1 text-xs border border-border rounded bg-background\"\n                      >\n                        {Object.entries(ROLE_CONFIG).map(([key, config]) => (\n                          <option key={key} value={key}>\n                            {isRTL ? config.labelAr : config.label}\n                          </option>\n                        ))}\n                      </select>\n                    </td>\n                    <td className=\"p-4\">{getStatusBadge(user.status)}</td>\n                    <td className=\"p-4\">\n                      <div\n                        className={`text-sm ${isRTL ? 'text-right' : 'text-left'}`}\n                      >\n                        <div className=\"text-foreground\">\n                          {user.orders} orders\n                        </div>\n                        <div className=\"text-foreground/60\">\n                          {formatCurrency(user.totalSpent)}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <div\n                        className={`flex items-center gap-2 ${isRTL ? 'flex-row-reverse' : ''}`}\n                      >\n                        <button className=\"p-2 hover:bg-background rounded-lg transition-colors\">\n                          <Eye size={16} />\n                        </button>\n                        <button className=\"p-2 hover:bg-background rounded-lg transition-colors\">\n                          <Edit size={16} />\n                        </button>\n                        <select\n                          value={user.status}\n                          onChange={e =>\n                            handleStatusChange(user.id, e.target.value)\n                          }\n                          className=\"px-2 py-1 text-xs border border-border rounded bg-background\"\n                        >\n                          {Object.entries(STATUS_CONFIG).map(\n                            ([key, config]) => (\n                              <option key={key} value={key}>\n                                {isRTL ? config.labelAr : config.label}\n                              </option>\n                            )\n                          )}\n                        </select>\n                      </div>\n                    </td>\n                  </motion.tr>\n                ))}\n              </AnimatePresence>\n            </tbody>\n          </table>\n        </div>\n\n        {filteredUsers.length === 0 && (\n          <div className=\"py-12 text-center\">\n            <Users size={48} className=\"mx-auto text-foreground/30 mb-4\" />\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">\n              No users found\n            </h3>\n            <p className=\"text-foreground/60\">\n              Try adjusting your search criteria\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Stats Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Users className=\"text-blue-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.totalUsers', 'Total Users')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {users.length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-green-100 rounded-lg\">\n              <CheckCircle className=\"text-green-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.activeUsers', 'Active Users')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {users.filter(u => u.status === 'active').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-red-100 rounded-lg\">\n              <ShieldCheck className=\"text-red-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.adminUsers', 'Admins')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {users.filter(u => u.role === 'admin').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-green-100 rounded-lg\">\n              <Users className=\"text-green-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('admin.customers', 'Customers')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {users.filter(u => u.role === 'customer').length}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport {\n  Users,\n  ShoppingBag,\n  TrendingUp,\n  DollarSign,\n  MessageSquare,\n  ArrowUp,\n  ArrowDown,\n  Smartphone,\n  Download,\n  Target,\n} from 'lucide-react'\nimport { useSegment } from '../../../contexts/SegmentContext.jsx'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\n\n// Mock India-specific analytics data\nconst INDIA_ANALYTICS = {\n  overview: {\n    totalRevenue: 2856420, // in INR\n    totalOrders: 5284,\n    totalCustomers: 2892,\n    conversionRate: 4.2,\n    changes: {\n      revenue: 18.5,\n      orders: 12.8,\n      customers: 25.7,\n      conversion: 3.1,\n    },\n  },\n  paymentMethods: {\n    cod: { orders: 2640, percentage: 50, revenue: 1285420 },\n    upi: { orders: 1586, percentage: 30, revenue: 856420 },\n    cards: { orders: 792, percentage: 15, revenue: 524670 },\n    netBanking: { orders: 266, percentage: 5, revenue: 189910 },\n  },\n  regions: [\n    { state: 'Maharashtra', orders: 1285, revenue: 685420, growth: 22.1 },\n    { state: 'Karnataka', orders: 987, revenue: 542830, growth: 18.5 },\n    { state: 'Delhi', orders: 856, revenue: 456720, growth: 15.2 },\n    { state: 'Tamil Nadu', orders: 742, revenue: 398560, growth: 12.8 },\n    { state: 'Gujarat', orders: 634, revenue: 342180, growth: 19.3 },\n    { state: 'Uttar Pradesh', orders: 580, revenue: 298340, growth: 16.7 },\n  ],\n  languages: {\n    english: { users: 2023, percentage: 70 },\n    hindi: { users: 869, percentage: 30 },\n  },\n  deviceTypes: {\n    mobile: { orders: 3700, percentage: 70, revenue: 1999494 },\n    desktop: { orders: 1056, percentage: 20, revenue: 571684 },\n    tablet: { orders: 528, percentage: 10, revenue: 285242 },\n  },\n  topProducts: [\n    {\n      name: 'Premium Leather Wallet',\n      sales: 245,\n      revenue: 612450,\n      category: 'leather',\n    },\n    {\n      name: 'Wireless Bluetooth Earbuds',\n      sales: 189,\n      revenue: 755211,\n      category: 'electronics',\n    },\n    {\n      name: 'Ergonomic Office Chair',\n      sales: 87,\n      revenue: 1391913,\n      category: 'furniture',\n    },\n    {\n      name: 'Handcrafted Leather Belt',\n      sales: 156,\n      revenue: 249344,\n      category: 'leather',\n    },\n    {\n      name: 'Smart Fitness Watch',\n      sales: 98,\n      revenue: 1273902,\n      category: 'electronics',\n    },\n  ],\n  hourlyTrends: [\n    { hour: '00:00', orders: 12, revenue: 18420 },\n    { hour: '06:00', orders: 45, revenue: 67850 },\n    { hour: '12:00', orders: 189, revenue: 285420 },\n    { hour: '18:00', orders: 234, revenue: 354780 },\n    { hour: '21:00', orders: 167, revenue: 251890 },\n  ],\n}\n\nexport default function IndiaAnalytics() {\n  const { theme } = useSegment()\n  const { formatCurrency } = useI18n()\n  const [timeRange, setTimeRange] = useState('30d')\n  const [analytics] = useState(INDIA_ANALYTICS)\n\n  const MetricCard = ({\n    title,\n    value,\n    change,\n    icon: Icon,\n    format = 'number',\n    color = theme.colors.primary,\n  }) => {\n    const isPositive = change > 0\n    const formatValue = val => {\n      if (format === 'currency') return formatCurrency(val)\n      if (format === 'percentage') return `${val}%`\n      return val.toLocaleString()\n    }\n\n    return (\n      <motion.div\n        className=\"bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-300 border border-gray-100\"\n        whileHover={{ y: -2 }}\n        layout\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          <div\n            className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n            style={{ backgroundColor: `${color}15` }}\n          >\n            <Icon size={24} style={{ color }} />\n          </div>\n          <div\n            className={`flex items-center gap-1 text-sm font-medium ${\n              isPositive ? 'text-green-600' : 'text-red-600'\n            }`}\n          >\n            {isPositive ? <ArrowUp size={16} /> : <ArrowDown size={16} />}\n            {Math.abs(change)}%\n          </div>\n        </div>\n        <div>\n          <h3 className=\"text-3xl font-bold text-gray-900 mb-1\">\n            {formatValue(value)}\n          </h3>\n          <p className=\"text-gray-600 text-sm\">{title}</p>\n        </div>\n      </motion.div>\n    )\n  }\n\n  const PaymentMethodChart = () => (\n    <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">\n        Payment Methods Distribution\n      </h3>\n      <div className=\"space-y-4\">\n        {Object.entries(analytics.paymentMethods).map(([method, data]) => {\n          const methodLabels = {\n            cod: 'Cash on Delivery',\n            upi: 'UPI Payments',\n            cards: 'Credit/Debit Cards',\n            netBanking: 'Net Banking',\n          }\n\n          return (\n            <div key={method} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className=\"w-4 h-4 rounded-full\"\n                  style={{\n                    backgroundColor:\n                      method === 'cod'\n                        ? '#16a34a'\n                        : method === 'upi'\n                          ? '#2563eb'\n                          : method === 'cards'\n                            ? '#dc2626'\n                            : '#7c3aed',\n                  }}\n                />\n                <span className=\"text-gray-700 font-medium\">\n                  {methodLabels[method]}\n                </span>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-lg font-bold text-gray-900\">\n                  {data.percentage}%\n                </div>\n                <div className=\"text-sm text-gray-500\">\n                  {formatCurrency(data.revenue)}\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n\n  const RegionalPerformance = () => (\n    <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">\n          Regional Performance\n        </h3>\n        <button className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\">\n          View Map\n        </button>\n      </div>\n      <div className=\"space-y-4\">\n        {analytics.regions.slice(0, 6).map((region, index) => (\n          <div\n            key={region.state}\n            className=\"flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg transition-colors\"\n          >\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center text-sm font-bold text-blue-600\">\n                {index + 1}\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">{region.state}</div>\n                <div className=\"text-sm text-gray-500\">\n                  {region.orders} orders\n                </div>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"font-semibold text-gray-900\">\n                {formatCurrency(region.revenue)}\n              </div>\n              <div className=\"text-sm text-green-600 flex items-center gap-1\">\n                <ArrowUp size={12} />\n                {region.growth}%\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen py-8 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              India Market Analytics\n            </h1>\n            <p className=\"text-gray-600\">\n              Comprehensive insights for the Indian market launch\n            </p>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <select\n              value={timeRange}\n              onChange={e => setTimeRange(e.target.value)}\n              className=\"px-4 py-2 rounded-lg border border-gray-300 bg-white text-gray-700 focus:ring-2 focus:ring-blue-500 transition-all\"\n            >\n              <option value=\"7d\">Last 7 Days</option>\n              <option value=\"30d\">Last 30 Days</option>\n              <option value=\"90d\">Last 90 Days</option>\n              <option value=\"1y\">Last Year</option>\n            </select>\n\n            <motion.button\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-lg font-medium shadow-sm hover:shadow-md transition-all flex items-center gap-2\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Download size={16} />\n              Export Report\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Overview Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <MetricCard\n            title=\"Total Revenue (INR)\"\n            value={analytics.overview.totalRevenue}\n            change={analytics.overview.changes.revenue}\n            icon={DollarSign}\n            format=\"currency\"\n            color=\"#16a34a\"\n          />\n          <MetricCard\n            title=\"Total Orders\"\n            value={analytics.overview.totalOrders}\n            change={analytics.overview.changes.orders}\n            icon={ShoppingBag}\n            color=\"#2563eb\"\n          />\n          <MetricCard\n            title=\"Active Customers\"\n            value={analytics.overview.totalCustomers}\n            change={analytics.overview.changes.customers}\n            icon={Users}\n            color=\"#7c3aed\"\n          />\n          <MetricCard\n            title=\"Conversion Rate\"\n            value={analytics.overview.conversionRate}\n            change={analytics.overview.changes.conversion}\n            icon={TrendingUp}\n            format=\"percentage\"\n            color=\"#dc2626\"\n          />\n        </div>\n\n        {/* India-Specific Metrics */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n          <PaymentMethodChart />\n          <RegionalPerformance />\n\n          {/* Device & Language Stats */}\n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">\n              User Preferences\n            </h3>\n\n            {/* Device Types */}\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3\">\n                Device Types\n              </h4>\n              <div className=\"space-y-2\">\n                {Object.entries(analytics.deviceTypes).map(([device, data]) => (\n                  <div\n                    key={device}\n                    className=\"flex items-center justify-between\"\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <Smartphone size={16} className=\"text-gray-500\" />\n                      <span className=\"text-sm text-gray-700 capitalize\">\n                        {device}\n                      </span>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {data.percentage}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Language Preferences */}\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3\">\n                Language Preferences\n              </h4>\n              <div className=\"space-y-2\">\n                {Object.entries(analytics.languages).map(([lang, data]) => (\n                  <div key={lang} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <MessageSquare size={16} className=\"text-gray-500\" />\n                      <span className=\"text-sm text-gray-700 capitalize\">\n                        {lang}\n                      </span>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {data.percentage}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Top Products */}\n        <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100 mb-8\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">\n            Top Performing Products\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b border-gray-200\">\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-700\">\n                    Product\n                  </th>\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-700\">\n                    Category\n                  </th>\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-700\">\n                    Sales\n                  </th>\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-700\">\n                    Revenue\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {analytics.topProducts.map((product, index) => (\n                  <tr\n                    key={index}\n                    className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\"\n                  >\n                    <td className=\"py-3 px-4\">\n                      <div className=\"font-medium text-gray-900\">\n                        {product.name}\n                      </div>\n                    </td>\n                    <td className=\"py-3 px-4\">\n                      <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800 capitalize\">\n                        {product.category}\n                      </span>\n                    </td>\n                    <td className=\"py-3 px-4 text-gray-700\">{product.sales}</td>\n                    <td className=\"py-3 px-4 font-semibold text-gray-900\">\n                      {formatCurrency(product.revenue)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Insights & Recommendations */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200\">\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-4 flex items-center gap-2\">\n            <Target size={20} />\n            Key Insights for India Market\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"bg-white p-4 rounded-lg border border-blue-100\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">\n                Payment Preference\n              </h4>\n              <p className=\"text-sm text-gray-600\">\n                50% of customers prefer Cash on Delivery, indicating\n                trust-building opportunities for digital payments.\n              </p>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-blue-100\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">\n                Mobile-First Strategy\n              </h4>\n              <p className=\"text-sm text-gray-600\">\n                70% of orders come from mobile devices. Prioritize mobile UX\n                optimization.\n              </p>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-blue-100\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">Regional Focus</h4>\n              <p className=\"text-sm text-gray-600\">\n                Maharashtra and Karnataka drive 40% of total revenue. Consider\n                regional marketing campaigns.\n              </p>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-blue-100\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">\n                Language Localization\n              </h4>\n              <p className=\"text-sm text-gray-600\">\n                30% of users prefer Hindi interface. Expanding Hindi content\n                could increase engagement.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport {\n  Brain,\n  Target,\n  TrendingUp,\n  Users,\n  Package,\n  Settings,\n  Eye,\n  Edit3,\n  Plus,\n  Download,\n  BarChart3,\n  RefreshCw,\n  CheckCircle,\n  X,\n} from 'lucide-react'\nimport { useSegment } from '../../../contexts/SegmentContext.jsx'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\n\n// Mock recommendation data\nconst RECOMMENDATION_DATA = {\n  algorithms: [\n    {\n      id: 'collaborative',\n      name: 'Collaborative Filtering',\n      description: 'Recommendations based on user behavior patterns',\n      status: 'active',\n      performance: 87.5,\n      usage: 45.2,\n      lastUpdated: '2025-01-20',\n      config: { minSimilarity: 0.7, maxRecommendations: 10 },\n    },\n    {\n      id: 'content_based',\n      name: 'Content-Based Filtering',\n      description: 'Recommendations based on product attributes',\n      status: 'active',\n      performance: 82.3,\n      usage: 38.7,\n      lastUpdated: '2025-01-19',\n      config: {\n        weightFeatures: ['category', 'brand', 'price'],\n        similarity: 0.8,\n      },\n    },\n    {\n      id: 'hybrid',\n      name: 'Hybrid Recommendations',\n      description: 'Combined approach using multiple algorithms',\n      status: 'testing',\n      performance: 91.2,\n      usage: 16.1,\n      lastUpdated: '2025-01-20',\n      config: { collaborativeWeight: 0.6, contentWeight: 0.4 },\n    },\n  ],\n  categories: [\n    {\n      id: 'related_products',\n      name: 'Related Products',\n      enabled: true,\n      clicks: 15420,\n      conversions: 1854,\n      revenue: 285420,\n      position: 'product_page',\n    },\n    {\n      id: 'frequently_bought',\n      name: 'Frequently Bought Together',\n      enabled: true,\n      clicks: 8650,\n      conversions: 2140,\n      revenue: 456780,\n      position: 'cart_page',\n    },\n    {\n      id: 'you_may_like',\n      name: 'You May Also Like',\n      enabled: true,\n      clicks: 12890,\n      conversions: 1023,\n      revenue: 198450,\n      position: 'homepage',\n    },\n    {\n      id: 'trending',\n      name: 'Trending Now',\n      enabled: false,\n      clicks: 0,\n      conversions: 0,\n      revenue: 0,\n      position: 'homepage',\n    },\n  ],\n  userSegments: [\n    {\n      id: 'new_users',\n      name: 'New Users',\n      count: 1250,\n      strategy: 'trending_popular',\n      performance: 78.5,\n    },\n    {\n      id: 'repeat_customers',\n      name: 'Repeat Customers',\n      count: 892,\n      strategy: 'personalized',\n      performance: 91.2,\n    },\n    {\n      id: 'high_value',\n      name: 'High-Value Customers',\n      count: 156,\n      strategy: 'premium_recommendations',\n      performance: 94.8,\n    },\n  ],\n}\n\nexport default function RecommendationManagement() {\n  const { theme } = useSegment()\n  const { formatCurrency } = useI18n()\n  const [activeTab, setActiveTab] = useState('algorithms')\n  const [data] = useState(RECOMMENDATION_DATA)\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(null)\n  const [showConfigModal, setShowConfigModal] = useState(false)\n\n  const StatusBadge = ({ status }) => {\n    const colors = {\n      active: 'bg-green-100 text-green-800',\n      testing: 'bg-yellow-100 text-yellow-800',\n      inactive: 'bg-red-100 text-red-800',\n    }\n\n    return (\n      <span\n        className={`px-2 py-1 text-xs font-medium rounded-full ${colors[status]}`}\n      >\n        {status.charAt(0).toUpperCase() + status.slice(1)}\n      </span>\n    )\n  }\n\n  const PerformanceBar = ({ value, color = theme.colors.primary }) => (\n    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n      <div\n        className=\"h-2 rounded-full transition-all duration-500\"\n        style={{\n          width: `${value}%`,\n          backgroundColor: color,\n        }}\n      />\n    </div>\n  )\n\n  const AlgorithmCard = ({ algorithm }) => (\n    <motion.div\n      className=\"bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-300 border border-gray-100\"\n      whileHover={{ y: -2 }}\n      layout\n    >\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n            style={{ backgroundColor: `${theme.colors.primary}15` }}\n          >\n            <Brain size={24} style={{ color: theme.colors.primary }} />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              {algorithm.name}\n            </h3>\n            <p className=\"text-sm text-gray-600\">{algorithm.description}</p>\n          </div>\n        </div>\n        <StatusBadge status={algorithm.status} />\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <div className=\"flex justify-between text-sm mb-1\">\n            <span className=\"text-gray-600\">Performance</span>\n            <span className=\"font-medium text-gray-900\">\n              {algorithm.performance}%\n            </span>\n          </div>\n          <PerformanceBar value={algorithm.performance} />\n        </div>\n\n        <div>\n          <div className=\"flex justify-between text-sm mb-1\">\n            <span className=\"text-gray-600\">Usage</span>\n            <span className=\"font-medium text-gray-900\">\n              {algorithm.usage}%\n            </span>\n          </div>\n          <PerformanceBar value={algorithm.usage} color=\"#6366f1\" />\n        </div>\n\n        <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n          <span className=\"text-xs text-gray-500\">\n            Updated: {algorithm.lastUpdated}\n          </span>\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => {\n                setSelectedAlgorithm(algorithm)\n                setShowConfigModal(true)\n              }}\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n              title=\"Configure\"\n            >\n              <Settings size={16} className=\"text-gray-600\" />\n            </button>\n            <button\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n              title=\"View Details\"\n            >\n              <Eye size={16} className=\"text-gray-600\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  )\n\n  const CategoryRow = ({ category }) => (\n    <tr className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\">\n      <td className=\"py-4 px-6\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className={`w-3 h-3 rounded-full ${category.enabled ? 'bg-green-500' : 'bg-gray-300'}`}\n          />\n          <div>\n            <div className=\"font-medium text-gray-900\">{category.name}</div>\n            <div className=\"text-sm text-gray-500\">{category.position}</div>\n          </div>\n        </div>\n      </td>\n      <td className=\"py-4 px-6 text-gray-700\">\n        {category.clicks.toLocaleString()}\n      </td>\n      <td className=\"py-4 px-6 text-gray-700\">\n        {category.conversions.toLocaleString()}\n      </td>\n      <td className=\"py-4 px-6 font-semibold text-gray-900\">\n        {formatCurrency(category.revenue)}\n      </td>\n      <td className=\"py-4 px-6\">\n        <div className=\"flex items-center gap-2\">\n          <button className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\n            <Edit3 size={16} className=\"text-gray-600\" />\n          </button>\n          <button className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\n            <BarChart3 size={16} className=\"text-gray-600\" />\n          </button>\n        </div>\n      </td>\n    </tr>\n  )\n\n  return (\n    <div className=\"min-h-screen py-8 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              Recommendation Management\n            </h1>\n            <p className=\"text-gray-600\">\n              Manage AI-powered product recommendations and algorithms\n            </p>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <motion.button\n              className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-50 transition-all flex items-center gap-2\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <RefreshCw size={16} />\n              Refresh Data\n            </motion.button>\n\n            <motion.button\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-lg font-medium shadow-sm hover:shadow-md transition-all flex items-center gap-2\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Download size={16} />\n              Export Report\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"flex items-center gap-1 mb-8 bg-white rounded-lg p-1 shadow-sm\">\n          {[\n            { id: 'algorithms', label: 'Algorithms', icon: Brain },\n            { id: 'categories', label: 'Categories', icon: Package },\n            { id: 'segments', label: 'User Segments', icon: Users },\n            { id: 'performance', label: 'Performance', icon: BarChart3 },\n          ].map(tab => {\n            const Icon = tab.icon\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-all ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                }`}\n              >\n                <Icon size={18} />\n                {tab.label}\n              </button>\n            )\n          })}\n        </div>\n\n        {/* Content */}\n        {activeTab === 'algorithms' && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n            {data.algorithms.map(algorithm => (\n              <AlgorithmCard key={algorithm.id} algorithm={algorithm} />\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'categories' && (\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n            <div className=\"p-6 border-b border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  Recommendation Categories\n                </h3>\n                <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors flex items-center gap-2\">\n                  <Plus size={16} />\n                  Add Category\n                </button>\n              </div>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b border-gray-200 bg-gray-50\">\n                    <th className=\"text-left py-3 px-6 font-medium text-gray-700\">\n                      Category\n                    </th>\n                    <th className=\"text-left py-3 px-6 font-medium text-gray-700\">\n                      Clicks\n                    </th>\n                    <th className=\"text-left py-3 px-6 font-medium text-gray-700\">\n                      Conversions\n                    </th>\n                    <th className=\"text-left py-3 px-6 font-medium text-gray-700\">\n                      Revenue\n                    </th>\n                    <th className=\"text-left py-3 px-6 font-medium text-gray-700\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.categories.map(category => (\n                    <CategoryRow key={category.id} category={category} />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'segments' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {data.userSegments.map(segment => (\n              <motion.div\n                key={segment.id}\n                className=\"bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-300 border border-gray-100\"\n                whileHover={{ y: -2 }}\n                layout\n              >\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div\n                    className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n                    style={{ backgroundColor: `${theme.colors.secondary}15` }}\n                  >\n                    <Users\n                      size={24}\n                      style={{ color: theme.colors.secondary }}\n                    />\n                  </div>\n                  <span className=\"text-2xl font-bold text-gray-900\">\n                    {segment.count}\n                  </span>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {segment.name}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    Strategy: {segment.strategy.replace('_', ' ')}\n                  </p>\n\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span className=\"text-gray-600\">Performance</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {segment.performance}%\n                      </span>\n                    </div>\n                    <PerformanceBar\n                      value={segment.performance}\n                      color={theme.colors.secondary}\n                    />\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'performance' && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Performance Overview */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">\n                Overall Performance\n              </h3>\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between p-4 bg-green-50 rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    <CheckCircle size={24} className=\"text-green-600\" />\n                    <div>\n                      <div className=\"font-medium text-green-900\">\n                        Active Recommendations\n                      </div>\n                      <div className=\"text-sm text-green-700\">\n                        All systems operational\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-2xl font-bold text-green-600\">3</div>\n                </div>\n\n                <div className=\"flex items-center justify-between p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    <Target size={24} className=\"text-blue-600\" />\n                    <div>\n                      <div className=\"font-medium text-blue-900\">\n                        Avg. Click Rate\n                      </div>\n                      <div className=\"text-sm text-blue-700\">\n                        Across all categories\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-2xl font-bold text-blue-600\">12.5%</div>\n                </div>\n\n                <div className=\"flex items-center justify-between p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    <TrendingUp size={24} className=\"text-purple-600\" />\n                    <div>\n                      <div className=\"font-medium text-purple-900\">\n                        Revenue Impact\n                      </div>\n                      <div className=\"text-sm text-purple-700\">\n                        Last 30 days\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {formatCurrency(940650)}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">\n                Recent Activity\n              </h3>\n              <div className=\"space-y-4\">\n                {[\n                  {\n                    action: 'Algorithm updated',\n                    target: 'Hybrid Recommendations',\n                    time: '2 hours ago',\n                    type: 'update',\n                  },\n                  {\n                    action: 'Category enabled',\n                    target: 'Trending Now',\n                    time: '5 hours ago',\n                    type: 'enable',\n                  },\n                  {\n                    action: 'Performance report',\n                    target: 'Weekly Summary',\n                    time: '1 day ago',\n                    type: 'report',\n                  },\n                  {\n                    action: 'User segment created',\n                    target: 'Premium Customers',\n                    time: '2 days ago',\n                    type: 'create',\n                  },\n                ].map((activity, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center gap-3 p-3 hover:bg-gray-50 rounded-lg transition-colors\"\n                  >\n                    <div\n                      className={`w-2 h-2 rounded-full ${\n                        activity.type === 'update'\n                          ? 'bg-blue-500'\n                          : activity.type === 'enable'\n                            ? 'bg-green-500'\n                            : activity.type === 'report'\n                              ? 'bg-purple-500'\n                              : 'bg-orange-500'\n                      }`}\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {activity.action}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {activity.target}\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-gray-400\">{activity.time}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Configuration Modal */}\n        {showConfigModal && selectedAlgorithm && (\n          <motion.div\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              className=\"bg-white rounded-xl p-6 max-w-md w-full mx-4\"\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n            >\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  Configure {selectedAlgorithm.name}\n                </h3>\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <X size={20} className=\"text-gray-500\" />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                {Object.entries(selectedAlgorithm.config).map(\n                  ([key, value]) => (\n                    <div key={key}>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2 capitalize\">\n                        {key.replace(/([A-Z])/g, ' $1').toLowerCase()}\n                      </label>\n                      <input\n                        type={typeof value === 'number' ? 'number' : 'text'}\n                        defaultValue={value}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                  )\n                )}\n              </div>\n\n              <div className=\"flex items-center gap-3 mt-6\">\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  useAudit,\n  ROLES,\n  PERMISSIONS,\n  ROLE_PERMISSIONS,\n  AUDIT_ACTIONS,\n} from '../../../contexts/AuditContext'\nimport { useI18n } from '../../../contexts/I18nContext'\nimport {\n  Shield,\n  User,\n  Lock,\n  Edit3,\n  Save,\n  X,\n  Check,\n  AlertTriangle,\n} from 'lucide-react'\n\nconst RoleManagement = () => {\n  const { hasPermission, logAction, ROLES: AVAILABLE_ROLES } = useAudit()\n  const { t, language, isRTL } = useI18n()\n\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [isEditing, setIsEditing] = useState(false)\n  const [newRole, setNewRole] = useState('')\n  const [showPermissions, setShowPermissions] = useState({})\n\n  // Keep only super admin Faisal - other users will be loaded from API\n  const [users] = useState([\n    {\n      id: '1',\n      name: 'Faisal Khan',\n      email: 'faisal@limitlessinfotech.com',\n      role: ROLES.SUPER_ADMIN,\n      avatar: null,\n      lastLogin: new Date().toISOString(),\n      status: 'active',\n    },\n  ])\n\n  // Check if current user can manage roles\n  const canManageRoles = hasPermission(PERMISSIONS.ROLES_MANAGE)\n  const canViewUsers = hasPermission(PERMISSIONS.USERS_VIEW)\n\n  if (!canViewUsers) {\n    return (\n      <div className=\"p-8 text-center\">\n        <AlertTriangle className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n        <h3 className=\"text-lg font-semibold text-foreground mb-2\">\n          {t('roles.accessDenied', 'Access Denied')}\n        </h3>\n        <p className=\"text-foreground/60\">\n          {t(\n            'roles.noPermission',\n            'You do not have permission to view user roles'\n          )}\n        </p>\n      </div>\n    )\n  }\n\n  const getRoleDisplayName = role => {\n    const roleNames = {\n      [ROLES.SUPER_ADMIN]: language === 'ar' ? 'مدير عام' : 'Super Admin',\n      [ROLES.ADMIN]: language === 'ar' ? 'مدير' : 'Admin',\n      [ROLES.MANAGER]: language === 'ar' ? 'مدير قسم' : 'Manager',\n      [ROLES.MODERATOR]: language === 'ar' ? 'منسق' : 'Moderator',\n      [ROLES.VIEWER]: language === 'ar' ? 'مشاهد' : 'Viewer',\n      [ROLES.CUSTOMER]: language === 'ar' ? 'عميل' : 'Customer',\n    }\n    return roleNames[role] || role\n  }\n\n  const getRoleColor = role => {\n    const colors = {\n      [ROLES.SUPER_ADMIN]: 'bg-purple-100 text-purple-800 border-purple-200',\n      [ROLES.ADMIN]: 'bg-red-100 text-red-800 border-red-200',\n      [ROLES.MANAGER]: 'bg-blue-100 text-blue-800 border-blue-200',\n      [ROLES.MODERATOR]: 'bg-green-100 text-green-800 border-green-200',\n      [ROLES.VIEWER]: 'bg-gray-100 text-gray-800 border-gray-200',\n      [ROLES.CUSTOMER]: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n    }\n    return colors[role] || 'bg-gray-100 text-gray-800 border-gray-200'\n  }\n\n  const handleRoleChange = async (userId, oldRole, newRole) => {\n    try {\n      // Log the role change\n      await logAction(AUDIT_ACTIONS.ROLE_CHANGE, `user:${userId}`, {\n        oldRole,\n        newRole,\n        targetUserId: userId,\n        success: true,\n      })\n\n      // Here you would make API call to update role\n      console.log(`Role changed for user ${userId}: ${oldRole} → ${newRole}`)\n\n      setIsEditing(false)\n      setSelectedUser(null)\n    } catch (error) {\n      console.error('Failed to change role:', error)\n    }\n  }\n\n  const togglePermissionView = role => {\n    setShowPermissions(prev => ({\n      ...prev,\n      [role]: !prev[role],\n    }))\n  }\n\n  const formatLastLogin = timestamp => {\n    const date = new Date(timestamp)\n    return new Intl.DateTimeFormat(language === 'ar' ? 'ar-SA' : 'en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(date)\n  }\n\n  const getPermissionDisplayName = permission => {\n    const permissionNames = {\n      // Product permissions\n      'products:view': language === 'ar' ? 'عرض المنتجات' : 'View Products',\n      'products:create':\n        language === 'ar' ? 'إنشاء المنتجات' : 'Create Products',\n      'products:edit': language === 'ar' ? 'تعديل المنتجات' : 'Edit Products',\n      'products:delete': language === 'ar' ? 'حذف المنتجات' : 'Delete Products',\n\n      // Order permissions\n      'orders:view': language === 'ar' ? 'عرض الطلبات' : 'View Orders',\n      'orders:edit': language === 'ar' ? 'تعديل الطلبات' : 'Edit Orders',\n      'orders:refund': language === 'ar' ? 'استرداد الطلبات' : 'Refund Orders',\n\n      // User permissions\n      'users:view': language === 'ar' ? 'عرض المستخدمين' : 'View Users',\n      'users:create': language === 'ar' ? 'إنشاء المستخدمين' : 'Create Users',\n      'users:edit': language === 'ar' ? 'تعديل المستخدمين' : 'Edit Users',\n      'users:delete': language === 'ar' ? 'حذف المستخدمين' : 'Delete Users',\n\n      // Analytics permissions\n      'analytics:view': language === 'ar' ? 'عرض التحليلات' : 'View Analytics',\n      'analytics:export':\n        language === 'ar' ? 'تصدير التحليلات' : 'Export Analytics',\n\n      // Settings permissions\n      'settings:view': language === 'ar' ? 'عرض الإعدادات' : 'View Settings',\n      'settings:edit': language === 'ar' ? 'تعديل الإعدادات' : 'Edit Settings',\n\n      // Security permissions\n      'security:manage': language === 'ar' ? 'إدارة الأمان' : 'Manage Security',\n      'roles:manage': language === 'ar' ? 'إدارة الأدوار' : 'Manage Roles',\n    }\n    return permissionNames[permission] || permission\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className={`mb-8 ${isRTL ? 'text-right' : 'text-left'}`}>\n        <h1 className=\"text-3xl font-bold text-foreground mb-2 flex items-center gap-3\">\n          <Shield className=\"h-8 w-8 text-primary\" />\n          {t('roles.title', 'Role Management')}\n        </h1>\n        <p className=\"text-foreground/60\">\n          {t(\n            'roles.description',\n            'Manage user roles and permissions across the platform'\n          )}\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Users List */}\n        <div className=\"lg:col-span-2\">\n          <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n            <div className=\"p-6 border-b border-border\">\n              <h2 className=\"text-xl font-semibold text-foreground flex items-center gap-2\">\n                <User className=\"h-5 w-5\" />\n                {t('roles.users', 'Users')}\n              </h2>\n            </div>\n\n            <div className=\"divide-y divide-border\">\n              {users.map(user => {\n                const userPermissions = ROLE_PERMISSIONS[user.role] || []\n\n                return (\n                  <motion.div\n                    key={user.id}\n                    layout\n                    className={`p-6 hover:bg-background/50 transition-colors cursor-pointer ${\n                      selectedUser?.id === user.id\n                        ? 'bg-primary/5 border-primary/20'\n                        : ''\n                    }`}\n                    onClick={() => setSelectedUser(user)}\n                  >\n                    <div\n                      className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n                    >\n                      <div\n                        className={`flex items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n                      >\n                        <div className=\"w-10 h-10 bg-primary/20 rounded-full flex items-center justify-center\">\n                          <User className=\"h-5 w-5 text-primary\" />\n                        </div>\n                        <div className={isRTL ? 'text-right' : 'text-left'}>\n                          <h3 className=\"font-semibold text-foreground\">\n                            {user.name}\n                          </h3>\n                          <p className=\"text-sm text-foreground/60\">\n                            {user.email}\n                          </p>\n                          <p className=\"text-xs text-foreground/50 mt-1\">\n                            {t('roles.lastLogin', 'Last login')}:{' '}\n                            {formatLastLogin(user.lastLogin)}\n                          </p>\n                        </div>\n                      </div>\n\n                      <div\n                        className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n                      >\n                        <span\n                          className={`px-3 py-1 text-xs font-medium rounded-full border ${getRoleColor(user.role)}`}\n                        >\n                          {getRoleDisplayName(user.role)}\n                        </span>\n                        <span\n                          className={`w-2 h-2 rounded-full ${\n                            user.status === 'active'\n                              ? 'bg-green-500'\n                              : 'bg-gray-400'\n                          }`}\n                        ></span>\n                        {canManageRoles && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={e => {\n                              e.stopPropagation()\n                              setSelectedUser(user)\n                              setNewRole(user.role)\n                              setIsEditing(true)\n                            }}\n                            className=\"p-1 text-foreground/40 hover:text-primary transition-colors\"\n                          >\n                            <Edit3 className=\"h-4 w-4\" />\n                          </motion.button>\n                        )}\n                      </div>\n                    </div>\n\n                    <div\n                      className={`mt-4 text-sm text-foreground/60 ${isRTL ? 'text-right' : 'text-left'}`}\n                    >\n                      <span className=\"font-medium\">\n                        {t('roles.permissions', 'Permissions')}:{' '}\n                        {userPermissions.length}\n                      </span>\n                      <button\n                        onClick={e => {\n                          e.stopPropagation()\n                          togglePermissionView(user.role)\n                        }}\n                        className={`text-primary hover:text-primary/80 font-medium ${\n                          isRTL ? 'mr-2' : 'ml-2'\n                        }`}\n                      >\n                        {showPermissions[user.role]\n                          ? t('roles.hidePermissions', 'Hide')\n                          : t('roles.showPermissions', 'Show')}\n                      </button>\n                    </div>\n\n                    <AnimatePresence>\n                      {showPermissions[user.role] && (\n                        <motion.div\n                          initial={{ height: 0, opacity: 0 }}\n                          animate={{ height: 'auto', opacity: 1 }}\n                          exit={{ height: 0, opacity: 0 }}\n                          className=\"mt-4 pt-4 border-t border-border\"\n                        >\n                          <div className=\"grid grid-cols-2 gap-2\">\n                            {userPermissions.map(permission => (\n                              <div\n                                key={permission}\n                                className={`flex items-center gap-2 text-xs text-foreground/70 ${\n                                  isRTL ? 'flex-row-reverse text-right' : ''\n                                }`}\n                              >\n                                <Check className=\"h-3 w-3 text-green-500 flex-shrink-0\" />\n                                <span>\n                                  {getPermissionDisplayName(permission)}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </motion.div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Role Editor */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"bg-surface border border-border rounded-xl p-6 sticky top-6\">\n            <h3 className=\"text-lg font-semibold text-foreground mb-4 flex items-center gap-2\">\n              <Lock className=\"h-5 w-5\" />\n              {selectedUser\n                ? t('roles.editRole', 'Edit Role')\n                : t('roles.selectUser', 'Select User')}\n            </h3>\n\n            {selectedUser ? (\n              <div className=\"space-y-4\">\n                <div className={isRTL ? 'text-right' : 'text-left'}>\n                  <p className=\"text-sm text-foreground/60 mb-1\">\n                    {t('roles.selectedUser', 'Selected User')}\n                  </p>\n                  <p className=\"font-medium text-foreground\">\n                    {selectedUser.name}\n                  </p>\n                  <p className=\"text-sm text-foreground/60\">\n                    {selectedUser.email}\n                  </p>\n                </div>\n\n                {isEditing && canManageRoles ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-foreground mb-2\">\n                        {t('roles.selectNewRole', 'Select New Role')}\n                      </label>\n                      <select\n                        value={newRole}\n                        onChange={e => setNewRole(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                      >\n                        {Object.values(AVAILABLE_ROLES)\n                          .filter(role => role !== ROLES.CUSTOMER) // Don't allow setting customer role\n                          .map(role => (\n                            <option key={role} value={role}>\n                              {getRoleDisplayName(role)}\n                            </option>\n                          ))}\n                      </select>\n                    </div>\n\n                    <div\n                      className={`flex gap-2 ${isRTL ? 'flex-row-reverse' : ''}`}\n                    >\n                      <motion.button\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() =>\n                          handleRoleChange(\n                            selectedUser.id,\n                            selectedUser.role,\n                            newRole\n                          )\n                        }\n                        className=\"flex-1 bg-primary text-primary-foreground px-4 py-2 rounded-lg font-medium hover:bg-primary/90 transition-colors flex items-center justify-center gap-2\"\n                      >\n                        <Save className=\"h-4 w-4\" />\n                        {t('roles.saveChanges', 'Save Changes')}\n                      </motion.button>\n                      <motion.button\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => {\n                          setIsEditing(false)\n                          setNewRole('')\n                        }}\n                        className=\"px-4 py-2 border border-border rounded-lg text-foreground hover:bg-background/50 transition-colors\"\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </motion.button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    <div>\n                      <span className=\"text-sm text-foreground/60\">\n                        {t('roles.currentRole', 'Current Role')}\n                      </span>\n                      <div\n                        className={`mt-1 px-3 py-2 rounded-lg border ${getRoleColor(selectedUser.role)}`}\n                      >\n                        {getRoleDisplayName(selectedUser.role)}\n                      </div>\n                    </div>\n\n                    {canManageRoles && (\n                      <motion.button\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => {\n                          setNewRole(selectedUser.role)\n                          setIsEditing(true)\n                        }}\n                        className=\"w-full bg-surface border border-border text-foreground px-4 py-2 rounded-lg font-medium hover:bg-background/50 transition-colors flex items-center justify-center gap-2\"\n                      >\n                        <Edit3 className=\"h-4 w-4\" />\n                        {t('roles.editRole', 'Edit Role')}\n                      </motion.button>\n                    )}\n\n                    <div className=\"pt-4 border-t border-border\">\n                      <h4 className=\"text-sm font-medium text-foreground mb-3\">\n                        {t('roles.rolePermissions', 'Role Permissions')}\n                      </h4>\n                      <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                        {(ROLE_PERMISSIONS[selectedUser.role] || []).map(\n                          permission => (\n                            <div\n                              key={permission}\n                              className={`flex items-center gap-2 text-xs text-foreground/70 ${\n                                isRTL ? 'flex-row-reverse text-right' : ''\n                              }`}\n                            >\n                              <Check className=\"h-3 w-3 text-green-500 flex-shrink-0\" />\n                              <span>\n                                {getPermissionDisplayName(permission)}\n                              </span>\n                            </div>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <User className=\"mx-auto h-12 w-12 text-foreground/30 mb-4\" />\n                <p className=\"text-foreground/60\">\n                  {t(\n                    'roles.selectUserToEdit',\n                    'Select a user to view or edit their role'\n                  )}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RoleManagement\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useEffect,\n  useCallback,\n} from 'react'\nimport {\n  useNotifications,\n  NOTIFICATION_TYPES,\n  NOTIFICATION_CHANNELS,\n} from './NotificationContext.jsx'\n\nconst AdminSecurityContext = createContext()\n\n// Enhanced admin security features\nexport const ADMIN_SECURITY_LEVELS = {\n  BASIC: 'basic',\n  ENHANCED: 'enhanced',\n  MAXIMUM: 'maximum',\n}\n\nexport const SECURITY_EVENTS = {\n  LOGIN_SUCCESS: 'login_success',\n  LOGIN_FAILED: 'login_failed',\n  INVALID_2FA: 'invalid_2fa',\n  ACCOUNT_LOCKED: 'account_locked',\n  SUSPICIOUS_ACTIVITY: 'suspicious_activity',\n  IP_BLOCKED: 'ip_blocked',\n  SESSION_TIMEOUT: 'session_timeout',\n  UNAUTHORIZED_ACCESS: 'unauthorized_access',\n  PRIVILEGE_ESCALATION: 'privilege_escalation',\n}\n\nconst initialState = {\n  securityLevel: ADMIN_SECURITY_LEVELS.ENHANCED,\n  loginAttempts: {},\n  blockedIPs: new Set(),\n  suspiciousActivities: [],\n  activeSessions: [],\n  securityEvents: [],\n  twoFactorRequired: true,\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  maxLoginAttempts: 5,\n  lockoutDuration: 15 * 60 * 1000, // 15 minutes\n  ipWhitelist: new Set(),\n  trustedDevices: new Set(),\n}\n\nconst securityReducer = (state, action) => {\n  switch (action.type) {\n    case 'RECORD_LOGIN_ATTEMPT': {\n      const { ip, success } = action.payload\n      const attempts = state.loginAttempts[ip] || {\n        count: 0,\n        lastAttempt: null,\n        locked: false,\n      }\n\n      if (success) {\n        // Reset attempts on successful login\n        return {\n          ...state,\n          loginAttempts: {\n            ...state.loginAttempts,\n            [ip]: { count: 0, lastAttempt: Date.now(), locked: false },\n          },\n        }\n      } else {\n        // Increment failed attempts\n        const newCount = attempts.count + 1\n        const shouldLock = newCount >= state.maxLoginAttempts\n\n        return {\n          ...state,\n          loginAttempts: {\n            ...state.loginAttempts,\n            [ip]: {\n              count: newCount,\n              lastAttempt: Date.now(),\n              locked: shouldLock,\n              lockoutExpiry: shouldLock\n                ? Date.now() + state.lockoutDuration\n                : null,\n            },\n          },\n          blockedIPs: shouldLock\n            ? new Set([...state.blockedIPs, ip])\n            : state.blockedIPs,\n        }\n      }\n    }\n\n    case 'ADD_SECURITY_EVENT':\n      return {\n        ...state,\n        securityEvents: [action.payload, ...state.securityEvents.slice(0, 99)], // Keep last 100 events\n      }\n\n    case 'ADD_SUSPICIOUS_ACTIVITY':\n      return {\n        ...state,\n        suspiciousActivities: [\n          action.payload,\n          ...state.suspiciousActivities.slice(0, 49),\n        ],\n      }\n\n    case 'UPDATE_SESSION':\n      return {\n        ...state,\n        activeSessions: action.payload,\n      }\n\n    case 'BLOCK_IP':\n      return {\n        ...state,\n        blockedIPs: new Set([...state.blockedIPs, action.payload]),\n      }\n\n    case 'UNBLOCK_IP': {\n      const newBlockedIPs = new Set(state.blockedIPs)\n      newBlockedIPs.delete(action.payload)\n      return {\n        ...state,\n        blockedIPs: newBlockedIPs,\n      }\n    }\n\n    case 'CLEAR_EXPIRED_LOCKOUTS': {\n      const now = Date.now()\n      const updatedAttempts = {}\n      const unblockedIPs = new Set(state.blockedIPs)\n\n      Object.entries(state.loginAttempts).forEach(([ip, data]) => {\n        if (data.locked && data.lockoutExpiry && now > data.lockoutExpiry) {\n          updatedAttempts[ip] = { count: 0, lastAttempt: now, locked: false }\n          unblockedIPs.delete(ip)\n        } else {\n          updatedAttempts[ip] = data\n        }\n      })\n\n      return {\n        ...state,\n        loginAttempts: updatedAttempts,\n        blockedIPs: unblockedIPs,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const AdminSecurityProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(securityReducer, initialState)\n  const { sendNotification } = useNotifications()\n\n  // Clear expired lockouts periodically\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({ type: 'CLEAR_EXPIRED_LOCKOUTS' })\n    }, 60000) // Check every minute\n\n    return () => clearInterval(interval)\n  }, [])\n\n  // Monitor session activity\n  useEffect(() => {\n    let activityTimer\n\n    const resetActivityTimer = () => {\n      clearTimeout(activityTimer)\n      activityTimer = setTimeout(() => {\n        logSecurityEvent(SECURITY_EVENTS.SESSION_TIMEOUT, {\n          reason: 'Inactivity timeout',\n          duration: state.sessionTimeout,\n        })\n      }, state.sessionTimeout)\n    }\n\n    const handleActivity = () => resetActivityTimer()\n\n    // Listen for user activity\n    document.addEventListener('mousedown', handleActivity)\n    document.addEventListener('keydown', handleActivity)\n    document.addEventListener('scroll', handleActivity)\n\n    resetActivityTimer()\n\n    return () => {\n      clearTimeout(activityTimer)\n      document.removeEventListener('mousedown', handleActivity)\n      document.removeEventListener('keydown', handleActivity)\n      document.removeEventListener('scroll', handleActivity)\n    }\n  }, [state.sessionTimeout, logSecurityEvent])\n\n  const getClientInfo = useCallback(() => {\n    return {\n      ip: '192.168.1.1', // Would be real IP in production\n      userAgent: navigator.userAgent,\n      timestamp: new Date().toISOString(),\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      language: navigator.language,\n      screen: `${screen.width}x${screen.height}`,\n      platform: navigator.platform,\n    }\n  }, [])\n\n  const logSecurityEvent = useCallback(\n    async (eventType, details = {}) => {\n      const event = {\n        id: `sec_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        type: eventType,\n        timestamp: new Date().toISOString(),\n        clientInfo: getClientInfo(),\n        details,\n        severity: getSeverity(eventType),\n      }\n\n      dispatch({ type: 'ADD_SECURITY_EVENT', payload: event })\n\n      // Send notifications for high severity events\n      if (event.severity === 'high') {\n        await sendNotification(\n          NOTIFICATION_TYPES.SECURITY_ALERT,\n          {\n            message: `Security Alert: ${eventType}`,\n            messageAr: `تنبيه أمني: ${eventType}`,\n            details,\n            severity: 'high',\n          },\n          [NOTIFICATION_CHANNELS.IN_APP, NOTIFICATION_CHANNELS.EMAIL]\n        )\n      }\n\n      console.log('🛡️ Security Event:', event)\n      return event\n    },\n    [getClientInfo, getSeverity, sendNotification]\n  )\n\n  const getSeverity = useCallback(eventType => {\n    const highSeverityEvents = [\n      SECURITY_EVENTS.ACCOUNT_LOCKED,\n      SECURITY_EVENTS.SUSPICIOUS_ACTIVITY,\n      SECURITY_EVENTS.UNAUTHORIZED_ACCESS,\n      SECURITY_EVENTS.PRIVILEGE_ESCALATION,\n    ]\n\n    const mediumSeverityEvents = [\n      SECURITY_EVENTS.LOGIN_FAILED,\n      SECURITY_EVENTS.INVALID_2FA,\n      SECURITY_EVENTS.IP_BLOCKED,\n    ]\n\n    if (highSeverityEvents.includes(eventType)) return 'high'\n    if (mediumSeverityEvents.includes(eventType)) return 'medium'\n    return 'low'\n  }, [])\n\n  const checkIPBlocked = ip => {\n    return state.blockedIPs.has(ip)\n  }\n\n  const isAccountLocked = ip => {\n    const attempts = state.loginAttempts[ip]\n    if (!attempts) return false\n\n    if (attempts.locked && attempts.lockoutExpiry) {\n      return Date.now() < attempts.lockoutExpiry\n    }\n\n    return attempts.locked\n  }\n\n  const getRemainingAttempts = ip => {\n    const attempts = state.loginAttempts[ip]\n    if (!attempts) return state.maxLoginAttempts\n\n    return Math.max(0, state.maxLoginAttempts - attempts.count)\n  }\n\n  const getLockoutTimeRemaining = ip => {\n    const attempts = state.loginAttempts[ip]\n    if (!attempts || !attempts.locked || !attempts.lockoutExpiry) return 0\n\n    return Math.max(0, attempts.lockoutExpiry - Date.now())\n  }\n\n  const recordLoginAttempt = async (ip, success, details = {}) => {\n    dispatch({\n      type: 'RECORD_LOGIN_ATTEMPT',\n      payload: { ip, success },\n    })\n\n    if (success) {\n      await logSecurityEvent(SECURITY_EVENTS.LOGIN_SUCCESS, {\n        ip,\n        ...details,\n      })\n    } else {\n      await logSecurityEvent(SECURITY_EVENTS.LOGIN_FAILED, {\n        ip,\n        remainingAttempts: getRemainingAttempts(ip),\n        ...details,\n      })\n\n      // Check if account should be locked\n      if (getRemainingAttempts(ip) <= 0) {\n        await logSecurityEvent(SECURITY_EVENTS.ACCOUNT_LOCKED, {\n          ip,\n          lockoutDuration: state.lockoutDuration,\n        })\n      }\n    }\n  }\n\n  const detectSuspiciousActivity = async activity => {\n    const suspiciousPatterns = [\n      // Multiple rapid login attempts from different IPs\n      {\n        check: () => {\n          const recentFailures = state.securityEvents\n            .filter(e => e.type === SECURITY_EVENTS.LOGIN_FAILED)\n            .filter(e => Date.now() - new Date(e.timestamp).getTime() < 300000) // 5 minutes\n\n          const uniqueIPs = new Set(recentFailures.map(e => e.clientInfo.ip))\n          return uniqueIPs.size >= 3\n        },\n        severity: 'high',\n        message: 'Multiple IPs attempting login',\n      },\n      // Unusual time-based access patterns\n      {\n        check: () => {\n          const hour = new Date().getHours()\n          return hour < 6 || hour > 22 // Outside business hours\n        },\n        severity: 'medium',\n        message: 'Access attempt outside business hours',\n      },\n      // Geolocation anomalies (mock implementation)\n      {\n        check: () =>\n          activity.location && activity.location !== 'usual_location',\n        severity: 'medium',\n        message: 'Access from unusual location',\n      },\n    ]\n\n    for (const pattern of suspiciousPatterns) {\n      if (pattern.check()) {\n        const suspiciousActivity = {\n          id: `suspicious_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          timestamp: new Date().toISOString(),\n          pattern: pattern.message,\n          severity: pattern.severity,\n          activity,\n          clientInfo: getClientInfo(),\n        }\n\n        dispatch({\n          type: 'ADD_SUSPICIOUS_ACTIVITY',\n          payload: suspiciousActivity,\n        })\n\n        await logSecurityEvent(SECURITY_EVENTS.SUSPICIOUS_ACTIVITY, {\n          pattern: pattern.message,\n          severity: pattern.severity,\n          activity,\n        })\n\n        return true\n      }\n    }\n\n    return false\n  }\n\n  const validateAdminAccess = (path, userRole) => {\n    // Check if accessing admin panel through secure path\n    const securePaths = ['/admin-panel-secure', '/admin-panel']\n    const isSecurePath = securePaths.some(p => path.includes(p))\n\n    if (!isSecurePath) {\n      logSecurityEvent(SECURITY_EVENTS.UNAUTHORIZED_ACCESS, {\n        path,\n        userRole,\n        reason: 'Invalid admin path',\n      })\n      return false\n    }\n\n    // Check if user has admin privileges\n    const adminRoles = ['admin', 'super_admin']\n    if (!adminRoles.includes(userRole)) {\n      logSecurityEvent(SECURITY_EVENTS.PRIVILEGE_ESCALATION, {\n        path,\n        userRole,\n        reason: 'Insufficient privileges',\n      })\n      return false\n    }\n\n    return true\n  }\n\n  const generateSecurityReport = () => {\n    const last24Hours = Date.now() - 24 * 60 * 60 * 1000\n\n    const recentEvents = state.securityEvents.filter(\n      e => new Date(e.timestamp).getTime() > last24Hours\n    )\n\n    const report = {\n      summary: {\n        totalEvents: recentEvents.length,\n        highSeverity: recentEvents.filter(e => e.severity === 'high').length,\n        mediumSeverity: recentEvents.filter(e => e.severity === 'medium')\n          .length,\n        blockedIPs: state.blockedIPs.size,\n        suspiciousActivities: state.suspiciousActivities.length,\n      },\n      events: recentEvents,\n      topThreats: getTopThreats(recentEvents),\n      recommendations: generateSecurityRecommendations(),\n    }\n\n    return report\n  }\n\n  const getTopThreats = events => {\n    const threatCounts = {}\n    events.forEach(event => {\n      threatCounts[event.type] = (threatCounts[event.type] || 0) + 1\n    })\n\n    return Object.entries(threatCounts)\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 5)\n      .map(([type, count]) => ({ type, count }))\n  }\n\n  const generateSecurityRecommendations = () => {\n    const recommendations = []\n\n    if (state.blockedIPs.size > 10) {\n      recommendations.push({\n        type: 'warning',\n        message:\n          'High number of blocked IPs detected. Consider reviewing firewall rules.',\n        priority: 'high',\n      })\n    }\n\n    if (state.suspiciousActivities.length > 5) {\n      recommendations.push({\n        type: 'alert',\n        message:\n          'Multiple suspicious activities detected. Enhanced monitoring recommended.',\n        priority: 'high',\n      })\n    }\n\n    return recommendations\n  }\n\n  const value = {\n    // State\n    securityLevel: state.securityLevel,\n    securityEvents: state.securityEvents,\n    suspiciousActivities: state.suspiciousActivities,\n    blockedIPs: Array.from(state.blockedIPs),\n\n    // Functions\n    logSecurityEvent,\n    detectSuspiciousActivity,\n    recordLoginAttempt,\n    checkIPBlocked,\n    isAccountLocked,\n    getRemainingAttempts,\n    getLockoutTimeRemaining,\n    validateAdminAccess,\n    generateSecurityReport,\n\n    // Constants\n    SECURITY_EVENTS,\n    ADMIN_SECURITY_LEVELS,\n  }\n\n  return (\n    <AdminSecurityContext.Provider value={value}>\n      {children}\n    </AdminSecurityContext.Provider>\n  )\n}\n\nexport const useAdminSecurity = () => {\n  const context = useContext(AdminSecurityContext)\n  if (!context) {\n    throw new Error(\n      'useAdminSecurity must be used within an AdminSecurityProvider'\n    )\n  }\n  return context\n}\n\nexport default AdminSecurityContext\n","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport {\r\n  Activity,\r\n  User,\r\n  MapPin,\r\n  Clock,\r\n  Search,\r\n  Download,\r\n  AlertCircle,\r\n  Laptop,\r\n  Smartphone,\r\n  Tablet,\r\n  Globe,\r\n  Shield,\r\n  CheckCircle,\r\n} from 'lucide-react'\r\n\r\nconst ActivityTracker = () => {\r\n  const [activities, setActivities] = useState([])\r\n  const [filteredActivities, setFilteredActivities] = useState([])\r\n  const [filters, setFilters] = useState({\r\n    user: '',\r\n    action: '',\r\n    resource: '',\r\n    dateRange: '7d',\r\n    status: '',\r\n    riskLevel: '',\r\n  })\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [stats, setStats] = useState({})\r\n\r\n  // Mock activity data with comprehensive tracking\r\n  const mockActivities = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 30),\r\n        userId: 'admin001',\r\n        userName: 'Admin User',\r\n        action: 'bulk_delete',\r\n        resource: 'products',\r\n        resourceId: 'bulk-operation-001',\r\n        details: 'Deleted 15 products via bulk operation',\r\n        ipAddress: '192.168.1.100',\r\n        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/120.0.0.0',\r\n        deviceType: 'desktop',\r\n        location: 'Mumbai, India',\r\n        status: 'success',\r\n        riskLevel: 'medium',\r\n        duration: 2340,\r\n        affectedRecords: 15,\r\n        sessionId: 'sess_abc123',\r\n      },\r\n      {\r\n        id: 2,\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\r\n        userId: 'admin002',\r\n        userName: 'Security Admin',\r\n        action: 'login_attempt',\r\n        resource: 'authentication',\r\n        resourceId: 'auth-001',\r\n        details: 'Failed login attempt - Invalid credentials',\r\n        ipAddress: '203.192.12.45',\r\n        userAgent:\r\n          'Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) Safari/604.1',\r\n        deviceType: 'mobile',\r\n        location: 'Delhi, India',\r\n        status: 'failed',\r\n        riskLevel: 'high',\r\n        duration: 0,\r\n        affectedRecords: 0,\r\n        sessionId: null,\r\n      },\r\n      {\r\n        id: 3,\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4),\r\n        userId: 'admin001',\r\n        userName: 'Admin User',\r\n        action: 'export_data',\r\n        resource: 'analytics',\r\n        resourceId: 'analytics-export-001',\r\n        details: 'Exported customer analytics to PDF',\r\n        ipAddress: '192.168.1.100',\r\n        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/120.0.0.0',\r\n        deviceType: 'desktop',\r\n        location: 'Mumbai, India',\r\n        status: 'success',\r\n        riskLevel: 'low',\r\n        duration: 5600,\r\n        affectedRecords: 1,\r\n        sessionId: 'sess_abc123',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const loadActivities = async () => {\r\n      setIsLoading(true)\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n      const extendedActivities = []\r\n      for (let i = 0; i < 50; i++) {\r\n        const baseActivity = mockActivities[i % mockActivities.length]\r\n        extendedActivities.push({\r\n          ...baseActivity,\r\n          id: i + 1,\r\n          timestamp: new Date(\r\n            Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000\r\n          ),\r\n        })\r\n      }\r\n\r\n      setActivities(\r\n        extendedActivities.sort((a, b) => b.timestamp - a.timestamp)\r\n      )\r\n      setIsLoading(false)\r\n    }\r\n\r\n    loadActivities()\r\n  }, [mockActivities])\r\n\r\n  useEffect(() => {\r\n    filterActivities()\r\n    calculateStats()\r\n  }, [activities, filters, searchTerm, filterActivities, calculateStats])\r\n\r\n  const filterActivities = useCallback(() => {\r\n    let filtered = activities\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(\r\n        activity =>\r\n          activity.userName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          activity.action.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          activity.resource.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          activity.details.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    }\r\n\r\n    // Apply filters\r\n    Object.keys(filters).forEach(key => {\r\n      if (filters[key] && key !== 'dateRange') {\r\n        filtered = filtered.filter(activity => activity[key] === filters[key])\r\n      }\r\n    })\r\n\r\n    // Apply date range filter\r\n    if (filters.dateRange) {\r\n      const now = new Date()\r\n      const ranges = {\r\n        '1d': 1,\r\n        '7d': 7,\r\n        '30d': 30,\r\n        '90d': 90,\r\n      }\r\n      const days = ranges[filters.dateRange]\r\n      if (days) {\r\n        const cutoff = new Date(now.getTime() - days * 24 * 60 * 60 * 1000)\r\n        filtered = filtered.filter(activity => activity.timestamp >= cutoff)\r\n      }\r\n    }\r\n\r\n    setFilteredActivities(filtered)\r\n  }, [activities, filters, searchTerm])\r\n\r\n  const calculateStats = useCallback(() => {\r\n    const total = filteredActivities.length\r\n    const successful = filteredActivities.filter(\r\n      a => a.status === 'success'\r\n    ).length\r\n    const failed = filteredActivities.filter(a => a.status === 'failed').length\r\n    const highRisk = filteredActivities.filter(\r\n      a => a.riskLevel === 'high'\r\n    ).length\r\n\r\n    const uniqueUsers = new Set(filteredActivities.map(a => a.userId)).size\r\n    const uniqueIPs = new Set(filteredActivities.map(a => a.ipAddress)).size\r\n\r\n    setStats({\r\n      total,\r\n      successful,\r\n      failed,\r\n      highRisk,\r\n      uniqueUsers,\r\n      uniqueIPs,\r\n      successRate: total > 0 ? Math.round((successful / total) * 100) : 0,\r\n    })\r\n  }, [filteredActivities])\r\n\r\n  const getDeviceIcon = deviceType => {\r\n    switch (deviceType) {\r\n      case 'mobile':\r\n        return Smartphone\r\n      case 'tablet':\r\n        return Tablet\r\n      default:\r\n        return Laptop\r\n    }\r\n  }\r\n\r\n  const getRiskColor = level => {\r\n    switch (level) {\r\n      case 'high':\r\n        return 'text-red-600 bg-red-100'\r\n      case 'medium':\r\n        return 'text-orange-600 bg-orange-100'\r\n      case 'low':\r\n        return 'text-green-600 bg-green-100'\r\n      default:\r\n        return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  const getStatusColor = status => {\r\n    switch (status) {\r\n      case 'success':\r\n        return 'text-green-600 bg-green-100'\r\n      case 'failed':\r\n        return 'text-red-600 bg-red-100'\r\n      case 'pending':\r\n        return 'text-yellow-600 bg-yellow-100'\r\n      default:\r\n        return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  const exportActivities = () => {\r\n    const csvData = filteredActivities.map(activity => ({\r\n      Timestamp: activity.timestamp.toISOString(),\r\n      User: activity.userName,\r\n      Action: activity.action,\r\n      Resource: activity.resource,\r\n      Status: activity.status,\r\n      'Risk Level': activity.riskLevel,\r\n      'IP Address': activity.ipAddress,\r\n      Location: activity.location,\r\n      Details: activity.details,\r\n    }))\r\n\r\n    const csv = [\r\n      Object.keys(csvData[0]).join(','),\r\n      ...csvData.map(row => Object.values(row).join(',')),\r\n    ].join('\\n')\r\n\r\n    const blob = new Blob([csv], { type: 'text/csv' })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `activity-log-${new Date().toISOString().split('T')[0]}.csv`\r\n    a.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Total Activities</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\r\n            </div>\r\n            <Activity className=\"w-8 h-8 text-blue-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Success Rate</p>\r\n              <p className=\"text-2xl font-bold text-green-600\">\r\n                {stats.successRate}%\r\n              </p>\r\n            </div>\r\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">High Risk</p>\r\n              <p className=\"text-2xl font-bold text-red-600\">\r\n                {stats.highRisk}\r\n              </p>\r\n            </div>\r\n            <AlertCircle className=\"w-8 h-8 text-red-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Unique Users</p>\r\n              <p className=\"text-2xl font-bold text-purple-600\">\r\n                {stats.uniqueUsers}\r\n              </p>\r\n            </div>\r\n            <User className=\"w-8 h-8 text-purple-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Unique IPs</p>\r\n              <p className=\"text-2xl font-bold text-orange-600\">\r\n                {stats.uniqueIPs}\r\n              </p>\r\n            </div>\r\n            <Globe className=\"w-8 h-8 text-orange-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Failed</p>\r\n              <p className=\"text-2xl font-bold text-red-600\">{stats.failed}</p>\r\n            </div>\r\n            <Shield className=\"w-8 h-8 text-red-600\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\r\n          <div className=\"flex flex-wrap gap-4 items-center\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search activities...\"\r\n                value={searchTerm}\r\n                onChange={e => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            <select\r\n              value={filters.dateRange}\r\n              onChange={e =>\r\n                setFilters(prev => ({ ...prev, dateRange: e.target.value }))\r\n              }\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"1d\">Last 24 hours</option>\r\n              <option value=\"7d\">Last 7 days</option>\r\n              <option value=\"30d\">Last 30 days</option>\r\n              <option value=\"90d\">Last 90 days</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.riskLevel}\r\n              onChange={e =>\r\n                setFilters(prev => ({ ...prev, riskLevel: e.target.value }))\r\n              }\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">All Risk Levels</option>\r\n              <option value=\"low\">Low Risk</option>\r\n              <option value=\"medium\">Medium Risk</option>\r\n              <option value=\"high\">High Risk</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.status}\r\n              onChange={e =>\r\n                setFilters(prev => ({ ...prev, status: e.target.value }))\r\n              }\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">All Statuses</option>\r\n              <option value=\"success\">Success</option>\r\n              <option value=\"failed\">Failed</option>\r\n              <option value=\"pending\">Pending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            onClick={exportActivities}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Download className=\"w-4 h-4\" />\r\n            Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Activities List */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n        <div className=\"max-h-96 overflow-y-auto\">\r\n          {filteredActivities.map(activity => {\r\n            const DeviceIcon = getDeviceIcon(activity.deviceType)\r\n\r\n            return (\r\n              <motion.div\r\n                key={activity.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"p-4 border-b hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex items-start gap-3 flex-1\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div\r\n                        className={`p-2 rounded-full ${getRiskColor(activity.riskLevel)}`}\r\n                      >\r\n                        <Activity className=\"w-4 h-4\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <div className=\"flex items-center gap-2 flex-wrap\">\r\n                        <span className=\"font-medium text-gray-900\">\r\n                          {activity.userName}\r\n                        </span>\r\n                        <span className=\"text-gray-500\">performed</span>\r\n                        <span className=\"font-medium text-blue-600\">\r\n                          {activity.action.replace('_', ' ')}\r\n                        </span>\r\n                        <span className=\"text-gray-500\">on</span>\r\n                        <span className=\"font-medium text-gray-700\">\r\n                          {activity.resource}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        {activity.details}\r\n                      </p>\r\n\r\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <Clock className=\"w-3 h-3\" />\r\n                          {activity.timestamp.toLocaleString()}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <MapPin className=\"w-3 h-3\" />\r\n                          {activity.location}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <DeviceIcon className=\"w-3 h-3\" />\r\n                          {activity.deviceType}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <Globe className=\"w-3 h-3\" />\r\n                          {activity.ipAddress}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(activity.status)}`}\r\n                    >\r\n                      {activity.status}\r\n                    </span>\r\n                    <span\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${getRiskColor(activity.riskLevel)}`}\r\n                    >\r\n                      {activity.riskLevel} risk\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        {filteredActivities.length === 0 && (\r\n          <div className=\"p-8 text-center text-gray-500\">\r\n            <Activity className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n            <p>No activities found matching your criteria</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActivityTracker\r\n","import { useState, useEffect, useMemo } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {\r\n  AlertTriangle,\r\n  Brain,\r\n  TrendingDown,\r\n  TrendingUp,\r\n  Eye,\r\n  Shield,\r\n  Zap,\r\n  Clock,\r\n  Users,\r\n  DollarSign,\r\n  RefreshCw,\r\n  CheckCircle,\r\n  XCircle,\r\n  Filter,\r\n} from 'lucide-react'\r\n\r\nconst AnomalyDetection = () => {\r\n  const [anomalies, setAnomalies] = useState([])\r\n  const [isScanning, setIsScanning] = useState(false)\r\n  const [settings] = useState({\r\n    sensitivity: 'medium',\r\n    autoScan: true,\r\n    notifications: true,\r\n    categories: ['security', 'performance', 'business', 'user_behavior'],\r\n  })\r\n  const [filters, setFilters] = useState({\r\n    severity: 'all',\r\n    category: 'all',\r\n    status: 'all',\r\n    timeRange: '24h',\r\n  })\r\n\r\n  const severityConfig = {\r\n    critical: {\r\n      color: 'red',\r\n      bg: 'bg-red-100',\r\n      text: 'text-red-800',\r\n      icon: AlertTriangle,\r\n    },\r\n    high: {\r\n      color: 'orange',\r\n      bg: 'bg-orange-100',\r\n      text: 'text-orange-800',\r\n      icon: TrendingDown,\r\n    },\r\n    medium: {\r\n      color: 'yellow',\r\n      bg: 'bg-yellow-100',\r\n      text: 'text-yellow-800',\r\n      icon: Eye,\r\n    },\r\n    low: {\r\n      color: 'blue',\r\n      bg: 'bg-blue-100',\r\n      text: 'text-blue-800',\r\n      icon: TrendingUp,\r\n    },\r\n  }\r\n\r\n  const categoryConfig = {\r\n    security: { icon: Shield, color: 'text-red-600', label: 'Security' },\r\n    performance: { icon: Zap, color: 'text-orange-600', label: 'Performance' },\r\n    business: { icon: DollarSign, color: 'text-green-600', label: 'Business' },\r\n    user_behavior: {\r\n      icon: Users,\r\n      color: 'text-purple-600',\r\n      label: 'User Behavior',\r\n    },\r\n  }\r\n\r\n  // Mock anomaly data\r\n  const mockAnomalies = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        title: 'Unusual Login Pattern Detected',\r\n        description:\r\n          'Multiple failed login attempts from IP 203.192.12.45 in Delhi',\r\n        category: 'security',\r\n        severity: 'critical',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 30),\r\n        status: 'active',\r\n        confidence: 95,\r\n        affectedMetric: 'Failed Login Attempts',\r\n        expectedValue: 2,\r\n        actualValue: 47,\r\n        impact: 'High security risk - potential brute force attack',\r\n        recommendation:\r\n          'Block IP address and enable additional security measures',\r\n        autoActions: ['IP blocked temporarily', 'Security team notified'],\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Revenue Drop Anomaly',\r\n        description:\r\n          'Significant decrease in revenue compared to historical patterns',\r\n        category: 'business',\r\n        severity: 'high',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\r\n        status: 'investigating',\r\n        confidence: 87,\r\n        affectedMetric: 'Daily Revenue',\r\n        expectedValue: 245000,\r\n        actualValue: 156000,\r\n        impact: '36% revenue decrease - immediate attention required',\r\n        recommendation: 'Review marketing campaigns and product availability',\r\n        autoActions: ['Marketing team alerted', 'Inventory check initiated'],\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Unusual Product View Spike',\r\n        description: 'Leather goods category showing 340% increase in views',\r\n        category: 'user_behavior',\r\n        severity: 'medium',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4),\r\n        status: 'resolved',\r\n        confidence: 78,\r\n        affectedMetric: 'Product Views',\r\n        expectedValue: 1200,\r\n        actualValue: 5280,\r\n        impact: 'Positive anomaly - potential viral trend or marketing success',\r\n        recommendation: 'Increase inventory and capitalize on trend',\r\n        autoActions: ['Inventory team notified', 'Marketing analysis queued'],\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Page Load Time Increase',\r\n        description:\r\n          'Website performance degradation detected across multiple pages',\r\n        category: 'performance',\r\n        severity: 'medium',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 6),\r\n        status: 'active',\r\n        confidence: 82,\r\n        affectedMetric: 'Average Load Time',\r\n        expectedValue: 1.2,\r\n        actualValue: 3.8,\r\n        impact: 'User experience impact - potential bounce rate increase',\r\n        recommendation:\r\n          'Check server resources and optimize critical resources',\r\n        autoActions: [\r\n          'DevOps team notified',\r\n          'Performance monitoring increased',\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    // Initialize with mock data\r\n    setAnomalies(mockAnomalies)\r\n\r\n    // Set up auto-scanning if enabled\r\n    if (settings.autoScan && mockAnomalies) {\r\n      const interval = setInterval(() => {\r\n        performAnomalyDetection()\r\n      }, 60000) // Scan every minute\r\n\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [settings.autoScan, mockAnomalies])\r\n\r\n  const performAnomalyDetection = async () => {\r\n    setIsScanning(true)\r\n\r\n    // Simulate AI-powered anomaly detection\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    // Randomly generate new anomalies for demo\r\n    if (Math.random() > 0.7) {\r\n      const newAnomaly = {\r\n        id: Date.now(),\r\n        title: 'New Anomaly Detected',\r\n        description: 'AI detected unusual pattern in system metrics',\r\n        category: ['security', 'performance', 'business', 'user_behavior'][\r\n          Math.floor(Math.random() * 4)\r\n        ],\r\n        severity: ['low', 'medium', 'high', 'critical'][\r\n          Math.floor(Math.random() * 4)\r\n        ],\r\n        timestamp: new Date(),\r\n        status: 'active',\r\n        confidence: Math.floor(Math.random() * 30) + 70,\r\n        affectedMetric: 'System Metric',\r\n        expectedValue: 100,\r\n        actualValue: 150,\r\n        impact: 'Requires investigation',\r\n        recommendation: 'Review and analyze pattern',\r\n        autoActions: ['Team notified'],\r\n      }\r\n\r\n      setAnomalies(prev => [newAnomaly, ...prev])\r\n    }\r\n\r\n    setIsScanning(false)\r\n  }\r\n\r\n  const filteredAnomalies = anomalies.filter(anomaly => {\r\n    if (filters.severity !== 'all' && anomaly.severity !== filters.severity)\r\n      return false\r\n    if (filters.category !== 'all' && anomaly.category !== filters.category)\r\n      return false\r\n    if (filters.status !== 'all' && anomaly.status !== filters.status)\r\n      return false\r\n\r\n    // Time range filter\r\n    const now = new Date()\r\n    const anomalyTime = new Date(anomaly.timestamp)\r\n    const hoursDiff = (now - anomalyTime) / (1000 * 60 * 60)\r\n\r\n    if (filters.timeRange === '1h' && hoursDiff > 1) return false\r\n    if (filters.timeRange === '24h' && hoursDiff > 24) return false\r\n    if (filters.timeRange === '7d' && hoursDiff > 168) return false\r\n\r\n    return true\r\n  })\r\n\r\n  const getStatusIcon = status => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <AlertTriangle className=\"w-4 h-4 text-red-600\" />\r\n      case 'investigating':\r\n        return <Eye className=\"w-4 h-4 text-orange-600\" />\r\n      case 'resolved':\r\n        return <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n      default:\r\n        return <XCircle className=\"w-4 h-4 text-gray-600\" />\r\n    }\r\n  }\r\n\r\n  const updateAnomalyStatus = (id, newStatus) => {\r\n    setAnomalies(prev =>\r\n      prev.map(anomaly =>\r\n        anomaly.id === id ? { ...anomaly, status: newStatus } : anomaly\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <Brain className=\"w-8 h-8 text-purple-600\" />\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">\r\n              AI Anomaly Detection\r\n            </h2>\r\n            <p className=\"text-gray-600\">\r\n              Intelligent monitoring and threat detection\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={performAnomalyDetection}\r\n            disabled={isScanning}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            <RefreshCw\r\n              className={`w-4 h-4 ${isScanning ? 'animate-spin' : ''}`}\r\n            />\r\n            {isScanning ? 'Scanning...' : 'Scan Now'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        {Object.entries(severityConfig).map(([severity, config]) => {\r\n          const count = filteredAnomalies.filter(\r\n            a => a.severity === severity\r\n          ).length\r\n          const Icon = config.icon\r\n\r\n          return (\r\n            <motion.div\r\n              key={severity}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"bg-white p-4 rounded-lg shadow-sm border\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 capitalize\">{severity}</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{count}</p>\r\n                </div>\r\n                <Icon className={`w-6 h-6 text-${config.color}-600`} />\r\n              </div>\r\n            </motion.div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Filter className=\"w-4 h-4 text-gray-500\" />\r\n            <span className=\"text-sm font-medium text-gray-700\">Filters:</span>\r\n          </div>\r\n\r\n          <select\r\n            value={filters.severity}\r\n            onChange={e =>\r\n              setFilters(prev => ({ ...prev, severity: e.target.value }))\r\n            }\r\n            className=\"px-3 py-1.5 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-purple-500\"\r\n          >\r\n            <option value=\"all\">All Severities</option>\r\n            <option value=\"critical\">Critical</option>\r\n            <option value=\"high\">High</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"low\">Low</option>\r\n          </select>\r\n\r\n          <select\r\n            value={filters.category}\r\n            onChange={e =>\r\n              setFilters(prev => ({ ...prev, category: e.target.value }))\r\n            }\r\n            className=\"px-3 py-1.5 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-purple-500\"\r\n          >\r\n            <option value=\"all\">All Categories</option>\r\n            {Object.entries(categoryConfig).map(([key, config]) => (\r\n              <option key={key} value={key}>\r\n                {config.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <select\r\n            value={filters.status}\r\n            onChange={e =>\r\n              setFilters(prev => ({ ...prev, status: e.target.value }))\r\n            }\r\n            className=\"px-3 py-1.5 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-purple-500\"\r\n          >\r\n            <option value=\"all\">All Statuses</option>\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"investigating\">Investigating</option>\r\n            <option value=\"resolved\">Resolved</option>\r\n          </select>\r\n\r\n          <select\r\n            value={filters.timeRange}\r\n            onChange={e =>\r\n              setFilters(prev => ({ ...prev, timeRange: e.target.value }))\r\n            }\r\n            className=\"px-3 py-1.5 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-purple-500\"\r\n          >\r\n            <option value=\"1h\">Last Hour</option>\r\n            <option value=\"24h\">Last 24 Hours</option>\r\n            <option value=\"7d\">Last 7 Days</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Anomalies List */}\r\n      <div className=\"space-y-4\">\r\n        <AnimatePresence>\r\n          {filteredAnomalies.map(anomaly => {\r\n            const severityConfig_item = severityConfig[anomaly.severity]\r\n            const categoryConfig_item = categoryConfig[anomaly.category]\r\n            const CategoryIcon = categoryConfig_item.icon\r\n\r\n            return (\r\n              <motion.div\r\n                key={anomaly.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                className=\"bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow\"\r\n              >\r\n                <div className=\"p-6\">\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-start gap-4\">\r\n                      <div\r\n                        className={`p-2 rounded-lg ${severityConfig_item.bg}`}\r\n                      >\r\n                        <CategoryIcon\r\n                          className={`w-5 h-5 ${categoryConfig_item.color}`}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">\r\n                            {anomaly.title}\r\n                          </h3>\r\n                          <span\r\n                            className={`px-2 py-1 rounded-full text-xs font-medium ${severityConfig_item.bg} ${severityConfig_item.text}`}\r\n                          >\r\n                            {anomaly.severity.toUpperCase()}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            {anomaly.confidence}% confidence\r\n                          </span>\r\n                        </div>\r\n\r\n                        <p className=\"text-gray-600 mb-3\">\r\n                          {anomaly.description}\r\n                        </p>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                          <div className=\"space-y-2\">\r\n                            <div className=\"flex justify-between text-sm\">\r\n                              <span className=\"text-gray-500\">Expected:</span>\r\n                              <span className=\"font-medium\">\r\n                                {anomaly.expectedValue.toLocaleString()}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between text-sm\">\r\n                              <span className=\"text-gray-500\">Actual:</span>\r\n                              <span\r\n                                className={`font-medium ${\r\n                                  anomaly.actualValue > anomaly.expectedValue\r\n                                    ? 'text-red-600'\r\n                                    : 'text-green-600'\r\n                                }`}\r\n                              >\r\n                                {anomaly.actualValue.toLocaleString()}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"space-y-2\">\r\n                            <div className=\"text-sm\">\r\n                              <span className=\"text-gray-500\">Impact:</span>\r\n                              <p className=\"font-medium text-gray-900\">\r\n                                {anomaly.impact}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n                          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n                            AI Recommendation:\r\n                          </h4>\r\n                          <p className=\"text-sm text-gray-700\">\r\n                            {anomaly.recommendation}\r\n                          </p>\r\n                        </div>\r\n\r\n                        {anomaly.autoActions.length > 0 && (\r\n                          <div className=\"mb-4\">\r\n                            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n                              Auto Actions Taken:\r\n                            </h4>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                              {anomaly.autoActions.map((action, index) => (\r\n                                <span\r\n                                  key={index}\r\n                                  className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\"\r\n                                >\r\n                                  {action}\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {getStatusIcon(anomaly.status)}\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {anomaly.timestamp.toLocaleTimeString()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"w-4 h-4 text-gray-400\" />\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {anomaly.timestamp.toLocaleDateString()}{' '}\r\n                        {anomaly.timestamp.toLocaleTimeString()}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {anomaly.status === 'active' && (\r\n                        <button\r\n                          onClick={() =>\r\n                            updateAnomalyStatus(anomaly.id, 'investigating')\r\n                          }\r\n                          className=\"px-3 py-1.5 bg-orange-600 text-white text-sm rounded-lg hover:bg-orange-700 transition-colors\"\r\n                        >\r\n                          Investigate\r\n                        </button>\r\n                      )}\r\n                      {anomaly.status === 'investigating' && (\r\n                        <button\r\n                          onClick={() =>\r\n                            updateAnomalyStatus(anomaly.id, 'resolved')\r\n                          }\r\n                          className=\"px-3 py-1.5 bg-green-600 text-white text-sm rounded-lg hover:bg-green-700 transition-colors\"\r\n                        >\r\n                          Mark Resolved\r\n                        </button>\r\n                      )}\r\n                      <button className=\"px-3 py-1.5 bg-gray-100 text-gray-700 text-sm rounded-lg hover:bg-gray-200 transition-colors\">\r\n                        View Details\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )\r\n          })}\r\n        </AnimatePresence>\r\n\r\n        {filteredAnomalies.length === 0 && (\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-8 text-center\">\r\n            <Brain className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n              No Anomalies Detected\r\n            </h3>\r\n            <p className=\"text-gray-600\">\r\n              {isScanning\r\n                ? 'Scanning for anomalies...'\r\n                : 'Your system is running normally'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnomalyDetection\r\n","import { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {\r\n  Plus,\r\n  Trash2,\r\n  Edit3,\r\n  BarChart3,\r\n  PieChart,\r\n  LineChart,\r\n  TrendingUp,\r\n  Users,\r\n  Package,\r\n  Settings,\r\n  Save,\r\n  Download,\r\n  Grid,\r\n  Layout,\r\n  Palette,\r\n  Monitor,\r\n  Smartphone,\r\n  Tablet,\r\n} from 'lucide-react'\r\n\r\nconst CustomDashboardBuilder = () => {\r\n  const [dashboards, setDashboards] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Executive Summary',\r\n      description: 'High-level KPIs for executive team',\r\n      widgets: [\r\n        {\r\n          id: 1,\r\n          type: 'metric',\r\n          title: 'Total Revenue',\r\n          position: { x: 0, y: 0, w: 3, h: 2 },\r\n        },\r\n        {\r\n          id: 2,\r\n          type: 'chart',\r\n          title: 'Sales Trend',\r\n          position: { x: 3, y: 0, w: 6, h: 4 },\r\n        },\r\n        {\r\n          id: 3,\r\n          type: 'metric',\r\n          title: 'Active Users',\r\n          position: { x: 9, y: 0, w: 3, h: 2 },\r\n        },\r\n      ],\r\n      layout: '12-column',\r\n      theme: 'light',\r\n      isDefault: true,\r\n    },\r\n  ])\r\n\r\n  const [selectedDashboard, setSelectedDashboard] = useState(dashboards[0])\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [showWidgetLibrary, setShowWidgetLibrary] = useState(false)\r\n  const [previewDevice, setPreviewDevice] = useState('desktop')\r\n\r\n  const widgetTypes = [\r\n    {\r\n      id: 'metric',\r\n      name: 'Metric Card',\r\n      icon: TrendingUp,\r\n      description: 'Display single KPI value with trend',\r\n      defaultSize: { w: 3, h: 2 },\r\n      configurable: ['title', 'metric', 'format', 'color'],\r\n    },\r\n    {\r\n      id: 'chart',\r\n      name: 'Line Chart',\r\n      icon: LineChart,\r\n      description: 'Time series data visualization',\r\n      defaultSize: { w: 6, h: 4 },\r\n      configurable: ['title', 'data_source', 'time_range', 'metrics'],\r\n    },\r\n    {\r\n      id: 'bar_chart',\r\n      name: 'Bar Chart',\r\n      icon: BarChart3,\r\n      description: 'Compare categories or periods',\r\n      defaultSize: { w: 6, h: 4 },\r\n      configurable: ['title', 'data_source', 'grouping', 'metrics'],\r\n    },\r\n    {\r\n      id: 'pie_chart',\r\n      name: 'Pie Chart',\r\n      icon: PieChart,\r\n      description: 'Show proportions and percentages',\r\n      defaultSize: { w: 4, h: 4 },\r\n      configurable: ['title', 'data_source', 'category', 'value'],\r\n    },\r\n    {\r\n      id: 'user_list',\r\n      name: 'User Activity',\r\n      icon: Users,\r\n      description: 'Recent user activities and stats',\r\n      defaultSize: { w: 4, h: 6 },\r\n      configurable: ['title', 'user_filter', 'activity_type', 'limit'],\r\n    },\r\n    {\r\n      id: 'product_grid',\r\n      name: 'Product Grid',\r\n      icon: Package,\r\n      description: 'Top products by various metrics',\r\n      defaultSize: { w: 8, h: 6 },\r\n      configurable: ['title', 'sort_by', 'category_filter', 'limit'],\r\n    },\r\n  ]\r\n\r\n  const themes = [\r\n    {\r\n      id: 'light',\r\n      name: 'Light',\r\n      colors: { bg: '#ffffff', text: '#374151', accent: '#3b82f6' },\r\n    },\r\n    {\r\n      id: 'dark',\r\n      name: 'Dark',\r\n      colors: { bg: '#1f2937', text: '#f9fafb', accent: '#60a5fa' },\r\n    },\r\n    {\r\n      id: 'professional',\r\n      name: 'Professional',\r\n      colors: { bg: '#f8fafc', text: '#1e293b', accent: '#0f172a' },\r\n    },\r\n    {\r\n      id: 'colorful',\r\n      name: 'Colorful',\r\n      colors: { bg: '#fef3c7', text: '#92400e', accent: '#f59e0b' },\r\n    },\r\n  ]\r\n\r\n  const devices = [\r\n    { id: 'desktop', name: 'Desktop', icon: Monitor, width: '100%' },\r\n    { id: 'tablet', name: 'Tablet', icon: Tablet, width: '768px' },\r\n    { id: 'mobile', name: 'Mobile', icon: Smartphone, width: '375px' },\r\n  ]\r\n\r\n  const createNewDashboard = () => {\r\n    const newDashboard = {\r\n      id: Date.now(),\r\n      name: `Dashboard ${dashboards.length + 1}`,\r\n      description: 'Custom dashboard',\r\n      widgets: [],\r\n      layout: '12-column',\r\n      theme: 'light',\r\n      isDefault: false,\r\n    }\r\n\r\n    setDashboards(prev => [...prev, newDashboard])\r\n    setSelectedDashboard(newDashboard)\r\n    setEditMode(true)\r\n  }\r\n\r\n  const addWidget = widgetType => {\r\n    const newWidget = {\r\n      id: Date.now(),\r\n      type: widgetType.id,\r\n      title: widgetType.name,\r\n      position: {\r\n        x: 0,\r\n        y: Math.max(\r\n          ...selectedDashboard.widgets.map(w => w.position.y + w.position.h),\r\n          0\r\n        ),\r\n        ...widgetType.defaultSize,\r\n      },\r\n      config: {},\r\n    }\r\n\r\n    setSelectedDashboard(prev => ({\r\n      ...prev,\r\n      widgets: [...prev.widgets, newWidget],\r\n    }))\r\n\r\n    setDashboards(prev =>\r\n      prev.map(d =>\r\n        d.id === selectedDashboard.id\r\n          ? { ...d, widgets: [...d.widgets, newWidget] }\r\n          : d\r\n      )\r\n    )\r\n\r\n    setShowWidgetLibrary(false)\r\n  }\r\n\r\n  const removeWidget = widgetId => {\r\n    setSelectedDashboard(prev => ({\r\n      ...prev,\r\n      widgets: prev.widgets.filter(w => w.id !== widgetId),\r\n    }))\r\n\r\n    setDashboards(prev =>\r\n      prev.map(d =>\r\n        d.id === selectedDashboard.id\r\n          ? { ...d, widgets: d.widgets.filter(w => w.id !== widgetId) }\r\n          : d\r\n      )\r\n    )\r\n  }\r\n\r\n  const saveDashboard = () => {\r\n    // In real app, this would save to backend\r\n    console.log('Saving dashboard:', selectedDashboard)\r\n    setEditMode(false)\r\n  }\r\n\r\n  const exportDashboard = () => {\r\n    const exportData = {\r\n      ...selectedDashboard,\r\n      exportDate: new Date().toISOString(),\r\n      version: '1.0',\r\n    }\r\n\r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\r\n      type: 'application/json',\r\n    })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `dashboard-${selectedDashboard.name.toLowerCase().replace(/\\s+/g, '-')}.json`\r\n    a.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  const renderWidget = widget => {\r\n    const widgetType = widgetTypes.find(t => t.id === widget.type)\r\n    const Icon = widgetType?.icon || Package\r\n\r\n    return (\r\n      <motion.div\r\n        key={widget.id}\r\n        className={`bg-white rounded-lg border shadow-sm relative group ${\r\n          editMode ? 'cursor-move' : ''\r\n        }`}\r\n        style={{\r\n          gridColumn: `${widget.position.x + 1} / span ${widget.position.w}`,\r\n          gridRow: `${widget.position.y + 1} / span ${widget.position.h}`,\r\n          minHeight: `${widget.position.h * 80}px`,\r\n        }}\r\n        whileHover={editMode ? { scale: 1.02 } : {}}\r\n      >\r\n        {/* Widget Header */}\r\n        <div className=\"flex items-center justify-between p-4 border-b\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Icon className=\"w-4 h-4 text-gray-600\" />\r\n            <h3 className=\"font-medium text-gray-900\">{widget.title}</h3>\r\n          </div>\r\n\r\n          {editMode && (\r\n            <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center gap-1\">\r\n              <button\r\n                onClick={() => {\r\n                  /* Open widget config */\r\n                }}\r\n                className=\"p-1.5 hover:bg-gray-100 rounded transition-colors\"\r\n              >\r\n                <Settings className=\"w-4 h-4 text-gray-600\" />\r\n              </button>\r\n              <button\r\n                onClick={() => removeWidget(widget.id)}\r\n                className=\"p-1.5 hover:bg-red-100 rounded transition-colors\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4 text-red-600\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Widget Content */}\r\n        <div className=\"p-4\">\r\n          {widget.type === 'metric' && (\r\n            <div className=\"text-center\">\r\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">₹2.4M</div>\r\n              <div className=\"text-sm text-green-600 flex items-center justify-center gap-1\">\r\n                <TrendingUp className=\"w-4 h-4\" />\r\n                +15.2%\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {widget.type === 'chart' && (\r\n            <div className=\"h-32 bg-gradient-to-r from-blue-50 to-purple-50 rounded flex items-center justify-center\">\r\n              <LineChart className=\"w-8 h-8 text-blue-600\" />\r\n              <span className=\"ml-2 text-blue-600\">Chart Visualization</span>\r\n            </div>\r\n          )}\r\n\r\n          {widget.type === 'bar_chart' && (\r\n            <div className=\"h-32 bg-gradient-to-r from-green-50 to-blue-50 rounded flex items-center justify-center\">\r\n              <BarChart3 className=\"w-8 h-8 text-green-600\" />\r\n              <span className=\"ml-2 text-green-600\">Bar Chart</span>\r\n            </div>\r\n          )}\r\n\r\n          {widget.type === 'pie_chart' && (\r\n            <div className=\"h-32 bg-gradient-to-r from-purple-50 to-pink-50 rounded flex items-center justify-center\">\r\n              <PieChart className=\"w-8 h-8 text-purple-600\" />\r\n              <span className=\"ml-2 text-purple-600\">Pie Chart</span>\r\n            </div>\r\n          )}\r\n\r\n          {widget.type === 'user_list' && (\r\n            <div className=\"space-y-2\">\r\n              {[1, 2, 3].map(i => (\r\n                <div\r\n                  key={i}\r\n                  className=\"flex items-center gap-3 p-2 bg-gray-50 rounded\"\r\n                >\r\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium\">\r\n                    U{i}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"text-sm font-medium\">User {i}</div>\r\n                    <div className=\"text-xs text-gray-500\">Online 2m ago</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {widget.type === 'product_grid' && (\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {[1, 2, 3, 4].map(i => (\r\n                <div key={i} className=\"bg-gray-50 rounded p-2 text-center\">\r\n                  <Package className=\"w-6 h-6 text-gray-600 mx-auto mb-1\" />\r\n                  <div className=\"text-xs font-medium\">Product {i}</div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    ₹{(i * 1000).toLocaleString()}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">\r\n            Custom Dashboard Builder\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            Create personalized dashboards with drag-and-drop widgets\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={() =>\r\n              setPreviewDevice(\r\n                previewDevice === 'desktop'\r\n                  ? 'tablet'\r\n                  : previewDevice === 'tablet'\r\n                    ? 'mobile'\r\n                    : 'desktop'\r\n              )\r\n            }\r\n            className=\"flex items-center gap-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n          >\r\n            {(() => {\r\n              const DeviceIcon = devices.find(d => d.id === previewDevice)?.icon\r\n              return DeviceIcon ? <DeviceIcon className=\"w-4 h-4\" /> : null\r\n            })()}\r\n            {devices.find(d => d.id === previewDevice)?.name}\r\n          </button>\r\n\r\n          {editMode ? (\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setEditMode(false)}\r\n                className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={saveDashboard}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                <Save className=\"w-4 h-4\" />\r\n                Save\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={exportDashboard}\r\n                className=\"flex items-center gap-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <Download className=\"w-4 h-4\" />\r\n                Export\r\n              </button>\r\n              <button\r\n                onClick={() => setEditMode(true)}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                <Edit3 className=\"w-4 h-4\" />\r\n                Edit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dashboard Selector */}\r\n      <div className=\"flex items-center gap-4 overflow-x-auto pb-2\">\r\n        {dashboards.map(dashboard => (\r\n          <button\r\n            key={dashboard.id}\r\n            onClick={() => setSelectedDashboard(dashboard)}\r\n            className={`flex-shrink-0 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n              selectedDashboard.id === dashboard.id\r\n                ? 'bg-blue-100 text-blue-700 border-2 border-blue-200'\r\n                : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            {dashboard.name}\r\n            {dashboard.isDefault && (\r\n              <span className=\"ml-2 text-xs bg-green-100 text-green-700 px-1.5 py-0.5 rounded\">\r\n                Default\r\n              </span>\r\n            )}\r\n          </button>\r\n        ))}\r\n\r\n        <button\r\n          onClick={createNewDashboard}\r\n          className=\"flex-shrink-0 flex items-center gap-2 px-4 py-2 border-2 border-dashed border-gray-300 rounded-lg text-gray-600 hover:border-gray-400 hover:text-gray-700 transition-colors\"\r\n        >\r\n          <Plus className=\"w-4 h-4\" />\r\n          New Dashboard\r\n        </button>\r\n      </div>\r\n\r\n      {/* Edit Mode Controls */}\r\n      {editMode && (\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <button\r\n                onClick={() => setShowWidgetLibrary(true)}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Add Widget\r\n              </button>\r\n\r\n              <div className=\"flex items-center gap-2\">\r\n                <Palette className=\"w-4 h-4 text-gray-600\" />\r\n                <select\r\n                  value={selectedDashboard.theme}\r\n                  onChange={e => {\r\n                    setSelectedDashboard(prev => ({\r\n                      ...prev,\r\n                      theme: e.target.value,\r\n                    }))\r\n                    setDashboards(prev =>\r\n                      prev.map(d =>\r\n                        d.id === selectedDashboard.id\r\n                          ? { ...d, theme: e.target.value }\r\n                          : d\r\n                      )\r\n                    )\r\n                  }}\r\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  {themes.map(theme => (\r\n                    <option key={theme.id} value={theme.id}>\r\n                      {theme.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-sm text-blue-700\">\r\n              <Grid className=\"w-4 h-4 inline mr-1\" />\r\n              Drag widgets to rearrange • Click settings to configure\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Dashboard Preview */}\r\n      <div className=\"bg-white rounded-lg border shadow-sm overflow-hidden\">\r\n        <div\r\n          className=\"mx-auto transition-all duration-300\"\r\n          style={{\r\n            width: devices.find(d => d.id === previewDevice)?.width,\r\n            minHeight: '600px',\r\n          }}\r\n        >\r\n          <div\r\n            className=\"grid gap-4 p-6\"\r\n            style={{\r\n              gridTemplateColumns: 'repeat(12, 1fr)',\r\n              gridAutoRows: '80px',\r\n            }}\r\n          >\r\n            {selectedDashboard.widgets.map(renderWidget)}\r\n\r\n            {selectedDashboard.widgets.length === 0 && (\r\n              <div className=\"col-span-12 row-span-6 flex items-center justify-center bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\">\r\n                <div className=\"text-center\">\r\n                  <Layout className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                    Empty Dashboard\r\n                  </h3>\r\n                  <p className=\"text-gray-600 mb-4\">\r\n                    Start building your dashboard by adding widgets\r\n                  </p>\r\n                  {editMode && (\r\n                    <button\r\n                      onClick={() => setShowWidgetLibrary(true)}\r\n                      className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4\" />\r\n                      Add Your First Widget\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Widget Library Modal */}\r\n      <AnimatePresence>\r\n        {showWidgetLibrary && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.95 }}\r\n              className=\"bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[80vh] overflow-y-auto\"\r\n            >\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900\">\r\n                  Widget Library\r\n                </h3>\r\n                <button\r\n                  onClick={() => setShowWidgetLibrary(false)}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {widgetTypes.map(widget => {\r\n                  const Icon = widget.icon\r\n\r\n                  return (\r\n                    <motion.button\r\n                      key={widget.id}\r\n                      onClick={() => addWidget(widget)}\r\n                      className=\"p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors text-left\"\r\n                      whileHover={{ scale: 1.02 }}\r\n                      whileTap={{ scale: 0.98 }}\r\n                    >\r\n                      <div className=\"flex items-center gap-3 mb-3\">\r\n                        <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                          <Icon className=\"w-5 h-5 text-blue-600\" />\r\n                        </div>\r\n                        <h4 className=\"font-medium text-gray-900\">\r\n                          {widget.name}\r\n                        </h4>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-600 mb-3\">\r\n                        {widget.description}\r\n                      </p>\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {widget.configurable.map(config => (\r\n                          <span\r\n                            key={config}\r\n                            className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded\"\r\n                          >\r\n                            {config.replace('_', ' ')}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </motion.button>\r\n                  )\r\n                })}\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomDashboardBuilder\r\n","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {\r\n  Sun,\r\n  Moon,\r\n  Monitor,\r\n  Palette,\r\n  Settings,\r\n  Download,\r\n  Upload,\r\n  Save,\r\n  Check,\r\n  Copy,\r\n  Smartphone,\r\n  Tablet,\r\n} from 'lucide-react'\r\n\r\nconst ThemeManager = () => {\r\n  const [currentTheme, setCurrentTheme] = useState('light')\r\n  const [customThemes, setCustomThemes] = useState([])\r\n  const [isCreating, setIsCreating] = useState(false)\r\n  const [selectedDevice, setSelectedDevice] = useState('desktop')\r\n\r\n  const [themeEditor, setThemeEditor] = useState({\r\n    name: '',\r\n    colors: {\r\n      primary: '#3b82f6',\r\n      secondary: '#64748b',\r\n      background: '#ffffff',\r\n      surface: '#f8fafc',\r\n      text: '#1e293b',\r\n      textSecondary: '#64748b',\r\n      border: '#e2e8f0',\r\n      success: '#10b981',\r\n      warning: '#f59e0b',\r\n      error: '#ef4444',\r\n    },\r\n    typography: {\r\n      fontFamily: 'Inter',\r\n      fontSize: 14,\r\n      fontWeight: 400,\r\n      lineHeight: 1.5,\r\n    },\r\n    spacing: {\r\n      unit: 8,\r\n      container: 1200,\r\n    },\r\n    borderRadius: {\r\n      sm: 4,\r\n      md: 8,\r\n      lg: 12,\r\n      xl: 16,\r\n    },\r\n    shadows: {\r\n      sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\r\n      md: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n      lg: '0 10px 15px -3px rgb(0 0 0 / 0.1)',\r\n    },\r\n  })\r\n\r\n  const builtInThemes = useMemo(\r\n    () => [\r\n      {\r\n        id: 'light',\r\n        name: 'Light',\r\n        icon: Sun,\r\n        colors: {\r\n          primary: '#3b82f6',\r\n          secondary: '#64748b',\r\n          background: '#ffffff',\r\n          surface: '#f8fafc',\r\n          text: '#1e293b',\r\n          textSecondary: '#64748b',\r\n          border: '#e2e8f0',\r\n          success: '#10b981',\r\n          warning: '#f59e0b',\r\n          error: '#ef4444',\r\n        },\r\n      },\r\n      {\r\n        id: 'dark',\r\n        name: 'Dark',\r\n        icon: Moon,\r\n        colors: {\r\n          primary: '#60a5fa',\r\n          secondary: '#94a3b8',\r\n          background: '#0f172a',\r\n          surface: '#1e293b',\r\n          text: '#f1f5f9',\r\n          textSecondary: '#94a3b8',\r\n          border: '#334155',\r\n          success: '#34d399',\r\n          warning: '#fbbf24',\r\n          error: '#f87171',\r\n        },\r\n      },\r\n      {\r\n        id: 'system',\r\n        name: 'System',\r\n        icon: Monitor,\r\n        colors: {\r\n          primary: '#6366f1',\r\n          secondary: '#6b7280',\r\n          background: '#ffffff',\r\n          surface: '#f9fafb',\r\n          text: '#111827',\r\n          textSecondary: '#6b7280',\r\n          border: '#d1d5db',\r\n          success: '#059669',\r\n          warning: '#d97706',\r\n          error: '#dc2626',\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const colorPresets = [\r\n    { name: 'Blue', primary: '#3b82f6', secondary: '#1e40af' },\r\n    { name: 'Purple', primary: '#8b5cf6', secondary: '#7c3aed' },\r\n    { name: 'Green', primary: '#10b981', secondary: '#059669' },\r\n    { name: 'Orange', primary: '#f59e0b', secondary: '#d97706' },\r\n    { name: 'Red', primary: '#ef4444', secondary: '#dc2626' },\r\n    { name: 'Pink', primary: '#ec4899', secondary: '#db2777' },\r\n    { name: 'Indigo', primary: '#6366f1', secondary: '#4f46e5' },\r\n    { name: 'Teal', primary: '#14b8a6', secondary: '#0d9488' },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    // Load saved theme from localStorage\r\n    const savedTheme = localStorage.getItem('ivolex-theme')\r\n    if (savedTheme) {\r\n      setCurrentTheme(savedTheme)\r\n      applyTheme(savedTheme)\r\n    } else {\r\n      // Detect system preference\r\n      const prefersDark = window.matchMedia(\r\n        '(prefers-color-scheme: dark)'\r\n      ).matches\r\n      const initialTheme = prefersDark ? 'dark' : 'light'\r\n      setCurrentTheme(initialTheme)\r\n      applyTheme(initialTheme)\r\n    }\r\n\r\n    // Load custom themes\r\n    const savedCustomThemes = localStorage.getItem('ivolex-custom-themes')\r\n    if (savedCustomThemes) {\r\n      setCustomThemes(JSON.parse(savedCustomThemes))\r\n    }\r\n  }, [applyTheme])\r\n\r\n  const applyTheme = useCallback(\r\n    themeId => {\r\n      const theme = [...builtInThemes, ...customThemes].find(\r\n        t => t.id === themeId\r\n      )\r\n      if (!theme) return\r\n\r\n      const root = document.documentElement\r\n\r\n      // Apply CSS custom properties\r\n      Object.entries(theme.colors).forEach(([key, value]) => {\r\n        root.style.setProperty(`--color-${key}`, value)\r\n      })\r\n\r\n      // Apply additional theme properties if available\r\n      if (theme.typography) {\r\n        root.style.setProperty('--font-family', theme.typography.fontFamily)\r\n        root.style.setProperty('--font-size', `${theme.typography.fontSize}px`)\r\n      }\r\n\r\n      if (theme.borderRadius) {\r\n        Object.entries(theme.borderRadius).forEach(([key, value]) => {\r\n          root.style.setProperty(`--radius-${key}`, `${value}px`)\r\n        })\r\n      }\r\n\r\n      // Update body class for dark/light mode\r\n      document.body.className = document.body.className.replace(\r\n        /theme-\\w+/g,\r\n        ''\r\n      )\r\n      document.body.classList.add(`theme-${themeId}`)\r\n    },\r\n    [builtInThemes, customThemes]\r\n  )\r\n\r\n  const handleThemeChange = themeId => {\r\n    setCurrentTheme(themeId)\r\n    applyTheme(themeId)\r\n    localStorage.setItem('ivolex-theme', themeId)\r\n  }\r\n\r\n  const createCustomTheme = () => {\r\n    if (!themeEditor.name.trim()) return\r\n\r\n    const newTheme = {\r\n      id: `custom-${Date.now()}`,\r\n      name: themeEditor.name,\r\n      colors: { ...themeEditor.colors },\r\n      typography: { ...themeEditor.typography },\r\n      spacing: { ...themeEditor.spacing },\r\n      borderRadius: { ...themeEditor.borderRadius },\r\n      shadows: { ...themeEditor.shadows },\r\n      isCustom: true,\r\n    }\r\n\r\n    const updatedCustomThemes = [...customThemes, newTheme]\r\n    setCustomThemes(updatedCustomThemes)\r\n    localStorage.setItem(\r\n      'ivolex-custom-themes',\r\n      JSON.stringify(updatedCustomThemes)\r\n    )\r\n\r\n    setIsCreating(false)\r\n    setThemeEditor({ ...themeEditor, name: '' })\r\n    handleThemeChange(newTheme.id)\r\n  }\r\n\r\n  const exportTheme = theme => {\r\n    const exportData = {\r\n      ...theme,\r\n      exportDate: new Date().toISOString(),\r\n      version: '1.0',\r\n    }\r\n\r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\r\n      type: 'application/json',\r\n    })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `theme-${theme.name.toLowerCase().replace(/\\s+/g, '-')}.json`\r\n    a.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  const importTheme = event => {\r\n    const file = event.target.files[0]\r\n    if (!file) return\r\n\r\n    const reader = new FileReader()\r\n    reader.onload = e => {\r\n      try {\r\n        const importedTheme = JSON.parse(e.target.result)\r\n        const newTheme = {\r\n          ...importedTheme,\r\n          id: `imported-${Date.now()}`,\r\n          isCustom: true,\r\n        }\r\n\r\n        const updatedCustomThemes = [...customThemes, newTheme]\r\n        setCustomThemes(updatedCustomThemes)\r\n        localStorage.setItem(\r\n          'ivolex-custom-themes',\r\n          JSON.stringify(updatedCustomThemes)\r\n        )\r\n      } catch (error) {\r\n        console.error('Failed to import theme:', error)\r\n      }\r\n    }\r\n    reader.readAsText(file)\r\n  }\r\n\r\n  const copyThemeCode = theme => {\r\n    const css = Object.entries(theme.colors)\r\n      .map(([key, value]) => `  --color-${key}: ${value};`)\r\n      .join('\\n')\r\n\r\n    const fullCSS = `:root {\\n${css}\\n}`\r\n    navigator.clipboard.writeText(fullCSS)\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <Palette className=\"w-8 h-8 text-blue-600\" />\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Theme Manager</h2>\r\n            <p className=\"text-gray-600\">\r\n              Customize appearance and create custom themes\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <label className=\"flex items-center gap-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer\">\r\n            <Upload className=\"w-4 h-4\" />\r\n            Import Theme\r\n            <input\r\n              type=\"file\"\r\n              accept=\".json\"\r\n              onChange={importTheme}\r\n              className=\"hidden\"\r\n            />\r\n          </label>\r\n\r\n          <button\r\n            onClick={() => setIsCreating(true)}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Palette className=\"w-4 h-4\" />\r\n            Create Theme\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Theme Selection */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Current Theme\r\n        </h3>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-6\">\r\n          {builtInThemes.map(theme => {\r\n            const Icon = theme.icon\r\n            const isActive = currentTheme === theme.id\r\n\r\n            return (\r\n              <motion.button\r\n                key={theme.id}\r\n                onClick={() => handleThemeChange(theme.id)}\r\n                className={`p-4 rounded-lg border-2 transition-all text-left ${\r\n                  isActive\r\n                    ? 'border-blue-500 bg-blue-50'\r\n                    : 'border-gray-200 hover:border-gray-300 bg-white'\r\n                }`}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <Icon className=\"w-6 h-6 text-gray-600\" />\r\n                  {isActive && <Check className=\"w-5 h-5 text-blue-600\" />}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"font-medium text-gray-900\">{theme.name}</h4>\r\n\r\n                  <div className=\"flex gap-1\">\r\n                    {Object.entries(theme.colors)\r\n                      .slice(0, 4)\r\n                      .map(([key, color]) => (\r\n                        <div\r\n                          key={key}\r\n                          className=\"w-4 h-4 rounded border border-gray-200\"\r\n                          style={{ backgroundColor: color }}\r\n                        />\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </motion.button>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        {/* Custom Themes */}\r\n        {customThemes.length > 0 && (\r\n          <div>\r\n            <h4 className=\"font-medium text-gray-900 mb-3\">Custom Themes</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n              {customThemes.map(theme => {\r\n                const isActive = currentTheme === theme.id\r\n\r\n                return (\r\n                  <div\r\n                    key={theme.id}\r\n                    className={`p-4 rounded-lg border-2 transition-all ${\r\n                      isActive\r\n                        ? 'border-blue-500 bg-blue-50'\r\n                        : 'border-gray-200 hover:border-gray-300 bg-white'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <Palette className=\"w-6 h-6 text-gray-600\" />\r\n                      <div className=\"flex items-center gap-1\">\r\n                        {isActive && (\r\n                          <Check className=\"w-4 h-4 text-blue-600\" />\r\n                        )}\r\n                        <button\r\n                          onClick={() => copyThemeCode(theme)}\r\n                          className=\"p-1 hover:bg-gray-200 rounded transition-colors\"\r\n                          title=\"Copy CSS\"\r\n                        >\r\n                          <Copy className=\"w-3 h-3 text-gray-500\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => exportTheme(theme)}\r\n                          className=\"p-1 hover:bg-gray-200 rounded transition-colors\"\r\n                          title=\"Export theme\"\r\n                        >\r\n                          <Download className=\"w-3 h-3 text-gray-500\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      onClick={() => handleThemeChange(theme.id)}\r\n                      className=\"w-full text-left\"\r\n                    >\r\n                      <h4 className=\"font-medium text-gray-900 mb-2\">\r\n                        {theme.name}\r\n                      </h4>\r\n                      <div className=\"flex gap-1\">\r\n                        {Object.entries(theme.colors)\r\n                          .slice(0, 4)\r\n                          .map(([key, color]) => (\r\n                            <div\r\n                              key={key}\r\n                              className=\"w-4 h-4 rounded border border-gray-200\"\r\n                              style={{ backgroundColor: color }}\r\n                            />\r\n                          ))}\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Theme Creator Modal */}\r\n      <AnimatePresence>\r\n        {isCreating && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.95 }}\r\n              className=\"bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto\"\r\n            >\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900\">\r\n                  Create Custom Theme\r\n                </h3>\r\n                <button\r\n                  onClick={() => setIsCreating(false)}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Theme Editor */}\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Theme Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={themeEditor.name}\r\n                      onChange={e =>\r\n                        setThemeEditor(prev => ({\r\n                          ...prev,\r\n                          name: e.target.value,\r\n                        }))\r\n                      }\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      placeholder=\"My Custom Theme\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n                      Color Palette\r\n                    </label>\r\n                    <div className=\"grid grid-cols-2 gap-3\">\r\n                      {Object.entries(themeEditor.colors).map(\r\n                        ([key, value]) => (\r\n                          <div key={key} className=\"flex items-center gap-2\">\r\n                            <input\r\n                              type=\"color\"\r\n                              value={value}\r\n                              onChange={e =>\r\n                                setThemeEditor(prev => ({\r\n                                  ...prev,\r\n                                  colors: {\r\n                                    ...prev.colors,\r\n                                    [key]: e.target.value,\r\n                                  },\r\n                                }))\r\n                              }\r\n                              className=\"w-8 h-8 rounded border border-gray-300\"\r\n                            />\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"text-sm font-medium text-gray-900 capitalize\">\r\n                                {key.replace(/([A-Z])/g, ' $1').trim()}\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">\r\n                                {value}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n                      Quick Presets\r\n                    </label>\r\n                    <div className=\"grid grid-cols-4 gap-2\">\r\n                      {colorPresets.map(preset => (\r\n                        <button\r\n                          key={preset.name}\r\n                          onClick={() =>\r\n                            setThemeEditor(prev => ({\r\n                              ...prev,\r\n                              colors: {\r\n                                ...prev.colors,\r\n                                primary: preset.primary,\r\n                                secondary: preset.secondary,\r\n                              },\r\n                            }))\r\n                          }\r\n                          className=\"p-2 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\"\r\n                        >\r\n                          <div\r\n                            className=\"w-full h-6 rounded mb-1\"\r\n                            style={{ backgroundColor: preset.primary }}\r\n                          />\r\n                          <div className=\"text-xs text-gray-600\">\r\n                            {preset.name}\r\n                          </div>\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Preview */}\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h4 className=\"font-medium text-gray-900\">Preview</h4>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <button\r\n                        onClick={() => setSelectedDevice('desktop')}\r\n                        className={`p-1.5 rounded ${selectedDevice === 'desktop' ? 'bg-blue-100 text-blue-600' : 'text-gray-500'}`}\r\n                      >\r\n                        <Monitor className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setSelectedDevice('tablet')}\r\n                        className={`p-1.5 rounded ${selectedDevice === 'tablet' ? 'bg-blue-100 text-blue-600' : 'text-gray-500'}`}\r\n                      >\r\n                        <Tablet className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setSelectedDevice('mobile')}\r\n                        className={`p-1.5 rounded ${selectedDevice === 'mobile' ? 'bg-blue-100 text-blue-600' : 'text-gray-500'}`}\r\n                      >\r\n                        <Smartphone className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\r\n                    <div\r\n                      className=\"p-4 space-y-4\"\r\n                      style={{\r\n                        backgroundColor: themeEditor.colors.background,\r\n                        color: themeEditor.colors.text,\r\n                        width:\r\n                          selectedDevice === 'mobile'\r\n                            ? '375px'\r\n                            : selectedDevice === 'tablet'\r\n                              ? '768px'\r\n                              : '100%',\r\n                      }}\r\n                    >\r\n                      {/* Preview Header */}\r\n                      <div\r\n                        className=\"p-3 rounded-lg flex items-center justify-between\"\r\n                        style={{ backgroundColor: themeEditor.colors.surface }}\r\n                      >\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div\r\n                            className=\"w-6 h-6 rounded\"\r\n                            style={{\r\n                              backgroundColor: themeEditor.colors.primary,\r\n                            }}\r\n                          />\r\n                          <span className=\"font-medium\">IVOLEX Admin</span>\r\n                        </div>\r\n                        <Settings\r\n                          className=\"w-4 h-4\"\r\n                          style={{ color: themeEditor.colors.textSecondary }}\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Preview Cards */}\r\n                      <div className=\"grid grid-cols-2 gap-3\">\r\n                        <div\r\n                          className=\"p-3 rounded-lg\"\r\n                          style={{\r\n                            backgroundColor: themeEditor.colors.surface,\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"text-sm\"\r\n                            style={{ color: themeEditor.colors.textSecondary }}\r\n                          >\r\n                            Revenue\r\n                          </div>\r\n                          <div className=\"text-xl font-bold\">₹2.4M</div>\r\n                          <div\r\n                            className=\"text-sm\"\r\n                            style={{ color: themeEditor.colors.success }}\r\n                          >\r\n                            +15.2%\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          className=\"p-3 rounded-lg\"\r\n                          style={{\r\n                            backgroundColor: themeEditor.colors.surface,\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"text-sm\"\r\n                            style={{ color: themeEditor.colors.textSecondary }}\r\n                          >\r\n                            Orders\r\n                          </div>\r\n                          <div className=\"text-xl font-bold\">1,834</div>\r\n                          <div\r\n                            className=\"text-sm\"\r\n                            style={{ color: themeEditor.colors.success }}\r\n                          >\r\n                            +8.7%\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Preview Button */}\r\n                      <button\r\n                        className=\"w-full p-2 rounded-lg text-white font-medium\"\r\n                        style={{ backgroundColor: themeEditor.colors.primary }}\r\n                      >\r\n                        Primary Action\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t border-gray-200\">\r\n                <button\r\n                  onClick={() => setIsCreating(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={createCustomTheme}\r\n                  disabled={!themeEditor.name.trim()}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n                >\r\n                  <Save className=\"w-4 h-4\" />\r\n                  Create Theme\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeManager\r\n","import { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {\r\n  Globe,\r\n  Plus,\r\n  Edit3,\r\n  Trash2,\r\n  Download,\r\n  Upload,\r\n  Check,\r\n  X,\r\n  Search,\r\n  RefreshCw,\r\n  Copy,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Languages,\r\n} from 'lucide-react'\r\n\r\nconst LanguageManager = () => {\r\n  const [languages, setLanguages] = useState([\r\n    {\r\n      code: 'en',\r\n      name: 'English',\r\n      nativeName: 'English',\r\n      flag: '🇺🇸',\r\n      isDefault: true,\r\n      isActive: true,\r\n      progress: 100,\r\n      lastUpdated: '2024-01-20',\r\n      translationCount: 1247,\r\n    },\r\n    {\r\n      code: 'ar',\r\n      name: 'Arabic',\r\n      nativeName: 'العربية',\r\n      flag: '🇸🇦',\r\n      isDefault: false,\r\n      isActive: true,\r\n      progress: 95,\r\n      direction: 'rtl',\r\n      lastUpdated: '2024-01-18',\r\n      translationCount: 1185,\r\n    },\r\n    {\r\n      code: 'hi',\r\n      name: 'Hindi',\r\n      nativeName: 'हिन्दी',\r\n      flag: '🇮🇳',\r\n      isDefault: false,\r\n      isActive: true,\r\n      progress: 87,\r\n      lastUpdated: '2024-01-15',\r\n      translationCount: 1085,\r\n    },\r\n  ])\r\n\r\n  const [translations, setTranslations] = useState({\r\n    en: {\r\n      'common.hello': 'Hello',\r\n      'common.welcome': 'Welcome',\r\n      'common.save': 'Save',\r\n      'common.cancel': 'Cancel',\r\n      'common.delete': 'Delete',\r\n      'admin.dashboard': 'Dashboard',\r\n      'admin.products': 'Products',\r\n      'admin.orders': 'Orders',\r\n      'admin.customers': 'Customers',\r\n      'admin.settings': 'Settings',\r\n    },\r\n    ar: {\r\n      'common.hello': 'مرحبا',\r\n      'common.welcome': 'أهلا وسهلا',\r\n      'common.save': 'حفظ',\r\n      'common.cancel': 'إلغاء',\r\n      'common.delete': 'حذف',\r\n      'admin.dashboard': 'لوحة التحكم',\r\n      'admin.products': 'المنتجات',\r\n      'admin.orders': 'الطلبات',\r\n      'admin.customers': 'العملاء',\r\n      'admin.settings': 'الإعدادات',\r\n    },\r\n    hi: {\r\n      'common.hello': 'नमस्ते',\r\n      'common.welcome': 'स्वागत है',\r\n      'common.save': 'सहेजें',\r\n      'common.cancel': 'रद्द करें',\r\n      'common.delete': 'हटाएं',\r\n      'admin.dashboard': 'डैशबोर्ड',\r\n      'admin.products': 'उत्पाद',\r\n      'admin.orders': 'आदेश',\r\n      'admin.customers': 'ग्राहक',\r\n      'admin.settings': 'सेटिंग्स',\r\n    },\r\n  })\r\n\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en')\r\n  const [editingKey, setEditingKey] = useState(null)\r\n  const [editValue, setEditValue] = useState('')\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [showAddLanguage, setShowAddLanguage] = useState(false)\r\n  const [newLanguage, setNewLanguage] = useState({\r\n    code: '',\r\n    name: '',\r\n    nativeName: '',\r\n    flag: '',\r\n    direction: 'ltr',\r\n  })\r\n\r\n  const availableLanguages = [\r\n    { code: 'es', name: 'Spanish', nativeName: 'Español', flag: '🇪🇸' },\r\n    { code: 'fr', name: 'French', nativeName: 'Français', flag: '🇫🇷' },\r\n    { code: 'de', name: 'German', nativeName: 'Deutsch', flag: '🇩🇪' },\r\n    { code: 'it', name: 'Italian', nativeName: 'Italiano', flag: '🇮🇹' },\r\n    { code: 'pt', name: 'Portuguese', nativeName: 'Português', flag: '🇵🇹' },\r\n    { code: 'ru', name: 'Russian', nativeName: 'Русский', flag: '🇷🇺' },\r\n    { code: 'ja', name: 'Japanese', nativeName: '日本語', flag: '🇯🇵' },\r\n    { code: 'ko', name: 'Korean', nativeName: '한국어', flag: '🇰🇷' },\r\n    { code: 'zh', name: 'Chinese', nativeName: '中文', flag: '🇨🇳' },\r\n    {\r\n      code: 'ur',\r\n      name: 'Urdu',\r\n      nativeName: 'اردو',\r\n      flag: '🇵🇰',\r\n      direction: 'rtl',\r\n    },\r\n  ]\r\n\r\n  const filteredTranslations = Object.entries(\r\n    translations[selectedLanguage] || {}\r\n  ).filter(\r\n    ([key, value]) =>\r\n      key.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      value.toLowerCase().includes(searchQuery.toLowerCase())\r\n  )\r\n\r\n  const getMissingTranslations = langCode => {\r\n    const englishKeys = Object.keys(translations.en || {})\r\n    const langKeys = Object.keys(translations[langCode] || {})\r\n    return englishKeys.filter(key => !langKeys.includes(key))\r\n  }\r\n\r\n  const addLanguage = () => {\r\n    if (!newLanguage.code || !newLanguage.name) return\r\n\r\n    const language = {\r\n      ...newLanguage,\r\n      isDefault: false,\r\n      isActive: true,\r\n      progress: 0,\r\n      lastUpdated: new Date().toISOString().split('T')[0],\r\n      translationCount: 0,\r\n    }\r\n\r\n    setLanguages(prev => [...prev, language])\r\n    setTranslations(prev => ({ ...prev, [newLanguage.code]: {} }))\r\n    setNewLanguage({\r\n      code: '',\r\n      name: '',\r\n      nativeName: '',\r\n      flag: '',\r\n      direction: 'ltr',\r\n    })\r\n    setShowAddLanguage(false)\r\n  }\r\n\r\n  const removeLanguage = langCode => {\r\n    if (langCode === 'en') return // Can't remove default language\r\n\r\n    setLanguages(prev => prev.filter(lang => lang.code !== langCode))\r\n    setTranslations(prev => {\r\n      const updated = { ...prev }\r\n      delete updated[langCode]\r\n      return updated\r\n    })\r\n\r\n    if (selectedLanguage === langCode) {\r\n      setSelectedLanguage('en')\r\n    }\r\n  }\r\n\r\n  const startEditing = (key, value) => {\r\n    setEditingKey(key)\r\n    setEditValue(value)\r\n  }\r\n\r\n  const saveTranslation = () => {\r\n    if (!editingKey) return\r\n\r\n    setTranslations(prev => ({\r\n      ...prev,\r\n      [selectedLanguage]: {\r\n        ...prev[selectedLanguage],\r\n        [editingKey]: editValue,\r\n      },\r\n    }))\r\n\r\n    // Update language progress\r\n    const totalKeys = Object.keys(translations.en).length\r\n    const translatedKeys = Object.keys({\r\n      ...translations[selectedLanguage],\r\n      [editingKey]: editValue,\r\n    }).length\r\n    const progress = Math.round((translatedKeys / totalKeys) * 100)\r\n\r\n    setLanguages(prev =>\r\n      prev.map(lang =>\r\n        lang.code === selectedLanguage\r\n          ? {\r\n              ...lang,\r\n              progress,\r\n              translationCount: translatedKeys,\r\n              lastUpdated: new Date().toISOString().split('T')[0],\r\n            }\r\n          : lang\r\n      )\r\n    )\r\n\r\n    setEditingKey(null)\r\n    setEditValue('')\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setEditingKey(null)\r\n    setEditValue('')\r\n  }\r\n\r\n  const exportTranslations = langCode => {\r\n    const data = {\r\n      language: languages.find(l => l.code === langCode),\r\n      translations: translations[langCode],\r\n      exportDate: new Date().toISOString(),\r\n      version: '1.0',\r\n    }\r\n\r\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\r\n      type: 'application/json',\r\n    })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `translations-${langCode}.json`\r\n    a.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  const importTranslations = event => {\r\n    const file = event.target.files[0]\r\n    if (!file) return\r\n\r\n    const reader = new FileReader()\r\n    reader.onload = e => {\r\n      try {\r\n        const data = JSON.parse(e.target.result)\r\n        if (data.language && data.translations) {\r\n          setTranslations(prev => ({\r\n            ...prev,\r\n            [data.language.code]: data.translations,\r\n          }))\r\n\r\n          if (!languages.find(l => l.code === data.language.code)) {\r\n            setLanguages(prev => [...prev, data.language])\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to import translations:', error)\r\n      }\r\n    }\r\n    reader.readAsText(file)\r\n  }\r\n\r\n  const autoTranslate = async langCode => {\r\n    // Simulate auto-translation API call\r\n    const missingKeys = getMissingTranslations(langCode)\r\n    const newTranslations = {}\r\n\r\n    for (const key of missingKeys.slice(0, 5)) {\r\n      // Limit for demo\r\n      // Simulate translation\r\n      newTranslations[key] = `[AUTO] ${translations.en[key]}`\r\n    }\r\n\r\n    setTranslations(prev => ({\r\n      ...prev,\r\n      [langCode]: { ...prev[langCode], ...newTranslations },\r\n    }))\r\n\r\n    // Update progress\r\n    const totalKeys = Object.keys(translations.en).length\r\n    const translatedKeys = Object.keys({\r\n      ...translations[langCode],\r\n      ...newTranslations,\r\n    }).length\r\n    const progress = Math.round((translatedKeys / totalKeys) * 100)\r\n\r\n    setLanguages(prev =>\r\n      prev.map(lang =>\r\n        lang.code === langCode\r\n          ? {\r\n              ...lang,\r\n              progress,\r\n              translationCount: translatedKeys,\r\n              lastUpdated: new Date().toISOString().split('T')[0],\r\n            }\r\n          : lang\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <Languages className=\"w-8 h-8 text-blue-600\" />\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">\r\n              Language Manager\r\n            </h2>\r\n            <p className=\"text-gray-600\">\r\n              Manage translations and multi-language support\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <label className=\"flex items-center gap-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer\">\r\n            <Upload className=\"w-4 h-4\" />\r\n            Import\r\n            <input\r\n              type=\"file\"\r\n              accept=\".json\"\r\n              onChange={importTranslations}\r\n              className=\"hidden\"\r\n            />\r\n          </label>\r\n\r\n          <button\r\n            onClick={() => setShowAddLanguage(true)}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Plus className=\"w-4 h-4\" />\r\n            Add Language\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Language Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {languages.map(language => (\r\n          <motion.div\r\n            key={language.code}\r\n            className={`bg-white rounded-lg shadow-sm border p-4 cursor-pointer transition-all ${\r\n              selectedLanguage === language.code\r\n                ? 'ring-2 ring-blue-500 border-blue-200'\r\n                : 'hover:border-gray-300'\r\n            }`}\r\n            onClick={() => setSelectedLanguage(language.code)}\r\n            whileHover={{ scale: 1.02 }}\r\n          >\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <span className=\"text-2xl\">{language.flag}</span>\r\n                <div>\r\n                  <h3 className=\"font-medium text-gray-900\">{language.name}</h3>\r\n                  <p className=\"text-sm text-gray-600\">{language.nativeName}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-1\">\r\n                {language.isDefault && (\r\n                  <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs rounded-full\">\r\n                    Default\r\n                  </span>\r\n                )}\r\n                {language.isActive ? (\r\n                  <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n                ) : (\r\n                  <AlertCircle className=\"w-4 h-4 text-gray-400\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600\">Progress</span>\r\n                <span className=\"font-medium\">{language.progress}%</span>\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${language.progress}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between text-xs text-gray-500\">\r\n                <span>{language.translationCount} translations</span>\r\n                <span>Updated {language.lastUpdated}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2 mt-3 pt-3 border-t border-gray-100\">\r\n              <button\r\n                onClick={e => {\r\n                  e.stopPropagation()\r\n                  exportTranslations(language.code)\r\n                }}\r\n                className=\"flex items-center gap-1 px-2 py-1 text-xs text-gray-600 hover:text-gray-800 transition-colors\"\r\n              >\r\n                <Download className=\"w-3 h-3\" />\r\n                Export\r\n              </button>\r\n\r\n              {language.progress < 100 && (\r\n                <button\r\n                  onClick={e => {\r\n                    e.stopPropagation()\r\n                    autoTranslate(language.code)\r\n                  }}\r\n                  className=\"flex items-center gap-1 px-2 py-1 text-xs text-blue-600 hover:text-blue-800 transition-colors\"\r\n                >\r\n                  <RefreshCw className=\"w-3 h-3\" />\r\n                  Auto-translate\r\n                </button>\r\n              )}\r\n\r\n              {!language.isDefault && (\r\n                <button\r\n                  onClick={e => {\r\n                    e.stopPropagation()\r\n                    removeLanguage(language.code)\r\n                  }}\r\n                  className=\"flex items-center gap-1 px-2 py-1 text-xs text-red-600 hover:text-red-800 transition-colors\"\r\n                >\r\n                  <Trash2 className=\"w-3 h-3\" />\r\n                  Remove\r\n                </button>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Translation Editor */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <span className=\"text-2xl\">\r\n                {languages.find(l => l.code === selectedLanguage)?.flag}\r\n              </span>\r\n              <div>\r\n                <h3 className=\"font-medium text-gray-900\">\r\n                  {languages.find(l => l.code === selectedLanguage)?.name}{' '}\r\n                  Translations\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {filteredTranslations.length} of{' '}\r\n                  {Object.keys(translations.en).length} translations\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search translations...\"\r\n                  value={searchQuery}\r\n                  onChange={e => setSearchQuery(e.target.value)}\r\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-h-96 overflow-y-auto\">\r\n          {filteredTranslations.map(([key, value]) => (\r\n            <div\r\n              key={key}\r\n              className=\"p-4 border-b border-gray-100 hover:bg-gray-50 transition-colors\"\r\n            >\r\n              {editingKey === key ? (\r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Translation Key\r\n                    </label>\r\n                    <div className=\"text-sm text-gray-600 bg-gray-100 p-2 rounded\">\r\n                      {key}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Original (English)\r\n                    </label>\r\n                    <div className=\"text-sm text-gray-600 bg-gray-100 p-2 rounded\">\r\n                      {translations.en[key]}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Translation (\r\n                      {languages.find(l => l.code === selectedLanguage)?.name})\r\n                    </label>\r\n                    <textarea\r\n                      value={editValue}\r\n                      onChange={e => setEditValue(e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      rows={3}\r\n                      dir={\r\n                        languages.find(l => l.code === selectedLanguage)\r\n                          ?.direction || 'ltr'\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      onClick={saveTranslation}\r\n                      className=\"flex items-center gap-2 px-3 py-1.5 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      <Check className=\"w-4 h-4\" />\r\n                      Save\r\n                    </button>\r\n                    <button\r\n                      onClick={cancelEditing}\r\n                      className=\"flex items-center gap-2 px-3 py-1.5 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                    >\r\n                      <X className=\"w-4 h-4\" />\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1 space-y-2\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">\r\n                      {key}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">\r\n                      {translations.en[key]}\r\n                    </div>\r\n                    <div\r\n                      className=\"text-sm text-gray-900 font-medium\"\r\n                      dir={\r\n                        languages.find(l => l.code === selectedLanguage)\r\n                          ?.direction || 'ltr'\r\n                      }\r\n                    >\r\n                      {value || (\r\n                        <span className=\"text-red-500 italic\">\r\n                          Missing translation\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <button\r\n                      onClick={() => navigator.clipboard.writeText(value)}\r\n                      className=\"p-1.5 hover:bg-gray-200 rounded transition-colors\"\r\n                      title=\"Copy translation\"\r\n                    >\r\n                      <Copy className=\"w-4 h-4 text-gray-500\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => startEditing(key, value || '')}\r\n                      className=\"p-1.5 hover:bg-gray-200 rounded transition-colors\"\r\n                      title=\"Edit translation\"\r\n                    >\r\n                      <Edit3 className=\"w-4 h-4 text-gray-500\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {filteredTranslations.length === 0 && (\r\n          <div className=\"p-8 text-center text-gray-500\">\r\n            <Globe className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n            <p>No translations found matching your search</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Add Language Modal */}\r\n      <AnimatePresence>\r\n        {showAddLanguage && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n          >\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.95 }}\r\n              className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\"\r\n            >\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900\">\r\n                  Add New Language\r\n                </h3>\r\n                <button\r\n                  onClick={() => setShowAddLanguage(false)}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Select Language\r\n                  </label>\r\n                  <select\r\n                    value={newLanguage.code}\r\n                    onChange={e => {\r\n                      const selected = availableLanguages.find(\r\n                        l => l.code === e.target.value\r\n                      )\r\n                      if (selected) {\r\n                        setNewLanguage(selected)\r\n                      }\r\n                    }}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"\">Choose a language</option>\r\n                    {availableLanguages\r\n                      .filter(\r\n                        lang => !languages.find(l => l.code === lang.code)\r\n                      )\r\n                      .map(lang => (\r\n                        <option key={lang.code} value={lang.code}>\r\n                          {lang.flag} {lang.name} ({lang.nativeName})\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n\r\n                {newLanguage.code && (\r\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                      <span className=\"text-2xl\">{newLanguage.flag}</span>\r\n                      <div>\r\n                        <div className=\"font-medium\">{newLanguage.name}</div>\r\n                        <div className=\"text-sm text-gray-600\">\r\n                          {newLanguage.nativeName}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {newLanguage.direction === 'rtl' && (\r\n                      <div className=\"text-xs text-orange-600 bg-orange-100 px-2 py-1 rounded\">\r\n                        Right-to-left language\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-3 mt-6\">\r\n                <button\r\n                  onClick={() => setShowAddLanguage(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={addLanguage}\r\n                  disabled={!newLanguage.code}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n                >\r\n                  Add Language\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageManager\r\n","import { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  LayoutDashboard,\n  Package,\n  Palette,\n  Users,\n  Settings,\n  LogOut,\n  Menu,\n  X,\n  Search,\n  Shield,\n  FileText,\n  Warehouse,\n  Truck,\n  BarChart3,\n  Brain,\n  MapPin,\n} from 'lucide-react'\nimport { useI18n } from '../../../contexts/I18nContext.jsx'\nimport { useSegment } from '../../../contexts/SegmentContext.jsx'\nimport { useAuth } from '../../../contexts/AuthContext.jsx'\n\nimport AdminRoute from '../../../components/common/AdminRoute.jsx'\nimport NotificationBell from '../../../components/ui/NotificationBell.jsx'\nimport {\n  AdminDashboard,\n  ProductCatalog,\n  ThemeEditor,\n  CustomizationRequests,\n  UserManagement,\n  IndiaAnalytics,\n  RecommendationManagement,\n} from './index.js'\nimport RoleManagement from './RoleManagement.jsx'\nimport AuditLogs from './AuditLogs.jsx'\nimport InventoryManagement from './InventoryManagement.jsx'\nimport ShippingManagement from './ShippingManagement.jsx'\nimport SessionManager from './Security/SessionManager.jsx'\nimport AdminActivityPage from './AdminActivityPage.jsx'\nimport IntelligenceDashboard from './IntelligenceDashboard.jsx'\nimport AdvancedSettings from './AdvancedSettings.jsx'\n\nconst ADMIN_MENU = [\n  {\n    id: 'dashboard',\n    label: 'admin.dashboard',\n    icon: LayoutDashboard,\n    component: AdminDashboard,\n  },\n  {\n    id: 'india-analytics',\n    label: 'admin.indiaAnalytics',\n    icon: MapPin,\n    component: IndiaAnalytics,\n  },\n  {\n    id: 'products',\n    label: 'admin.products',\n    icon: Package,\n    component: ProductCatalog,\n  },\n  {\n    id: 'recommendations',\n    label: 'admin.recommendations',\n    icon: Brain,\n    component: RecommendationManagement,\n  },\n  {\n    id: 'inventory',\n    label: 'admin.inventory',\n    icon: Warehouse,\n    component: InventoryManagement,\n  },\n  {\n    id: 'shipping',\n    label: 'admin.shipping',\n    icon: Truck,\n    component: ShippingManagement,\n  },\n  {\n    id: 'requests',\n    label: 'admin.customizationRequests',\n    icon: Settings,\n    component: CustomizationRequests,\n  },\n  {\n    id: 'theme',\n    label: 'admin.themeEditor',\n    icon: Palette,\n    component: ThemeEditor,\n  },\n  {\n    id: 'users',\n    label: 'admin.userManagement',\n    icon: Users,\n    component: UserManagement,\n  },\n  {\n    id: 'roles',\n    label: 'admin.roleManagement',\n    icon: Shield,\n    component: RoleManagement,\n  },\n  {\n    id: 'audit',\n    label: 'admin.auditLogs',\n    icon: FileText,\n    component: AuditLogs,\n  },\n  {\n    id: 'activity',\n    label: 'admin.activityLog',\n    icon: BarChart3,\n    component: AdminActivityPage,\n  },\n  {\n    id: 'intelligence',\n    label: 'admin.intelligence',\n    icon: Brain,\n    component: IntelligenceDashboard,\n  },\n  {\n    id: 'sessions',\n    label: 'admin.sessionManager',\n    icon: Shield,\n    component: SessionManager,\n  },\n  {\n    id: 'settings',\n    label: 'admin.settings',\n    icon: Settings,\n    component: AdvancedSettings,\n  },\n]\n\nconst AdminPanelContent = () => {\n  const [activeSection, setActiveSection] = useState('dashboard')\n  const [sidebarOpen, setSidebarOpen] = useState(true)\n  const [searchQuery, setSearchQuery] = useState('')\n  const { logout } = useAuth()\n  const { t, isRTL } = useI18n()\n  const { theme } = useSegment()\n\n  const ActiveComponent =\n    ADMIN_MENU.find(item => item.id === activeSection)?.component ||\n    AdminDashboard\n\n  const handleLogout = () => {\n    logout()\n    // Navigation will be handled by the AdminRoute component\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background flex\">\n      {/* Sidebar */}\n      <AnimatePresence>\n        {sidebarOpen && (\n          <motion.aside\n            initial={{ x: isRTL ? 300 : -300, opacity: 0 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: isRTL ? 300 : -300, opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className={`w-64 bg-surface border-border shadow-lg flex flex-col ${\n              isRTL ? 'border-l' : 'border-r'\n            }`}\n          >\n            {/* Logo */}\n            <div className=\"p-6 border-b border-border\">\n              <div\n                className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <div\n                  className=\"w-8 h-8 rounded-lg flex items-center justify-center text-white font-bold\"\n                  style={{ backgroundColor: theme.colors.primary }}\n                >\n                  I\n                </div>\n                <div>\n                  <h1 className=\"font-bold text-foreground\">IVOLEX</h1>\n                  <p className=\"text-xs text-foreground/60\">\n                    {t('admin.panel', 'Admin Panel')}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <nav className=\"flex-1 p-4\">\n              <div className=\"space-y-2\">\n                {ADMIN_MENU.map(item => {\n                  const Icon = item.icon\n                  const isActive = activeSection === item.id\n\n                  return (\n                    <motion.button\n                      key={item.id}\n                      onClick={() => setActiveSection(item.id)}\n                      className={`w-full flex items-center gap-3 px-3 py-2.5 rounded-lg transition-all ${\n                        isRTL ? 'flex-row-reverse text-right' : 'text-left'\n                      } ${\n                        isActive\n                          ? 'text-white shadow-lg'\n                          : 'text-foreground/70 hover:text-foreground hover:bg-background/50'\n                      }`}\n                      style={\n                        isActive\n                          ? { backgroundColor: theme.colors.primary }\n                          : {}\n                      }\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                    >\n                      <Icon size={20} />\n                      <span className=\"font-medium\">\n                        {t(item.label, item.label.split('.')[1])}\n                      </span>\n                    </motion.button>\n                  )\n                })}\n              </div>\n            </nav>\n\n            {/* User Section */}\n            <div className=\"p-4 border-t border-border\">\n              <button\n                onClick={handleLogout}\n                className={`w-full flex items-center gap-3 px-3 py-2.5 text-foreground/70 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all ${\n                  isRTL ? 'flex-row-reverse text-right' : 'text-left'\n                }`}\n              >\n                <LogOut size={20} />\n                <span className=\"font-medium\">\n                  {t('admin.logout', 'Logout')}\n                </span>\n              </button>\n            </div>\n          </motion.aside>\n        )}\n      </AnimatePresence>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Top Bar */}\n        <header className=\"bg-surface border-b border-border px-6 py-4\">\n          <div\n            className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div\n              className={`flex items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n            >\n              <button\n                onClick={() => setSidebarOpen(!sidebarOpen)}\n                className=\"p-2 hover:bg-background rounded-lg transition-colors\"\n              >\n                {sidebarOpen ? <X size={20} /> : <Menu size={20} />}\n              </button>\n\n              <h2 className=\"text-xl font-semibold text-foreground\">\n                {t(\n                  ADMIN_MENU.find(item => item.id === activeSection)?.label ||\n                    'admin.dashboard',\n                  'Dashboard'\n                )}\n              </h2>\n            </div>\n\n            <div\n              className={`flex items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n            >\n              {/* Search */}\n              <div className=\"relative\">\n                <Search\n                  className={`absolute top-1/2 transform -translate-y-1/2 text-foreground/40 ${\n                    isRTL ? 'right-3' : 'left-3'\n                  }`}\n                  size={16}\n                />\n                <input\n                  type=\"text\"\n                  placeholder={t('admin.search', 'Search...')}\n                  value={searchQuery}\n                  onChange={e => setSearchQuery(e.target.value)}\n                  className={`bg-background border border-border rounded-lg text-foreground placeholder-foreground/40 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary ${\n                    isRTL ? 'pr-10 pl-4 text-right' : 'pl-10 pr-4 text-left'\n                  } py-2 w-64`}\n                />\n              </div>\n\n              {/* Notifications */}\n              <NotificationBell />\n\n              {/* Profile */}\n              <div className=\"w-8 h-8 bg-gradient-to-br from-primary to-secondary rounded-full\"></div>\n            </div>\n          </div>\n        </header>\n\n        {/* Page Content */}\n        <main className=\"flex-1 p-6 overflow-auto\">\n          <motion.div\n            key={activeSection}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n          >\n            <ActiveComponent />\n          </motion.div>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nconst AdminPanel = () => {\n  return (\n    <AdminRoute>\n      <AdminPanelContent />\n    </AdminRoute>\n  )\n}\n\nexport default AdminPanel\n","import { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Package,\n  AlertTriangle,\n  TrendingUp,\n  TrendingDown,\n  Plus,\n  Minus,\n  Search,\n  Bell,\n  Settings,\n  Edit3,\n  Check,\n  X,\n  RefreshCw,\n  Download,\n} from 'lucide-react'\nimport { useInventory } from '../../../contexts/InventoryContext'\n\nconst InventoryManagement = () => {\n  const {\n    inventory,\n    alerts,\n    settings,\n    loading,\n    updateStock,\n    acknowledgeAlert,\n    clearAlerts,\n    updateSettings,\n    getStockStatus,\n    getInventorySummary,\n  } = useInventory()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const [filterType, setFilterType] = useState('all')\n  const [showSettings, setShowSettings] = useState(false)\n  const [editingStock, setEditingStock] = useState(null)\n  const [stockInput, setStockInput] = useState('')\n\n  // Mock products data - in real app, this would come from API\n  const [products] = useState(() => {\n    const stored = localStorage.getItem('products')\n    return stored ? JSON.parse(stored) : []\n  })\n\n  const summary = getInventorySummary()\n\n  // Filter products based on search and filter type\n  const filteredProducts = products.filter(product => {\n    const matchesSearch =\n      product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      product.id.toLowerCase().includes(searchQuery.toLowerCase())\n\n    if (!matchesSearch) return false\n\n    const stockStatus = getStockStatus(product.id)\n\n    switch (filterType) {\n      case 'out_of_stock':\n        return stockStatus.status === 'out_of_stock'\n      case 'critical':\n        return stockStatus.status === 'critical'\n      case 'low':\n        return stockStatus.status === 'low'\n      case 'in_stock':\n        return stockStatus.status === 'in_stock'\n      default:\n        return true\n    }\n  })\n\n  // Handle stock update\n  const handleStockUpdate = (productId, field, value) => {\n    updateStock(productId, { [field]: Math.max(0, parseInt(value) || 0) })\n  }\n\n  // Handle quick stock adjustment\n  const handleQuickAdjust = (productId, adjustment) => {\n    const newStock = Math.max(\n      0,\n      (inventory[productId]?.stock || 0) + adjustment\n    )\n    updateStock(productId, { stock: newStock })\n  }\n\n  // Get stock status color\n  const getStatusColor = status => {\n    switch (status) {\n      case 'out_of_stock':\n        return 'text-red-500'\n      case 'critical':\n        return 'text-orange-500'\n      case 'low':\n        return 'text-yellow-500'\n      case 'in_stock':\n        return 'text-green-500'\n      default:\n        return 'text-gray-500'\n    }\n  }\n\n  // Get stock status badge\n  const getStatusBadge = status => {\n    const colors = {\n      out_of_stock: 'bg-red-100 text-red-800',\n      critical: 'bg-orange-100 text-orange-800',\n      low: 'bg-yellow-100 text-yellow-800',\n      in_stock: 'bg-green-100 text-green-800',\n    }\n\n    const labels = {\n      out_of_stock: 'Out of Stock',\n      critical: 'Critical',\n      low: 'Low Stock',\n      in_stock: 'In Stock',\n    }\n\n    return (\n      <span\n        className={`px-2 py-1 rounded-full text-xs font-medium ${colors[status] || 'bg-gray-100 text-gray-800'}`}\n      >\n        {labels[status] || 'Unknown'}\n      </span>\n    )\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <RefreshCw className=\"w-8 h-8 animate-spin mx-auto mb-4 text-blue-500\" />\n          <p className=\"text-gray-600\">Loading inventory...</p>\n        </div>\n      </div>\n    )\n  }\n\n  // Theme classes mapping\n  const themeClasses = {\n    background: 'bg-gray-50',\n    text: 'text-gray-900',\n    textSecondary: 'text-gray-600',\n    cardBackground: 'bg-white',\n    border: 'border border-gray-200',\n    borderHover: 'border-gray-300',\n    accent: 'bg-blue-600',\n  }\n\n  return (\n    <div className={`min-h-screen p-6 ${themeClasses.background}`}>\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className={`text-3xl font-bold ${themeClasses.text}`}>\n                Inventory Management\n              </h1>\n              <p className={`text-sm ${themeClasses.textSecondary} mt-1`}>\n                Monitor and manage your product inventory levels\n              </p>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={() => setShowSettings(true)}\n                className={`p-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} hover:${themeClasses.borderHover} transition-colors`}\n              >\n                <Settings className=\"w-5 h-5\" />\n              </button>\n              <button\n                className={`px-4 py-2 rounded-lg ${themeClasses.accent} text-white hover:opacity-90 transition-opacity`}\n              >\n                <Download className=\"w-4 h-4 inline mr-2\" />\n                Export Report\n              </button>\n            </div>\n          </div>\n\n          {/* Alerts Section */}\n          <AnimatePresence>\n            {alerts.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0 }}\n                className={`mb-6 p-4 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center gap-2\">\n                    <Bell className=\"w-5 h-5 text-red-500\" />\n                    <span className={`font-medium ${themeClasses.text}`}>\n                      Active Alerts ({alerts.length})\n                    </span>\n                  </div>\n                  <button\n                    onClick={clearAlerts}\n                    className=\"text-sm text-blue-500 hover:text-blue-600 transition-colors\"\n                  >\n                    Clear All\n                  </button>\n                </div>\n                <div className=\"space-y-2\">\n                  {alerts.slice(0, 3).map(alert => (\n                    <div\n                      key={alert.id}\n                      className={`flex items-center justify-between p-3 rounded-lg ${\n                        alert.type === 'critical'\n                          ? 'bg-red-50 border border-red-200'\n                          : 'bg-yellow-50 border border-yellow-200'\n                      }`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <AlertTriangle\n                          className={`w-4 h-4 ${alert.type === 'critical' ? 'text-red-500' : 'text-yellow-500'}`}\n                        />\n                        <span className=\"text-sm font-medium\">\n                          {alert.message}\n                        </span>\n                      </div>\n                      <button\n                        onClick={() => acknowledgeAlert(alert.id)}\n                        className=\"text-sm text-gray-500 hover:text-gray-700 transition-colors\"\n                      >\n                        <Check className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Summary Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div\n              className={`p-4 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <Package className=\"w-8 h-8 text-blue-500\" />\n                <div>\n                  <p className={`text-sm ${themeClasses.textSecondary}`}>\n                    Total Products\n                  </p>\n                  <p className={`text-xl font-bold ${themeClasses.text}`}>\n                    {summary.totalProducts}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div\n              className={`p-4 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <TrendingDown className=\"w-8 h-8 text-red-500\" />\n                <div>\n                  <p className={`text-sm ${themeClasses.textSecondary}`}>\n                    Out of Stock\n                  </p>\n                  <p className={`text-xl font-bold ${themeClasses.text}`}>\n                    {summary.outOfStock}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div\n              className={`p-4 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <AlertTriangle className=\"w-8 h-8 text-orange-500\" />\n                <div>\n                  <p className={`text-sm ${themeClasses.textSecondary}`}>\n                    Low Stock\n                  </p>\n                  <p className={`text-xl font-bold ${themeClasses.text}`}>\n                    {summary.criticalStock + summary.lowStock}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div\n              className={`p-4 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <TrendingUp className=\"w-8 h-8 text-green-500\" />\n                <div>\n                  <p className={`text-sm ${themeClasses.textSecondary}`}>\n                    In Stock\n                  </p>\n                  <p className={`text-xl font-bold ${themeClasses.text}`}>\n                    {summary.inStock}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n                className={`w-full pl-10 pr-4 py-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} focus:${themeClasses.borderHover} outline-none transition-colors`}\n              />\n            </div>\n          </div>\n          <select\n            value={filterType}\n            onChange={e => setFilterType(e.target.value)}\n            className={`px-4 py-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} focus:${themeClasses.borderHover} outline-none transition-colors`}\n          >\n            <option value=\"all\">All Products</option>\n            <option value=\"out_of_stock\">Out of Stock</option>\n            <option value=\"critical\">Critical Stock</option>\n            <option value=\"low\">Low Stock</option>\n            <option value=\"in_stock\">In Stock</option>\n          </select>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredProducts.map(product => {\n            const stockInfo = inventory[product.id] || {\n              stock: 0,\n              reserved: 0,\n              incoming: 0,\n            }\n            const stockStatus = getStockStatus(product.id)\n            const available = stockInfo.stock - stockInfo.reserved\n\n            return (\n              <motion.div\n                key={product.id}\n                layout\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                className={`p-6 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} hover:${themeClasses.borderHover} transition-all`}\n              >\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex-1\">\n                    <h3 className={`font-semibold ${themeClasses.text} mb-1`}>\n                      {product.name}\n                    </h3>\n                    <p className={`text-sm ${themeClasses.textSecondary} mb-2`}>\n                      ID: {product.id}\n                    </p>\n                    {getStatusBadge(stockStatus.status)}\n                  </div>\n                  <img\n                    src={product.image}\n                    alt={product.name}\n                    className=\"w-16 h-16 object-cover rounded-lg\"\n                  />\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className={`text-sm ${themeClasses.textSecondary}`}>\n                      Available:\n                    </span>\n                    <span\n                      className={`font-semibold ${getStatusColor(stockStatus.status)}`}\n                    >\n                      {available}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className={`text-sm ${themeClasses.textSecondary}`}>\n                      Reserved:\n                    </span>\n                    <span className={`font-medium ${themeClasses.text}`}>\n                      {stockInfo.reserved}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className={`text-sm ${themeClasses.textSecondary}`}>\n                      Incoming:\n                    </span>\n                    <span className={`font-medium ${themeClasses.text}`}>\n                      {stockInfo.incoming}\n                    </span>\n                  </div>\n\n                  {editingStock === product.id ? (\n                    <div className=\"flex items-center gap-2 pt-3 border-t\">\n                      <input\n                        type=\"number\"\n                        value={stockInput}\n                        onChange={e => setStockInput(e.target.value)}\n                        className={`flex-1 px-2 py-1 text-sm rounded ${themeClasses.cardBackground} ${themeClasses.border} focus:${themeClasses.borderHover} outline-none`}\n                        min=\"0\"\n                      />\n                      <button\n                        onClick={() => {\n                          handleStockUpdate(product.id, 'stock', stockInput)\n                          setEditingStock(null)\n                          setStockInput('')\n                        }}\n                        className=\"p-1 text-green-500 hover:text-green-600 transition-colors\"\n                      >\n                        <Check className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditingStock(null)\n                          setStockInput('')\n                        }}\n                        className=\"p-1 text-red-500 hover:text-red-600 transition-colors\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-2 pt-3 border-t\">\n                      <button\n                        onClick={() => handleQuickAdjust(product.id, -1)}\n                        className=\"p-1 text-red-500 hover:text-red-600 transition-colors\"\n                      >\n                        <Minus className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditingStock(product.id)\n                          setStockInput(stockInfo.stock.toString())\n                        }}\n                        className=\"flex-1 px-2 py-1 text-center text-sm font-medium hover:bg-gray-50 rounded transition-colors\"\n                      >\n                        <Edit3 className=\"w-4 h-4 inline mr-1\" />\n                        {stockInfo.stock}\n                      </button>\n                      <button\n                        onClick={() => handleQuickAdjust(product.id, 1)}\n                        className=\"p-1 text-green-500 hover:text-green-600 transition-colors\"\n                      >\n                        <Plus className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </motion.div>\n            )\n          })}\n        </div>\n\n        {filteredProducts.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Package className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n            <h3 className={`text-lg font-medium ${themeClasses.text} mb-2`}>\n              No products found\n            </h3>\n            <p className={`${themeClasses.textSecondary}`}>\n              Try adjusting your search or filter criteria\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Settings Modal */}\n      <AnimatePresence>\n        {showSettings && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n            onClick={() => setShowSettings(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.95, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.95, opacity: 0 }}\n              onClick={e => e.stopPropagation()}\n              className={`w-full max-w-md p-6 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border}`}\n            >\n              <h3 className={`text-lg font-semibold ${themeClasses.text} mb-4`}>\n                Inventory Settings\n              </h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label\n                    className={`block text-sm font-medium ${themeClasses.text} mb-2`}\n                  >\n                    Low Stock Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={settings.lowStockThreshold}\n                    onChange={e =>\n                      updateSettings({\n                        lowStockThreshold: parseInt(e.target.value) || 0,\n                      })\n                    }\n                    className={`w-full px-3 py-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} focus:${themeClasses.borderHover} outline-none`}\n                    min=\"1\"\n                  />\n                </div>\n\n                <div>\n                  <label\n                    className={`block text-sm font-medium ${themeClasses.text} mb-2`}\n                  >\n                    Critical Stock Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={settings.criticalStockThreshold}\n                    onChange={e =>\n                      updateSettings({\n                        criticalStockThreshold: parseInt(e.target.value) || 0,\n                      })\n                    }\n                    className={`w-full px-3 py-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} focus:${themeClasses.borderHover} outline-none`}\n                    min=\"0\"\n                  />\n                </div>\n\n                <div className=\"flex items-center gap-3\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"enableAlerts\"\n                    checked={settings.enableAlerts}\n                    onChange={e =>\n                      updateSettings({ enableAlerts: e.target.checked })\n                    }\n                    className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                  />\n                  <label\n                    htmlFor=\"enableAlerts\"\n                    className={`text-sm ${themeClasses.text}`}\n                  >\n                    Enable inventory alerts\n                  </label>\n                </div>\n\n                <div className=\"flex items-center gap-3\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"autoReorder\"\n                    checked={settings.autoReorderEnabled}\n                    onChange={e =>\n                      updateSettings({ autoReorderEnabled: e.target.checked })\n                    }\n                    className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                  />\n                  <label\n                    htmlFor=\"autoReorder\"\n                    className={`text-sm ${themeClasses.text}`}\n                  >\n                    Enable auto-reorder alerts\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3 mt-6\">\n                <button\n                  onClick={() => setShowSettings(false)}\n                  className={`flex-1 px-4 py-2 rounded-lg ${themeClasses.cardBackground} ${themeClasses.border} hover:${themeClasses.borderHover} transition-colors`}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => setShowSettings(false)}\n                  className={`flex-1 px-4 py-2 rounded-lg ${themeClasses.accent} text-white hover:opacity-90 transition-opacity`}\n                >\n                  Save Changes\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default InventoryManagement\n","import { useState } from 'react'\r\nimport {\r\n  Truck,\r\n  Package,\r\n  MapPin,\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit3,\r\n  Eye,\r\n  Settings,\r\n  Download,\r\n  CheckCircle,\r\n  Navigation,\r\n} from 'lucide-react'\r\n\r\nconst ShippingManagement = () => {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  // Mock shipment data\r\n  const [shipments] = useState([\r\n    {\r\n      id: 'SHIP_001',\r\n      orderId: 'ORD_001',\r\n      trackingNumber: 'TRK1234567890ABC',\r\n      customer: 'Ahmed Al-Rashid',\r\n      status: 'in_transit',\r\n      method: 'Express Shipping',\r\n      provider: 'SMSA Express',\r\n      origin: 'IVOLEX Warehouse - Riyadh',\r\n      destination: 'Jeddah, Saudi Arabia',\r\n      createdAt: '2024-01-15T10:00:00Z',\r\n      estimatedDelivery: '2024-01-18T15:00:00Z',\r\n      value: 1299.99,\r\n    },\r\n    {\r\n      id: 'SHIP_002',\r\n      orderId: 'ORD_002',\r\n      trackingNumber: 'TRK0987654321XYZ',\r\n      customer: 'Sarah Johnson',\r\n      status: 'delivered',\r\n      method: 'Standard Shipping',\r\n      provider: 'Saudi Post',\r\n      origin: 'IVOLEX Warehouse - Riyadh',\r\n      destination: 'Dammam, Saudi Arabia',\r\n      createdAt: '2024-01-12T14:30:00Z',\r\n      estimatedDelivery: '2024-01-17T12:00:00Z',\r\n      deliveredAt: '2024-01-16T16:45:00Z',\r\n      value: 899.5,\r\n    },\r\n  ])\r\n\r\n  // Get status badge\r\n  const getStatusBadge = status => {\r\n    const statusConfig = {\r\n      pending: { color: 'bg-gray-100 text-gray-800', label: 'Pending' },\r\n      picked_up: { color: 'bg-blue-100 text-blue-800', label: 'Picked Up' },\r\n      in_transit: {\r\n        color: 'bg-yellow-100 text-yellow-800',\r\n        label: 'In Transit',\r\n      },\r\n      out_for_delivery: {\r\n        color: 'bg-orange-100 text-orange-800',\r\n        label: 'Out for Delivery',\r\n      },\r\n      delivered: { color: 'bg-green-100 text-green-800', label: 'Delivered' },\r\n    }\r\n\r\n    const config = statusConfig[status] || statusConfig.pending\r\n\r\n    return (\r\n      <span\r\n        className={`px-2 py-1 rounded-full text-xs font-medium ${config.color}`}\r\n      >\r\n        {config.label}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  // Get status icon\r\n  const getStatusIcon = status => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <Package className=\"w-4 h-4 text-gray-500\" />\r\n      case 'picked_up':\r\n        return <Truck className=\"w-4 h-4 text-blue-500\" />\r\n      case 'in_transit':\r\n        return <Navigation className=\"w-4 h-4 text-yellow-500\" />\r\n      case 'out_for_delivery':\r\n        return <MapPin className=\"w-4 h-4 text-orange-500\" />\r\n      case 'delivered':\r\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />\r\n      default:\r\n        return <Package className=\"w-4 h-4 text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  // Filter shipments\r\n  const filteredShipments = shipments.filter(\r\n    shipment =>\r\n      shipment.trackingNumber\r\n        .toLowerCase()\r\n        .includes(searchQuery.toLowerCase()) ||\r\n      shipment.customer.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      shipment.orderId.toLowerCase().includes(searchQuery.toLowerCase())\r\n  )\r\n\r\n  // Get shipment statistics\r\n  const stats = {\r\n    total: shipments.length,\r\n    pending: shipments.filter(s => s.status === 'pending').length,\r\n    inTransit: shipments.filter(s =>\r\n      ['picked_up', 'in_transit', 'out_for_delivery'].includes(s.status)\r\n    ).length,\r\n    delivered: shipments.filter(s => s.status === 'delivered').length,\r\n    totalValue: shipments.reduce((sum, s) => sum + s.value, 0),\r\n  }\r\n\r\n  const formatDate = dateString => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen py-8 bg-gray-50\">\r\n      <div className=\"max-w-7xl mx-auto px-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">\r\n                Shipping Management\r\n              </h1>\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Manage shipping methods, track shipments, and monitor delivery\r\n                performance\r\n              </p>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <button className=\"px-4 py-2 rounded-lg bg-white border border-gray-300 hover:border-gray-400 transition-colors\">\r\n                <Settings className=\"w-4 h-4 inline mr-2\" />\r\n                Settings\r\n              </button>\r\n              <button className=\"px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors\">\r\n                <Download className=\"w-4 h-4 inline mr-2\" />\r\n                Export Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stats Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n            <div className=\"p-4 rounded-lg bg-white border border-gray-200\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <Package className=\"w-8 h-8 text-blue-500\" />\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Total Shipments</p>\r\n                  <p className=\"text-xl font-bold text-gray-900\">\r\n                    {stats.total}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 rounded-lg bg-white border border-gray-200\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <Truck className=\"w-8 h-8 text-yellow-500\" />\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">In Transit</p>\r\n                  <p className=\"text-xl font-bold text-gray-900\">\r\n                    {stats.inTransit}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 rounded-lg bg-white border border-gray-200\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Delivered</p>\r\n                  <p className=\"text-xl font-bold text-gray-900\">\r\n                    {stats.delivered}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 rounded-lg bg-white border border-gray-200\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <MapPin className=\"w-8 h-8 text-purple-500\" />\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Total Value</p>\r\n                  <p className=\"text-xl font-bold text-gray-900\">\r\n                    ₹{stats.totalValue.toLocaleString()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n          <div className=\"p-6 border-b border-gray-200\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"relative flex-1\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by tracking number, customer, or order ID...\"\r\n                  value={searchQuery}\r\n                  onChange={e => setSearchQuery(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <button className=\"px-4 py-2 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors\">\r\n                <Filter className=\"w-4 h-4\" />\r\n              </button>\r\n              <button className=\"px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors\">\r\n                <Plus className=\"w-4 h-4 inline mr-2\" />\r\n                New Shipment\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Tracking Info\r\n                  </th>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Customer\r\n                  </th>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Route\r\n                  </th>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Value\r\n                  </th>\r\n                  <th className=\"text-left p-4 text-gray-700 font-medium\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredShipments.map(shipment => (\r\n                  <tr\r\n                    key={shipment.id}\r\n                    className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    <td className=\"p-4\">\r\n                      <div>\r\n                        <div className=\"font-medium text-gray-900\">\r\n                          {shipment.trackingNumber}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          Order: {shipment.orderId}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {shipment.provider}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"font-medium text-gray-900\">\r\n                        {shipment.customer}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        {formatDate(shipment.createdAt)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"text-sm text-gray-700\">\r\n                        <div className=\"mb-1\">{shipment.origin}</div>\r\n                        <div className=\"text-gray-400\">↓</div>\r\n                        <div>{shipment.destination}</div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {getStatusIcon(shipment.status)}\r\n                        {getStatusBadge(shipment.status)}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 mt-1\">\r\n                        ETA: {formatDate(shipment.estimatedDelivery)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"font-medium text-gray-900\">\r\n                        ₹{shipment.value.toLocaleString()}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <button className=\"p-2 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors\">\r\n                          <Eye className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button className=\"p-2 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors\">\r\n                          <Edit3 className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShippingManagement\r\n","import { useState, useMemo } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useAudit, AUDIT_ACTIONS } from '../../../contexts/AuditContext'\nimport { useI18n } from '../../../contexts/I18nContext'\nimport {\n  FileText,\n  Download,\n  Filter,\n  Search,\n  User,\n  Shield,\n  AlertCircle,\n  CheckCircle,\n  Clock,\n  X,\n  Globe,\n} from 'lucide-react'\n\nconst AuditLogs = () => {\n  const {\n    logs,\n    getFilteredLogs,\n    exportLogs,\n    clearOldLogs,\n    hasPermission,\n    PERMISSIONS,\n  } = useAudit()\n  const { t, language, isRTL } = useI18n()\n\n  const [filters, setFilters] = useState({\n    userId: '',\n    action: '',\n    resource: '',\n    startDate: '',\n    endDate: '',\n    success: undefined,\n    search: '',\n  })\n  const [showFilters, setShowFilters] = useState(false)\n  const [selectedLog, setSelectedLog] = useState(null)\n  const [currentPage, setCurrentPage] = useState(1)\n  const logsPerPage = 20\n\n  // Check permissions\n  const canViewAuditLogs = hasPermission(PERMISSIONS.AUDIT_LOGS_VIEW)\n\n  // Filter and search logs - Removed logs from dependency array since getFilteredLogs should handle it\n  const filteredLogs = useMemo(() => {\n    let result = getFilteredLogs(filters)\n\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase()\n      result = result.filter(\n        log =>\n          log.userName.toLowerCase().includes(searchTerm) ||\n          log.userEmail.toLowerCase().includes(searchTerm) ||\n          log.action.toLowerCase().includes(searchTerm) ||\n          log.resource.toLowerCase().includes(searchTerm) ||\n          JSON.stringify(log.details).toLowerCase().includes(searchTerm)\n      )\n    }\n\n    return result.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n  }, [filters, getFilteredLogs])\n\n  if (!canViewAuditLogs) {\n    return (\n      <div className=\"p-8 text-center\">\n        <Shield className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n        <h3 className=\"text-lg font-semibold text-foreground mb-2\">\n          {t('audit.accessDenied', 'Access Denied')}\n        </h3>\n        <p className=\"text-foreground/60\">\n          {t(\n            'audit.noPermission',\n            'You do not have permission to view audit logs'\n          )}\n        </p>\n      </div>\n    )\n  }\n\n  // Pagination\n  const totalPages = Math.ceil(filteredLogs.length / logsPerPage)\n  const paginatedLogs = filteredLogs.slice(\n    (currentPage - 1) * logsPerPage,\n    currentPage * logsPerPage\n  )\n\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({ ...prev, [key]: value }))\n    setCurrentPage(1)\n  }\n\n  const clearFilters = () => {\n    setFilters({\n      userId: '',\n      action: '',\n      resource: '',\n      startDate: '',\n      endDate: '',\n      success: undefined,\n      search: '',\n    })\n    setCurrentPage(1)\n  }\n\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp)\n    return new Intl.DateTimeFormat(language === 'ar' ? 'ar-SA' : 'en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(date)\n  }\n\n  const getActionIcon = action => {\n    const icons = {\n      [AUDIT_ACTIONS.LOGIN]: User,\n      [AUDIT_ACTIONS.LOGOUT]: User,\n      [AUDIT_ACTIONS.CREATE]: CheckCircle,\n      [AUDIT_ACTIONS.UPDATE]: Clock,\n      [AUDIT_ACTIONS.DELETE]: AlertCircle,\n      [AUDIT_ACTIONS.VIEW]: Search,\n      [AUDIT_ACTIONS.EXPORT]: Download,\n      [AUDIT_ACTIONS.SECURITY_EVENT]: Shield,\n      [AUDIT_ACTIONS.ROLE_CHANGE]: Shield,\n      [AUDIT_ACTIONS.PERMISSION_CHANGE]: Shield,\n    }\n    return icons[action] || FileText\n  }\n\n  const getActionColor = (action, success) => {\n    if (!success) return 'text-red-500'\n\n    const colors = {\n      [AUDIT_ACTIONS.LOGIN]: 'text-green-500',\n      [AUDIT_ACTIONS.LOGOUT]: 'text-gray-500',\n      [AUDIT_ACTIONS.CREATE]: 'text-blue-500',\n      [AUDIT_ACTIONS.UPDATE]: 'text-yellow-500',\n      [AUDIT_ACTIONS.DELETE]: 'text-red-500',\n      [AUDIT_ACTIONS.VIEW]: 'text-gray-500',\n      [AUDIT_ACTIONS.EXPORT]: 'text-purple-500',\n      [AUDIT_ACTIONS.SECURITY_EVENT]: 'text-red-500',\n      [AUDIT_ACTIONS.ROLE_CHANGE]: 'text-orange-500',\n      [AUDIT_ACTIONS.PERMISSION_CHANGE]: 'text-orange-500',\n    }\n    return colors[action] || 'text-gray-500'\n  }\n\n  const getActionDisplayName = action => {\n    const actionNames = {\n      [AUDIT_ACTIONS.LOGIN]: language === 'ar' ? 'تسجيل دخول' : 'Login',\n      [AUDIT_ACTIONS.LOGOUT]: language === 'ar' ? 'تسجيل خروج' : 'Logout',\n      [AUDIT_ACTIONS.CREATE]: language === 'ar' ? 'إنشاء' : 'Create',\n      [AUDIT_ACTIONS.UPDATE]: language === 'ar' ? 'تحديث' : 'Update',\n      [AUDIT_ACTIONS.DELETE]: language === 'ar' ? 'حذف' : 'Delete',\n      [AUDIT_ACTIONS.VIEW]: language === 'ar' ? 'عرض' : 'View',\n      [AUDIT_ACTIONS.EXPORT]: language === 'ar' ? 'تصدير' : 'Export',\n      [AUDIT_ACTIONS.APPROVE]: language === 'ar' ? 'موافقة' : 'Approve',\n      [AUDIT_ACTIONS.REJECT]: language === 'ar' ? 'رفض' : 'Reject',\n      [AUDIT_ACTIONS.REFUND]: language === 'ar' ? 'استرداد' : 'Refund',\n      [AUDIT_ACTIONS.CANCEL]: language === 'ar' ? 'إلغاء' : 'Cancel',\n      [AUDIT_ACTIONS.ROLE_CHANGE]:\n        language === 'ar' ? 'تغيير دور' : 'Role Change',\n      [AUDIT_ACTIONS.PERMISSION_CHANGE]:\n        language === 'ar' ? 'تغيير صلاحية' : 'Permission Change',\n      [AUDIT_ACTIONS.SETTINGS_CHANGE]:\n        language === 'ar' ? 'تغيير إعدادات' : 'Settings Change',\n      [AUDIT_ACTIONS.THEME_CHANGE]:\n        language === 'ar' ? 'تغيير مظهر' : 'Theme Change',\n      [AUDIT_ACTIONS.SECURITY_EVENT]:\n        language === 'ar' ? 'حدث أمني' : 'Security Event',\n    }\n    return actionNames[action] || action\n  }\n\n  const handleExport = format => {\n    const data = exportLogs(format, filters)\n    const blob = new Blob([data], {\n      type: format === 'csv' ? 'text/csv' : 'application/json',\n    })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.style.display = 'none'\n    a.href = url\n    a.download = `audit-logs-${new Date().toISOString().split('T')[0]}.${format}`\n    document.body.appendChild(a)\n    a.click()\n    window.URL.revokeObjectURL(url)\n  }\n\n  const uniqueActions = [...new Set(logs.map(log => log.action))]\n  const uniqueUsers = [...new Set(logs.map(log => log.userName))]\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      <div className={`mb-8 ${isRTL ? 'text-right' : 'text-left'}`}>\n        <h1 className=\"text-3xl font-bold text-foreground mb-2 flex items-center gap-3\">\n          <FileText className=\"h-8 w-8 text-primary\" />\n          {t('audit.title', 'Audit Logs')}\n        </h1>\n        <p className=\"text-foreground/60\">\n          {t(\n            'audit.description',\n            'Track all system activities and user actions'\n          )}\n        </p>\n      </div>\n\n      {/* Controls */}\n      <div className=\"mb-6 space-y-4\">\n        <div\n          className={`flex flex-wrap items-center gap-4 ${isRTL ? 'flex-row-reverse' : ''}`}\n        >\n          {/* Search */}\n          <div className=\"relative flex-1 min-w-64\">\n            <Search\n              className={`absolute top-1/2 transform -translate-y-1/2 h-4 w-4 text-foreground/40 ${\n                isRTL ? 'right-3' : 'left-3'\n              }`}\n            />\n            <input\n              type=\"text\"\n              placeholder={t('audit.search', 'Search logs...')}\n              value={filters.search}\n              onChange={e => handleFilterChange('search', e.target.value)}\n              className={`w-full py-2 border border-border rounded-lg bg-background text-foreground placeholder-foreground/40 focus:outline-none focus:ring-2 focus:ring-primary ${\n                isRTL ? 'pr-10 pl-4 text-right' : 'pl-10 pr-4 text-left'\n              }`}\n            />\n          </div>\n\n          {/* Filter Toggle */}\n          <motion.button\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => setShowFilters(!showFilters)}\n            className={`px-4 py-2 border border-border rounded-lg text-foreground hover:bg-background/50 transition-colors flex items-center gap-2 ${\n              showFilters ? 'bg-primary/10 border-primary/30' : ''\n            }`}\n          >\n            <Filter className=\"h-4 w-4\" />\n            {t('audit.filters', 'Filters')}\n          </motion.button>\n\n          {/* Export */}\n          <div className=\"flex gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => handleExport('json')}\n              className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg font-medium hover:bg-primary/90 transition-colors flex items-center gap-2\"\n            >\n              <Download className=\"h-4 w-4\" />\n              JSON\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => handleExport('csv')}\n              className=\"px-4 py-2 border border-border rounded-lg text-foreground hover:bg-background/50 transition-colors flex items-center gap-2\"\n            >\n              <Download className=\"h-4 w-4\" />\n              CSV\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Advanced Filters */}\n        <AnimatePresence>\n          {showFilters && (\n            <motion.div\n              initial={{ height: 0, opacity: 0 }}\n              animate={{ height: 'auto', opacity: 1 }}\n              exit={{ height: 0, opacity: 0 }}\n              className=\"bg-surface border border-border rounded-lg p-4\"\n            >\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('audit.action', 'Action')}\n                  </label>\n                  <select\n                    value={filters.action}\n                    onChange={e => handleFilterChange('action', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                  >\n                    <option value=\"\">\n                      {t('audit.allActions', 'All Actions')}\n                    </option>\n                    {uniqueActions.map(action => (\n                      <option key={action} value={action}>\n                        {getActionDisplayName(action)}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('audit.user', 'User')}\n                  </label>\n                  <select\n                    value={filters.userId}\n                    onChange={e => handleFilterChange('userId', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                  >\n                    <option value=\"\">{t('audit.allUsers', 'All Users')}</option>\n                    {uniqueUsers.map(userName => (\n                      <option key={userName} value={userName}>\n                        {userName}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('audit.status', 'Status')}\n                  </label>\n                  <select\n                    value={\n                      filters.success === undefined\n                        ? ''\n                        : filters.success.toString()\n                    }\n                    onChange={e =>\n                      handleFilterChange(\n                        'success',\n                        e.target.value === ''\n                          ? undefined\n                          : e.target.value === 'true'\n                      )\n                    }\n                    className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                  >\n                    <option value=\"\">\n                      {t('audit.allStatuses', 'All Statuses')}\n                    </option>\n                    <option value=\"true\">\n                      {t('audit.success', 'Success')}\n                    </option>\n                    <option value=\"false\">{t('audit.failed', 'Failed')}</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('audit.startDate', 'Start Date')}\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={filters.startDate}\n                    onChange={e =>\n                      handleFilterChange('startDate', e.target.value)\n                    }\n                    className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('audit.endDate', 'End Date')}\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={filters.endDate}\n                    onChange={e =>\n                      handleFilterChange('endDate', e.target.value)\n                    }\n                    className=\"w-full px-3 py-2 border border-border rounded-lg bg-background text-foreground\"\n                  />\n                </div>\n\n                <div className=\"flex items-end\">\n                  <motion.button\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={clearFilters}\n                    className=\"w-full px-4 py-2 border border-border rounded-lg text-foreground hover:bg-background/50 transition-colors\"\n                  >\n                    {t('audit.clearFilters', 'Clear Filters')}\n                  </motion.button>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Logs Table */}\n      <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n        <div className=\"p-6 border-b border-border\">\n          <div\n            className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <h2 className=\"text-xl font-semibold text-foreground\">\n              {t('audit.logs', 'Activity Logs')} ({filteredLogs.length})\n            </h2>\n            {logs.length > 1000 && (\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={() => clearOldLogs()}\n                className=\"text-sm text-red-600 hover:text-red-700 font-medium\"\n              >\n                {t('audit.clearOldLogs', 'Clear Old Logs')}\n              </motion.button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-background/50\">\n              <tr className={isRTL ? 'text-right' : 'text-left'}>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.timestamp', 'Timestamp')}\n                </th>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.user', 'User')}\n                </th>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.action', 'Action')}\n                </th>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.resource', 'Resource')}\n                </th>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.status', 'Status')}\n                </th>\n                <th className=\"px-6 py-3 text-xs font-medium text-foreground/60 uppercase tracking-wider\">\n                  {t('audit.details', 'Details')}\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-border\">\n              {paginatedLogs.map(log => {\n                const ActionIcon = getActionIcon(log.action)\n\n                return (\n                  <motion.tr\n                    key={log.id}\n                    layout\n                    className=\"hover:bg-background/50 transition-colors cursor-pointer\"\n                    onClick={() => setSelectedLog(log)}\n                  >\n                    <td\n                      className={`px-6 py-4 whitespace-nowrap text-sm text-foreground/70 ${\n                        isRTL ? 'text-right' : 'text-left'\n                      }`}\n                    >\n                      {formatTimestamp(log.timestamp)}\n                    </td>\n                    <td\n                      className={`px-6 py-4 whitespace-nowrap ${isRTL ? 'text-right' : 'text-left'}`}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <User className=\"h-4 w-4 text-foreground/40\" />\n                        <div>\n                          <div className=\"text-sm font-medium text-foreground\">\n                            {log.userName}\n                          </div>\n                          <div className=\"text-xs text-foreground/60\">\n                            {log.userRole}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td\n                      className={`px-6 py-4 whitespace-nowrap ${isRTL ? 'text-right' : 'text-left'}`}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <ActionIcon\n                          className={`h-4 w-4 ${getActionColor(log.action, log.success)}`}\n                        />\n                        <span className=\"text-sm text-foreground\">\n                          {getActionDisplayName(log.action)}\n                        </span>\n                      </div>\n                    </td>\n                    <td\n                      className={`px-6 py-4 text-sm text-foreground/70 ${\n                        isRTL ? 'text-right' : 'text-left'\n                      }`}\n                    >\n                      <code className=\"bg-background px-2 py-1 rounded text-xs\">\n                        {log.resource}\n                      </code>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                          log.success\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-red-100 text-red-800'\n                        }`}\n                      >\n                        {log.success\n                          ? t('audit.success', 'Success')\n                          : t('audit.failed', 'Failed')}\n                      </span>\n                    </td>\n                    <td\n                      className={`px-6 py-4 text-sm text-foreground/60 ${\n                        isRTL ? 'text-right' : 'text-left'\n                      }`}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <Globe className=\"h-3 w-3\" />\n                        <span className=\"text-xs\">{log.ipAddress}</span>\n                      </div>\n                    </td>\n                  </motion.tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"px-6 py-4 border-t border-border\">\n            <div\n              className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n            >\n              <div className=\"text-sm text-foreground/60\">\n                {t('audit.showing', 'Showing')}{' '}\n                {(currentPage - 1) * logsPerPage + 1} -{' '}\n                {Math.min(currentPage * logsPerPage, filteredLogs.length)}{' '}\n                {t('audit.of', 'of')} {filteredLogs.length}\n              </div>\n              <div className={`flex gap-2 ${isRTL ? 'flex-row-reverse' : ''}`}>\n                <button\n                  onClick={() => setCurrentPage(page => Math.max(1, page - 1))}\n                  disabled={currentPage === 1}\n                  className=\"px-3 py-1 border border-border rounded-md text-sm text-foreground disabled:opacity-50 hover:bg-background/50 transition-colors\"\n                >\n                  {t('audit.previous', 'Previous')}\n                </button>\n                <span className=\"px-3 py-1 text-sm text-foreground\">\n                  {currentPage} / {totalPages}\n                </span>\n                <button\n                  onClick={() =>\n                    setCurrentPage(page => Math.min(totalPages, page + 1))\n                  }\n                  disabled={currentPage === totalPages}\n                  className=\"px-3 py-1 border border-border rounded-md text-sm text-foreground disabled:opacity-50 hover:bg-background/50 transition-colors\"\n                >\n                  {t('audit.next', 'Next')}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Log Detail Modal */}\n      <AnimatePresence>\n        {selectedLog && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n            onClick={() => setSelectedLog(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.95, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.95, opacity: 0 }}\n              className=\"bg-surface border border-border rounded-xl p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto\"\n              onClick={e => e.stopPropagation()}\n            >\n              <div\n                className={`flex items-center justify-between mb-6 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <h3 className=\"text-lg font-semibold text-foreground\">\n                  {t('audit.logDetails', 'Log Details')}\n                </h3>\n                <button\n                  onClick={() => setSelectedLog(null)}\n                  className=\"p-2 text-foreground/40 hover:text-foreground transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.timestamp', 'Timestamp')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {formatTimestamp(selectedLog.timestamp)}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.action', 'Action')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {getActionDisplayName(selectedLog.action)}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.user', 'User')}\n                    </label>\n                    <p className=\"text-foreground\">\n                      {selectedLog.userName} ({selectedLog.userEmail})\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.role', 'Role')}\n                    </label>\n                    <p className=\"text-foreground\">{selectedLog.userRole}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.resource', 'Resource')}\n                    </label>\n                    <p className=\"text-foreground font-mono text-sm\">\n                      {selectedLog.resource}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.status', 'Status')}\n                    </label>\n                    <p\n                      className={\n                        selectedLog.success ? 'text-green-600' : 'text-red-600'\n                      }\n                    >\n                      {selectedLog.success\n                        ? t('audit.success', 'Success')\n                        : t('audit.failed', 'Failed')}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.ipAddress', 'IP Address')}\n                    </label>\n                    <p className=\"text-foreground font-mono text-sm\">\n                      {selectedLog.ipAddress}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-foreground/60\">\n                      {t('audit.sessionId', 'Session ID')}\n                    </label>\n                    <p className=\"text-foreground font-mono text-sm\">\n                      {selectedLog.sessionId}\n                    </p>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium text-foreground/60\">\n                    {t('audit.userAgent', 'User Agent')}\n                  </label>\n                  <p className=\"text-foreground text-sm break-all\">\n                    {selectedLog.userAgent}\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium text-foreground/60\">\n                    {t('audit.details', 'Details')}\n                  </label>\n                  <pre className=\"bg-background border border-border rounded-lg p-4 text-sm text-foreground overflow-x-auto\">\n                    {JSON.stringify(selectedLog.details, null, 2)}\n                  </pre>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default AuditLogs\n","import { motion } from 'framer-motion'\r\nimport { Activity, Shield, Eye, TrendingUp } from 'lucide-react'\r\nimport ActivityTracker from '../../../components/admin/ActivityTracker.jsx'\r\n\r\nconst AdminActivityPage = () => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center gap-3\">\r\n            <Activity className=\"w-8 h-8 text-blue-600\" />\r\n            Activity & Audit Log\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Comprehensive tracking and monitoring of all admin activities\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-gradient-to-r from-blue-500 to-blue-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-100\">Today&apos;s Activities</p>\r\n              <p className=\"text-3xl font-bold\">127</p>\r\n            </div>\r\n            <Activity className=\"w-8 h-8 text-blue-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-gradient-to-r from-green-500 to-green-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-100\">Success Rate</p>\r\n              <p className=\"text-3xl font-bold\">98.5%</p>\r\n            </div>\r\n            <Shield className=\"w-8 h-8 text-green-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-orange-100\">High Risk Events</p>\r\n              <p className=\"text-3xl font-bold\">3</p>\r\n            </div>\r\n            <Eye className=\"w-8 h-8 text-orange-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-gradient-to-r from-purple-500 to-purple-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-100\">Active Sessions</p>\r\n              <p className=\"text-3xl font-bold\">12</p>\r\n            </div>\r\n            <TrendingUp className=\"w-8 h-8 text-purple-200\" />\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Activity Tracker Component */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.4 }}\r\n      >\r\n        <ActivityTracker />\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminActivityPage\r\n","import { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport {\r\n  Brain,\r\n  Layout,\r\n  AlertTriangle,\r\n  Zap,\r\n  TrendingUp,\r\n  Shield,\r\n} from 'lucide-react'\r\nimport AnomalyDetection from '../../../components/intelligence/AnomalyDetection.jsx'\r\nimport CustomDashboardBuilder from '../../../components/intelligence/CustomDashboardBuilder.jsx'\r\n\r\nconst IntelligenceDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('overview')\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'overview',\r\n      label: 'Overview',\r\n      icon: Brain,\r\n      description: 'AI-powered insights and alerts overview',\r\n    },\r\n    {\r\n      id: 'anomaly',\r\n      label: 'Anomaly Detection',\r\n      icon: AlertTriangle,\r\n      description: 'Real-time anomaly detection and threat monitoring',\r\n    },\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard Builder',\r\n      icon: Layout,\r\n      description: 'Create custom dashboards with drag-and-drop widgets',\r\n    },\r\n  ]\r\n\r\n  const renderOverview = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Intelligence Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-gradient-to-r from-purple-500 to-purple-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-100\">AI Models Active</p>\r\n              <p className=\"text-3xl font-bold\">7</p>\r\n            </div>\r\n            <Brain className=\"w-8 h-8 text-purple-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-gradient-to-r from-red-500 to-red-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-red-100\">Active Anomalies</p>\r\n              <p className=\"text-3xl font-bold\">3</p>\r\n            </div>\r\n            <AlertTriangle className=\"w-8 h-8 text-red-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-gradient-to-r from-green-500 to-green-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-100\">Predictions Made</p>\r\n              <p className=\"text-3xl font-bold\">1,247</p>\r\n            </div>\r\n            <TrendingUp className=\"w-8 h-8 text-green-200\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-gradient-to-r from-blue-500 to-blue-600 p-6 rounded-xl text-white\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-100\">Accuracy Score</p>\r\n              <p className=\"text-3xl font-bold\">98.5%</p>\r\n            </div>\r\n            <Shield className=\"w-8 h-8 text-blue-200\" />\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* AI Capabilities Overview */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <motion.div\r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-white rounded-lg shadow-sm border p-6\"\r\n        >\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n              <Brain className=\"w-6 h-6 text-purple-600\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              AI Capabilities\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Anomaly Detection\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Real-time pattern analysis\r\n                </div>\r\n              </div>\r\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Predictive Analytics\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Future trend forecasting\r\n                </div>\r\n              </div>\r\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Recommendation Engine\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Personalized suggestions\r\n                </div>\r\n              </div>\r\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Natural Language Processing\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Text analysis and insights\r\n                </div>\r\n              </div>\r\n              <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 0.5 }}\r\n          className=\"bg-white rounded-lg shadow-sm border p-6\"\r\n        >\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n              <Zap className=\"w-6 h-6 text-blue-600\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              Recent AI Actions\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-start gap-3 p-3 bg-red-50 rounded-lg\">\r\n              <AlertTriangle className=\"w-5 h-5 text-red-600 mt-0.5\" />\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Security Threat Detected\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Blocked 47 suspicious login attempts\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">2 minutes ago</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-start gap-3 p-3 bg-green-50 rounded-lg\">\r\n              <TrendingUp className=\"w-5 h-5 text-green-600 mt-0.5\" />\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Revenue Optimization\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Suggested pricing adjustments for 12 products\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">15 minutes ago</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg\">\r\n              <Brain className=\"w-5 h-5 text-blue-600 mt-0.5\" />\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Customer Insights\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Generated personalized recommendations for 342 users\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">1 hour ago</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-start gap-3 p-3 bg-purple-50 rounded-lg\">\r\n              <Layout className=\"w-5 h-5 text-purple-600 mt-0.5\" />\r\n              <div>\r\n                <div className=\"font-medium text-gray-900\">\r\n                  Dashboard Optimization\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Auto-arranged widgets based on usage patterns\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">3 hours ago</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* AI Performance Metrics */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.6 }}\r\n        className=\"bg-white rounded-lg shadow-sm border p-6\"\r\n      >\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          AI Performance Metrics\r\n        </h3>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-3xl font-bold text-blue-600 mb-2\">98.5%</div>\r\n            <div className=\"text-sm text-gray-600\">Overall Accuracy</div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n              <div\r\n                className=\"bg-blue-600 h-2 rounded-full\"\r\n                style={{ width: '98.5%' }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <div className=\"text-3xl font-bold text-green-600 mb-2\">0.12s</div>\r\n            <div className=\"text-sm text-gray-600\">Average Response Time</div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n              <div\r\n                className=\"bg-green-600 h-2 rounded-full\"\r\n                style={{ width: '85%' }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <div className=\"text-3xl font-bold text-purple-600 mb-2\">99.9%</div>\r\n            <div className=\"text-sm text-gray-600\">System Uptime</div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n              <div\r\n                className=\"bg-purple-600 h-2 rounded-full\"\r\n                style={{ width: '99.9%' }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <Brain className=\"w-8 h-8 text-purple-600\" />\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">\r\n              Intelligence Dashboard\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              AI-powered insights and intelligent automation\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"flex space-x-8\">\r\n          {tabs.map(tab => {\r\n            const Icon = tab.icon\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center gap-2 pb-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                  activeTab === tab.id\r\n                    ? 'border-purple-500 text-purple-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                {tab.label}\r\n              </button>\r\n            )\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <motion.div\r\n        key={activeTab}\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        {activeTab === 'overview' && renderOverview()}\r\n        {activeTab === 'anomaly' && <AnomalyDetection />}\r\n        {activeTab === 'dashboard' && <CustomDashboardBuilder />}\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IntelligenceDashboard\r\n","import { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport {\n  Shield,\n  Monitor,\n  Smartphone,\n  Globe,\n  Clock,\n  X,\n  AlertTriangle,\n  CheckCircle,\n  MapPin,\n  Settings,\n} from 'lucide-react'\nimport { useI18n } from '../../../../contexts/I18nContext.jsx'\nimport { useAdminSecurity } from '../../../../contexts/AdminSecurityContext.jsx'\n\nconst SessionManager = () => {\n  const [sessions, setSessions] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedSession, setSelectedSession] = useState(null)\n  const [showDetails, setShowDetails] = useState(false)\n\n  const { t, isRTL } = useI18n()\n  const { logSecurityEvent, SECURITY_EVENTS } = useAdminSecurity()\n\n  // Keep only super admin session - other sessions will be loaded from API\n  useEffect(() => {\n    const mockSessions = [\n      {\n        id: 'session_faisal_current',\n        userId: 'faisal_admin',\n        deviceType: 'desktop',\n        browser: 'Chrome 120.0',\n        os: 'Windows 11',\n        ipAddress: '192.168.1.100',\n        location: {\n          country: 'India',\n          city: 'Mumbai',\n          coordinates: { lat: 19.076, lng: 72.8777 },\n        },\n        startTime: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\n        lastActivity: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago\n        isCurrentSession: true,\n        status: 'active',\n        securityScore: 98,\n        riskLevel: 'low',\n        activities: [\n          {\n            action: 'Dashboard View',\n            time: new Date(Date.now() - 5 * 60 * 1000),\n          },\n          {\n            action: 'System Administration',\n            time: new Date(Date.now() - 15 * 60 * 1000),\n          },\n          {\n            action: 'Security Management',\n            time: new Date(Date.now() - 30 * 60 * 1000),\n          },\n        ],\n      },\n    ]\n\n    setTimeout(() => {\n      setSessions(mockSessions)\n      setLoading(false)\n    }, 1000)\n  }, [])\n\n  const terminateSession = async sessionId => {\n    if (\n      window.confirm(\n        t(\n          'security.confirmTerminate',\n          'Are you sure you want to terminate this session?'\n        )\n      )\n    ) {\n      setSessions(prev => prev.filter(s => s.id !== sessionId))\n      await logSecurityEvent(SECURITY_EVENTS.SESSION_TERMINATED, {\n        sessionId,\n        reason: 'Admin termination',\n        terminatedBy: 'admin',\n      })\n    }\n  }\n\n  const terminateAllSessions = async () => {\n    if (\n      window.confirm(\n        t(\n          'security.confirmTerminateAll',\n          'Terminate all other sessions? This will log out all other devices.'\n        )\n      )\n    ) {\n      const currentSessionId = sessions.find(s => s.isCurrentSession)?.id\n      setSessions(prev => prev.filter(s => s.id === currentSessionId))\n      await logSecurityEvent(SECURITY_EVENTS.BULK_SESSION_TERMINATION, {\n        reason: 'Security cleanup',\n        terminatedCount: sessions.length - 1,\n      })\n    }\n  }\n\n  const getDeviceIcon = deviceType => {\n    switch (deviceType) {\n      case 'mobile':\n        return Smartphone\n      case 'tablet':\n        return Smartphone\n      default:\n        return Monitor\n    }\n  }\n\n  const getRiskColor = riskLevel => {\n    switch (riskLevel) {\n      case 'high':\n        return 'text-red-600 bg-red-100'\n      case 'medium':\n        return 'text-yellow-600 bg-yellow-100'\n      default:\n        return 'text-green-600 bg-green-100'\n    }\n  }\n\n  const getStatusColor = status => {\n    switch (status) {\n      case 'suspicious':\n        return 'text-red-600 bg-red-100'\n      case 'expired':\n        return 'text-gray-600 bg-gray-100'\n      default:\n        return 'text-green-600 bg-green-100'\n    }\n  }\n\n  const formatTimeAgo = date => {\n    const now = new Date()\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60))\n\n    if (diffInMinutes < 1) return t('time.justNow', 'Just now')\n    if (diffInMinutes < 60) return t('time.minutesAgo', `${diffInMinutes}m ago`)\n\n    const diffInHours = Math.floor(diffInMinutes / 60)\n    if (diffInHours < 24) return t('time.hoursAgo', `${diffInHours}h ago`)\n\n    const diffInDays = Math.floor(diffInHours / 24)\n    return t('time.daysAgo', `${diffInDays}d ago`)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin w-8 h-8 border-2 border-primary border-t-transparent rounded-full\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div\n        className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n      >\n        <div className={isRTL ? 'text-right' : 'text-left'}>\n          <h1 className=\"text-3xl font-bold text-foreground mb-2 flex items-center gap-3\">\n            <Shield className=\"h-8 w-8 text-primary\" />\n            {t('security.sessionManager', 'Session Manager')}\n          </h1>\n          <p className=\"text-foreground/60\">\n            {t(\n              'security.sessionDescription',\n              'Monitor and control active admin sessions across all devices'\n            )}\n          </p>\n        </div>\n\n        <motion.button\n          onClick={terminateAllSessions}\n          className=\"px-4 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-colors\"\n          whileHover={{ scale: 1.02 }}\n          whileTap={{ scale: 0.98 }}\n        >\n          {t('security.terminateAll', 'Terminate All Others')}\n        </motion.button>\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Shield className=\"text-blue-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('security.activeSessions', 'Active Sessions')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {sessions.filter(s => s.status === 'active').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-green-100 rounded-lg\">\n              <CheckCircle className=\"text-green-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('security.secureScore', 'Avg Security Score')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {Math.round(\n                  sessions.reduce((sum, s) => sum + s.securityScore, 0) /\n                    sessions.length\n                )}\n                %\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-yellow-100 rounded-lg\">\n              <AlertTriangle className=\"text-yellow-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('security.suspiciousSessions', 'Suspicious')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {sessions.filter(s => s.status === 'suspicious').length}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-surface border border-border rounded-xl p-4\">\n          <div\n            className={`flex items-center gap-3 ${isRTL ? 'flex-row-reverse' : ''}`}\n          >\n            <div className=\"p-2 bg-purple-100 rounded-lg\">\n              <Globe className=\"text-purple-600\" size={20} />\n            </div>\n            <div className={isRTL ? 'text-right' : 'text-left'}>\n              <div className=\"text-sm text-foreground/60\">\n                {t('security.locations', 'Locations')}\n              </div>\n              <div className=\"text-xl font-bold text-foreground\">\n                {new Set(sessions.map(s => s.location.country)).size}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sessions List */}\n      <div className=\"bg-surface border border-border rounded-xl overflow-hidden\">\n        <div className=\"p-6 border-b border-border\">\n          <h2 className=\"text-xl font-semibold text-foreground\">\n            {t('security.allSessions', 'All Sessions')}\n          </h2>\n        </div>\n\n        <div className=\"divide-y divide-border\">\n          {sessions.map(session => {\n            const DeviceIcon = getDeviceIcon(session.deviceType)\n\n            return (\n              <motion.div\n                key={session.id}\n                layout\n                className=\"p-6 hover:bg-background/50 transition-colors\"\n              >\n                <div\n                  className={`flex items-center justify-between ${isRTL ? 'flex-row-reverse' : ''}`}\n                >\n                  <div\n                    className={`flex items-center gap-4 flex-1 ${isRTL ? 'flex-row-reverse' : ''}`}\n                  >\n                    {/* Device Icon */}\n                    <div\n                      className={`p-3 rounded-xl ${session.isCurrentSession ? 'bg-primary/20' : 'bg-background'}`}\n                    >\n                      <DeviceIcon\n                        size={24}\n                        className={\n                          session.isCurrentSession\n                            ? 'text-primary'\n                            : 'text-foreground/60'\n                        }\n                      />\n                    </div>\n\n                    {/* Session Info */}\n                    <div\n                      className={`flex-1 ${isRTL ? 'text-right' : 'text-left'}`}\n                    >\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <h3 className=\"font-semibold text-foreground\">\n                          {session.browser} on {session.os}\n                        </h3>\n                        {session.isCurrentSession && (\n                          <span className=\"px-2 py-1 bg-primary/20 text-primary text-xs rounded-full font-medium\">\n                            {t('security.currentSession', 'Current')}\n                          </span>\n                        )}\n                      </div>\n\n                      <div className=\"space-y-1 text-sm text-foreground/60\">\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin size={14} />\n                          <span>\n                            {session.location.city}, {session.location.country}\n                          </span>\n                          <span className=\"text-foreground/40\">•</span>\n                          <span>{session.ipAddress}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock size={14} />\n                          <span>\n                            {t('security.lastActive', 'Last active')}:{' '}\n                            {formatTimeAgo(session.lastActivity)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Status & Risk */}\n                    <div\n                      className={`flex flex-col items-end gap-2 ${isRTL ? 'items-start' : 'items-end'}`}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(session.status)}`}\n                        >\n                          {session.status}\n                        </span>\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${getRiskColor(session.riskLevel)}`}\n                        >\n                          {session.riskLevel} risk\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-foreground/60\">\n                        Security: {session.securityScore}%\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Actions */}\n                  <div\n                    className={`flex items-center gap-2 ml-4 ${isRTL ? 'mr-4 ml-0' : ''}`}\n                  >\n                    <button\n                      onClick={() => {\n                        setSelectedSession(session)\n                        setShowDetails(true)\n                      }}\n                      className=\"p-2 text-foreground/60 hover:text-foreground hover:bg-background rounded-lg transition-colors\"\n                    >\n                      <Settings size={16} />\n                    </button>\n\n                    {!session.isCurrentSession && (\n                      <button\n                        onClick={() => terminateSession(session.id)}\n                        className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                      >\n                        <X size={16} />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </motion.div>\n            )\n          })}\n        </div>\n      </div>\n\n      {/* Session Details Modal */}\n      <AnimatePresence>\n        {showDetails && selectedSession && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n            onClick={() => setShowDetails(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.95, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.95, opacity: 0 }}\n              className=\"bg-surface border border-border rounded-xl p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto\"\n              onClick={e => e.stopPropagation()}\n            >\n              <div\n                className={`flex items-center justify-between mb-6 ${isRTL ? 'flex-row-reverse' : ''}`}\n              >\n                <h3 className=\"text-lg font-semibold text-foreground\">\n                  {t('security.sessionDetails', 'Session Details')}\n                </h3>\n                <button\n                  onClick={() => setShowDetails(false)}\n                  className=\"p-2 text-foreground/40 hover:text-foreground transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Session Info */}\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-3\">\n                    {t('security.sessionInfo', 'Session Information')}\n                  </h4>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.sessionId', 'Session ID')}:\n                      </span>\n                      <p className=\"font-mono\">{selectedSession.id}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.deviceType', 'Device Type')}:\n                      </span>\n                      <p className=\"capitalize\">{selectedSession.deviceType}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.browser', 'Browser')}:\n                      </span>\n                      <p>{selectedSession.browser}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.operatingSystem', 'OS')}:\n                      </span>\n                      <p>{selectedSession.os}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.ipAddress', 'IP Address')}:\n                      </span>\n                      <p className=\"font-mono\">{selectedSession.ipAddress}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-foreground/60\">\n                        {t('security.securityScore', 'Security Score')}:\n                      </span>\n                      <p>{selectedSession.securityScore}%</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Location Info */}\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-3\">\n                    {t('security.locationInfo', 'Location Information')}\n                  </h4>\n                  <div className=\"text-sm space-y-2\">\n                    <p>\n                      <span className=\"text-foreground/60\">\n                        {t('security.location', 'Location')}:\n                      </span>\n                      <span className=\"ml-2\">\n                        {selectedSession.location.city},{' '}\n                        {selectedSession.location.country}\n                      </span>\n                    </p>\n                    <p>\n                      <span className=\"text-foreground/60\">\n                        {t('security.coordinates', 'Coordinates')}:\n                      </span>\n                      <span className=\"ml-2 font-mono\">\n                        {selectedSession.location.coordinates.lat},{' '}\n                        {selectedSession.location.coordinates.lng}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n\n                {/* Recent Activities */}\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-3\">\n                    {t('security.recentActivities', 'Recent Activities')}\n                  </h4>\n                  <div className=\"space-y-2\">\n                    {selectedSession.activities.map((activity, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center justify-between text-sm\"\n                      >\n                        <span className=\"text-foreground\">\n                          {activity.action}\n                        </span>\n                        <span className=\"text-foreground/60\">\n                          {formatTimeAgo(activity.time)}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Actions */}\n                {!selectedSession.isCurrentSession && (\n                  <div className=\"flex justify-end pt-4 border-t border-border\">\n                    <button\n                      onClick={() => {\n                        terminateSession(selectedSession.id)\n                        setShowDetails(false)\n                      }}\n                      className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                    >\n                      {t('security.terminateSession', 'Terminate Session')}\n                    </button>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default SessionManager\n","import { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport {\r\n  Settings,\r\n  Palette,\r\n  Globe,\r\n  Monitor,\r\n  Shield,\r\n  Bell,\r\n  Cloud,\r\n  Key,\r\n} from 'lucide-react'\r\nimport ThemeManager from '../../../components/admin/ThemeManager.jsx'\r\nimport LanguageManager from '../../../components/admin/LanguageManager.jsx'\r\n\r\nconst AdvancedSettings = () => {\r\n  const [activeTab, setActiveTab] = useState('appearance')\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'appearance',\r\n      label: 'Appearance',\r\n      icon: Palette,\r\n      description: 'Themes, colors, and visual customization',\r\n    },\r\n    {\r\n      id: 'language',\r\n      label: 'Language & Localization',\r\n      icon: Globe,\r\n      description: 'Multi-language support and translations',\r\n    },\r\n    {\r\n      id: 'system',\r\n      label: 'System Settings',\r\n      icon: Monitor,\r\n      description: 'Performance, caching, and system configuration',\r\n    },\r\n    {\r\n      id: 'security',\r\n      label: 'Security',\r\n      icon: Shield,\r\n      description: 'Authentication, permissions, and security policies',\r\n    },\r\n    {\r\n      id: 'notifications',\r\n      label: 'Notifications',\r\n      icon: Bell,\r\n      description: 'Email, SMS, and push notification settings',\r\n    },\r\n    {\r\n      id: 'integrations',\r\n      label: 'Integrations',\r\n      icon: Cloud,\r\n      description: 'Third-party services and API configurations',\r\n    },\r\n  ]\r\n\r\n  const renderSystemSettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Performance Settings\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">\r\n                Enable Caching\r\n              </label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Improve application performance with Redis caching\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">Auto-Backup</label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Automatically backup data every 6 hours\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Session Timeout (minutes)\r\n            </label>\r\n            <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\">\r\n              <option value=\"30\">30 minutes</option>\r\n              <option value=\"60\" selected>\r\n                60 minutes\r\n              </option>\r\n              <option value=\"120\">2 hours</option>\r\n              <option value=\"480\">8 hours</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Log Level\r\n            </label>\r\n            <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\">\r\n              <option value=\"error\">Error</option>\r\n              <option value=\"warn\">Warning</option>\r\n              <option value=\"info\" selected>\r\n                Info\r\n              </option>\r\n              <option value=\"debug\">Debug</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Database Settings\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                Connection Pool Size\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue=\"20\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                Query Timeout (seconds)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue=\"30\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">\r\n                Enable Query Logging\r\n              </label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Log all database queries for debugging\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderSecuritySettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Authentication Settings\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">\r\n                Require 2FA for Admins\r\n              </label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Force two-factor authentication for all admin users\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Password Policy\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"rounded border-gray-300\"\r\n                  defaultChecked\r\n                />\r\n                <span className=\"ml-2 text-sm text-gray-700\">\r\n                  Minimum 8 characters\r\n                </span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"rounded border-gray-300\"\r\n                  defaultChecked\r\n                />\r\n                <span className=\"ml-2 text-sm text-gray-700\">\r\n                  Require uppercase letters\r\n                </span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"rounded border-gray-300\"\r\n                  defaultChecked\r\n                />\r\n                <span className=\"ml-2 text-sm text-gray-700\">\r\n                  Require numbers\r\n                </span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input type=\"checkbox\" className=\"rounded border-gray-300\" />\r\n                <span className=\"ml-2 text-sm text-gray-700\">\r\n                  Require special characters\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Login Attempts Limit\r\n            </label>\r\n            <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\">\r\n              <option value=\"3\">3 attempts</option>\r\n              <option value=\"5\" selected>\r\n                5 attempts\r\n              </option>\r\n              <option value=\"10\">10 attempts</option>\r\n              <option value=\"unlimited\">Unlimited</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          IP Security\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Allowed IP Addresses\r\n            </label>\r\n            <textarea\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              rows=\"4\"\r\n              placeholder=\"Enter IP addresses or ranges, one per line&#10;192.168.1.0/24&#10;203.0.113.5\"\r\n            />\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              Leave empty to allow all IP addresses\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">\r\n                Enable GeoIP Blocking\r\n              </label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Block access from specific countries\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderNotificationSettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Email Notifications\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                SMTP Server\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                defaultValue=\"smtp.gmail.com\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                SMTP Port\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue=\"587\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                Username\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"admin@ivolex.com\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block font-medium text-gray-900 mb-2\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"font-medium text-gray-900\">Notification Types</h4>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"rounded border-gray-300\"\r\n                defaultChecked\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">New orders</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"rounded border-gray-300\"\r\n                defaultChecked\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">\r\n                Low inventory alerts\r\n              </span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input type=\"checkbox\" className=\"rounded border-gray-300\" />\r\n              <span className=\"ml-2 text-sm text-gray-700\">\r\n                User registrations\r\n              </span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"rounded border-gray-300\"\r\n                defaultChecked\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">\r\n                Security alerts\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderIntegrations = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Payment Gateways\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                <Key className=\"w-5 h-5 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900\">Razorpay</h4>\r\n                <p className=\"text-sm text-gray-600\">Indian payment gateway</p>\r\n              </div>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                <Key className=\"w-5 h-5 text-purple-600\" />\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900\">Stripe</h4>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Global payment processing\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n          Analytics & Tracking\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Google Analytics ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"GA-XXXXXXXXX-X\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-900 mb-2\">\r\n              Facebook Pixel ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"XXXXXXXXXXXXXXX\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-900\">\r\n                Enable Google Tag Manager\r\n              </label>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Advanced tracking and marketing tags\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input type=\"checkbox\" className=\"sr-only peer\" />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <Settings className=\"w-8 h-8 text-blue-600\" />\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">\r\n              Advanced Settings\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Configure system preferences and integrations\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"flex space-x-8 overflow-x-auto\">\r\n          {tabs.map(tab => {\r\n            const Icon = tab.icon\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center gap-2 pb-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap transition-colors ${\r\n                  activeTab === tab.id\r\n                    ? 'border-blue-500 text-blue-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                {tab.label}\r\n              </button>\r\n            )\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <motion.div\r\n        key={activeTab}\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        {activeTab === 'appearance' && <ThemeManager />}\r\n        {activeTab === 'language' && <LanguageManager />}\r\n        {activeTab === 'system' && renderSystemSettings()}\r\n        {activeTab === 'security' && renderSecuritySettings()}\r\n        {activeTab === 'notifications' && renderNotificationSettings()}\r\n        {activeTab === 'integrations' && renderIntegrations()}\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvancedSettings\r\n"],"names":["AdminRoute","children","navigate","useNavigate","isAuthenticated","isLoading","authLoading","useAuth","isAdminAuthenticated","isAdminLoading","useAdminAuth","useEffect","state","message","from","location","pathname","className","jsxs","jsx","NotificationBell","notifications","getUnreadCount","markAsRead","markAllAsRead","deleteNotification","useNotifications","t","language","isRTL","useI18n","isOpen","setIsOpen","useState","filter","setFilter","bellRef","useRef","unreadCount","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","formatTimeAgo","timestamp","now","Date","notificationTime","diffInMinutes","Math","floor","hours","days","filteredNotifications","notification","read","type","includes","displayedNotifications","slice","ref","motion","button","whileHover","scale","whileTap","onClick","div","animate","rotate","transition","duration","repeat","repeatDelay","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","span","initial","AnimatePresence","opacity","y","exit","key","label","map","tab","length","x","id","icon","title","createdAt","e","stopPropagation","priority","AnalyticsExport","data","timeRange","selectedSegment","onExport","isExporting","setIsExporting","showOptions","setShowOptions","exportFormat","setExportFormat","includeCharts","setIncludeCharts","includeSummary","setIncludeSummary","includeDetails","setIncludeDetails","logAction","useAudit","exportOptions","format","FileText","description","BarChart3","Download","generatePDFReport","async","config","Promise","resolve","setTimeout","pdfContent","generatePDFContent","blob","Blob","success","filename","fileSize","size","generateExcelReport","excelData","generateExcelData","csv","convertToCSV","generateCSVReport","csvData","generateCSVData","toUpperCase","toLocaleString","overview","totalRevenue","totalOrders","totalCustomers","changes","revenue","orders","customers","conversionRate","conversion","Metric","Value","Change","Period","Segment","segment","Object","keys","join","row","values","value","replace","downloadFile","url","window","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","disabled","RefreshCw","X","option","Icon","name","checked","onChange","CheckCircle","exportConfig","options","segments","segmentData","recentOrders","customRequests","generatedAt","toISOString","result","AUDIT_ACTIONS","EXPORT","error","Fragment","MOCK_ANALYTICS","leather","growth","electronics","furniture","customer","amount","status","time","category","urgency","SEGMENT_COLORS","AdminDashboard","theme","useSegment","setTimeRange","setSelectedSegment","analytics","setAnalytics","refreshing","setRefreshing","interval","setInterval","prev","random","clearInterval","StatCard","change","subtitle","_trend","isPositive","layout","style","backgroundColor","colors","primary","color","TrendingUp","TrendingDown","abs","val","toFixed","background","DollarSign","ShoppingBag","Users","delay","entries","Package","Eye","order","r","request","BulkOperationsManager","items","selectedItems","onSelectionChange","onBulkAction","itemType","columns","bulkAction","setBulkAction","showConfirmation","setShowConfirmation","isProcessing","setIsProcessing","searchTerm","setSearchTerm","filterCriteria","setFilterCriteria","progress","setProgress","fileInputRef","bulkActions","Trash2","danger","Archive","Copy","Edit3","Upload","filteredItems","item","matchesSearch","some","String","toLowerCase","matchesFilter","every","executeBulkAction","actionId","i","Search","placeholder","col","filterable","column","filterOptions","Zap","action","find","handleBulkAction","round","width","CheckSquare","Square","email","updatedAt","toLocaleDateString","AlertTriangle","accept","file","files","reader","FileReader","onload","JSON","parse","readAsText","MOCK_PRODUCTS","nameAr","subcategory","price","originalPrice","stock","rating","reviews","image","featured","bestseller","dateAdded","lastModified","CATEGORIES","subcategories","STATUS_OPTIONS","labelAr","COLOR_PRESETS","secondary","accent","surface","foreground","modern","nature","TYPOGRAPHY_PRESETS","headings","classic","minimal","elegant","LAYOUT_PRESETS","compact","containerPadding","sectionSpacing","cardPadding","borderRadius","comfortable","spacious","MOCK_REQUESTS","customerName","customerNameAr","phone","projectTitle","projectTitleAr","budget","timeline","dateSubmitted","STATUS_CONFIG","pending","Clock","in_progress","AlertCircle","completed","rejected","XCircle","MOCK_USERS","role","joinDate","lastLogin","totalSpent","avatar","ROLE_CONFIG","super_admin","ShieldCheck","admin","moderator","Shield","active","inactive","suspended","INDIA_ANALYTICS","paymentMethods","cod","percentage","upi","cards","netBanking","regions","languages","english","users","hindi","deviceTypes","mobile","desktop","tablet","topProducts","sales","hourlyTrends","hour","RECOMMENDATION_DATA","algorithms","performance","usage","lastUpdated","minSimilarity","maxRecommendations","weightFeatures","similarity","collaborativeWeight","contentWeight","categories","enabled","clicks","conversions","position","userSegments","count","strategy","AdminSecurityContext","createContext","ActivityTracker","activities","setActivities","filteredActivities","setFilteredActivities","filters","setFilters","user","resource","dateRange","riskLevel","setIsLoading","stats","setStats","mockActivities","useMemo","userId","userName","resourceId","details","ipAddress","userAgent","deviceType","affectedRecords","sessionId","extendedActivities","baseActivity","push","sort","b","loadActivities","filterActivities","calculateStats","useCallback","filtered","activity","forEach","cutoff","getTime","total","successful","failed","highRisk","uniqueUsers","Set","uniqueIPs","successRate","getRiskColor","level","getStatusColor","Activity","User","Globe","Timestamp","Action","Resource","Status","Location","Details","split","DeviceIcon","Smartphone","Tablet","Laptop","getDeviceIcon","MapPin","AnomalyDetection","anomalies","setAnomalies","isScanning","setIsScanning","settings","sensitivity","autoScan","severity","severityConfig","critical","bg","text","high","medium","low","categoryConfig","security","business","user_behavior","mockAnomalies","confidence","affectedMetric","expectedValue","actualValue","impact","recommendation","autoActions","performAnomalyDetection","newAnomaly","filteredAnomalies","anomaly","hoursDiff","getStatusIcon","updateAnomalyStatus","newStatus","Brain","Filter","severityConfig_item","categoryConfig_item","CategoryIcon","index","toLocaleTimeString","CustomDashboardBuilder","dashboards","setDashboards","widgets","w","h","isDefault","selectedDashboard","setSelectedDashboard","editMode","setEditMode","showWidgetLibrary","setShowWidgetLibrary","previewDevice","setPreviewDevice","widgetTypes","defaultSize","configurable","LineChart","PieChart","devices","Monitor","Save","exportData","exportDate","version","stringify","dashboard","newDashboard","Plus","Palette","Grid","minHeight","gridTemplateColumns","gridAutoRows","widget","widgetType","gridColumn","gridRow","Settings","removeWidget","widgetId","Layout","newWidget","max","addWidget","ThemeManager","currentTheme","setCurrentTheme","customThemes","setCustomThemes","isCreating","setIsCreating","selectedDevice","setSelectedDevice","themeEditor","setThemeEditor","textSecondary","border","warning","typography","fontFamily","fontSize","fontWeight","lineHeight","spacing","unit","container","sm","md","lg","xl","shadows","builtInThemes","Sun","Moon","savedTheme","localStorage","getItem","applyTheme","initialTheme","matchMedia","matches","savedCustomThemes","themeId","root","documentElement","setProperty","classList","add","handleThemeChange","setItem","newTheme","isCustom","updatedCustomThemes","isActive","Check","fullCSS","navigator","clipboard","writeText","copyThemeCode","exportTheme","trim","preset","LanguageManager","setLanguages","code","nativeName","flag","translationCount","direction","translations","setTranslations","en","ar","hi","selectedLanguage","setSelectedLanguage","editingKey","setEditingKey","editValue","setEditValue","searchQuery","setSearchQuery","showAddLanguage","setShowAddLanguage","newLanguage","setNewLanguage","availableLanguages","filteredTranslations","saveTranslation","totalKeys","translatedKeys","lang","cancelEditing","autoTranslate","langCode","missingKeys","englishKeys","langKeys","getMissingTranslations","newTranslations","Languages","l","exportTranslations","updated","rows","dir","startEditing","selected","ADMIN_MENU","LayoutDashboard","component","formatCurrency","MetricCard","ArrowUp","ArrowDown","PaymentMethodChart","method","RegionalPerformance","region","device","MessageSquare","product","Target","products","setProducts","filteredProducts","setFilteredProducts","selectedCategory","setSelectedCategory","selectedStatus","setSelectedStatus","selectedProducts","setSelectedProducts","exportProducts","selectedIds","p","ID","Name","Category","Price","OriginalPrice","Stock","Rating","Reviews","Featured","Bestseller","DateAdded","LastModified","json","selectedOnly","search","content","mimeType","getStatusBadge","statusConfig","out_of_stock","draft","ProductGridItem","src","alt","Edit","handleSelectProduct","productId","Star","duplicates","newProducts","confirm","DELETE","productIds","UPDATE","CREATE","originalIds","cat","opt","reduce","sum","activeTab","setActiveTab","selectedAlgorithm","setSelectedAlgorithm","showConfigModal","setShowConfigModal","StatusBadge","testing","charAt","PerformanceBar","AlgorithmCard","algorithm","CategoryRow","defaultValue","Warehouse","inventory","alerts","loading","updateStock","acknowledgeAlert","clearAlerts","updateSettings","getStockStatus","getInventorySummary","useInventory","filterType","setFilterType","showSettings","setShowSettings","editingStock","setEditingStock","stockInput","setStockInput","stored","summary","stockStatus","handleQuickAdjust","adjustment","newStock","themeClasses","height","Bell","alert","totalProducts","outOfStock","criticalStock","lowStock","inStock","stockInfo","reserved","incoming","available","in_stock","min","field","parseInt","Minus","toString","lowStockThreshold","criticalStockThreshold","enableAlerts","htmlFor","autoReorderEnabled","Truck","shipments","orderId","trackingNumber","provider","origin","destination","estimatedDelivery","deliveredAt","picked_up","in_transit","out_for_delivery","delivered","Navigation","filteredShipments","shipment","s","inTransit","totalValue","formatDate","dateString","year","month","day","minute","requests","setRequests","filteredRequests","setFilteredRequests","selectedRequest","setSelectedRequest","statusFilter","setStatusFilter","StatusIcon","handleStatusChange","requestId","req","descriptionAr","Mail","Phone","selectedPreset","setSelectedPreset","customColors","setCustomColors","selectedTypography","setSelectedTypography","selectedLayout","setSelectedLayout","previewMode","setPreviewMode","isDarkMode","setIsDarkMode","showPreview","setShowPreview","hasUnsavedChanges","setHasUnsavedChanges","isGenerating","setIsGenerating","showColorPicker","setShowColorPicker","currentSegment","handleColorChange","colorKey","ColorPicker","PreviewComponent","borderColor","randomPreset","Shuffle","handlePresetSelect","presetKey","Type","RotateCcw","setUsers","filteredUsers","setFilteredUsers","roleFilter","setRoleFilter","tr","handleRoleChange","newRole","u","hasPermission","ROLES","AVAILABLE_ROLES","selectedUser","setSelectedUser","isEditing","setIsEditing","setNewRole","showPermissions","setShowPermissions","SUPER_ADMIN","canManageRoles","PERMISSIONS","ROLES_MANAGE","USERS_VIEW","getRoleDisplayName","ADMIN","MANAGER","MODERATOR","VIEWER","CUSTOMER","getRoleColor","formatLastLogin","date","Intl","DateTimeFormat","getPermissionDisplayName","permission","userPermissions","ROLE_PERMISSIONS","Lock","oldRole","ROLE_CHANGE","targetUserId","logs","getFilteredLogs","exportLogs","clearOldLogs","startDate","endDate","showFilters","setShowFilters","selectedLog","setSelectedLog","currentPage","setCurrentPage","canViewAuditLogs","AUDIT_LOGS_VIEW","filteredLogs","log","userEmail","totalPages","ceil","paginatedLogs","handleFilterChange","formatTimestamp","second","getActionColor","LOGIN","LOGOUT","VIEW","SECURITY_EVENT","PERMISSION_CHANGE","getActionDisplayName","APPROVE","REJECT","REFUND","CANCEL","SETTINGS_CHANGE","THEME_CHANGE","handleExport","display","uniqueActions","ActionIcon","userRole","page","tabs","sessions","setSessions","setLoading","selectedSession","setSelectedSession","showDetails","setShowDetails","logSecurityEvent","SECURITY_EVENTS","context","useContext","Error","useAdminSecurity","mockSessions","browser","os","country","city","coordinates","lat","lng","startTime","lastActivity","isCurrentSession","securityScore","terminateSession","SESSION_TERMINATED","reason","terminatedBy","diffInHours","diffInDays","currentSessionId","BULK_SESSION_TERMINATION","terminatedCount","session","Cloud","defaultChecked","Key","AdminPanelContent","activeSection","setActiveSection","sidebarOpen","setSidebarOpen","logout","ActiveComponent","aside","LogOut","Menu","AdminPanel"],"mappings":"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"}